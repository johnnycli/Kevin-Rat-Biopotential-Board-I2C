ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.70
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  89:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  92:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  93:Generated_Source\PSoC4/CyLib.c **** 
  94:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  95:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  96:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  97:Generated_Source\PSoC4/CyLib.c **** *
  98:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
 101:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
 102:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 105:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 106:Generated_Source\PSoC4/CyLib.c **** *
 107:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 109:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 109 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 110:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 110 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 111:Generated_Source\PSoC4/CyLib.c **** 
 112:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 113:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 114:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 115:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 116:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** 
 119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 120:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 121:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 122:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 123:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 125 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 4


  47              		.cfi_endproc
  48              	.LFE2:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB3:
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** 
 128:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 129:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 130:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 131:Generated_Source\PSoC4/CyLib.c **** *
 132:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 133:Generated_Source\PSoC4/CyLib.c **** *
 134:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 135:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 138:Generated_Source\PSoC4/CyLib.c **** *
 139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 141:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 141 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 147:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 148:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 149:Generated_Source\PSoC4/CyLib.c **** 
 150:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 150 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 151:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 151 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE3:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 5


  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB4:
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 154:Generated_Source\PSoC4/CyLib.c **** 
 155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 160:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 161:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 164:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 165:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 166:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 167:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 168:Generated_Source\PSoC4/CyLib.c ****     *
 169:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 170:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 171:Generated_Source\PSoC4/CyLib.c ****     *
 172:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 173:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 174:Generated_Source\PSoC4/CyLib.c ****     *
 175:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 176:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 177:Generated_Source\PSoC4/CyLib.c ****     {
 178:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 179:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 180:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 183:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 185:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 186:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 189:Generated_Source\PSoC4/CyLib.c ****         {
 190:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 191:Generated_Source\PSoC4/CyLib.c **** 
 192:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 193:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 194:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 195:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 197:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 198:Generated_Source\PSoC4/CyLib.c **** 
 199:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 201:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 202:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 203:Generated_Source\PSoC4/CyLib.c ****                 {
 204:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 205:Generated_Source\PSoC4/CyLib.c ****                     {
 206:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 207:Generated_Source\PSoC4/CyLib.c ****                         break;
 208:Generated_Source\PSoC4/CyLib.c ****                     }
 209:Generated_Source\PSoC4/CyLib.c ****                 }
 210:Generated_Source\PSoC4/CyLib.c ****             #else
 211:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 212:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 213:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 214:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 215:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 216:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 217:Generated_Source\PSoC4/CyLib.c ****                 #else
 218:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 219:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 220:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 229:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 245:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 248:Generated_Source\PSoC4/CyLib.c ****             }
 249:Generated_Source\PSoC4/CyLib.c ****             else
 250:Generated_Source\PSoC4/CyLib.c ****             {
 251:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 252:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 253:Generated_Source\PSoC4/CyLib.c **** 
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 256:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 258:Generated_Source\PSoC4/CyLib.c ****             }
 259:Generated_Source\PSoC4/CyLib.c **** 
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 263:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 264:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 265:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 266:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 269:Generated_Source\PSoC4/CyLib.c ****         }
 270:Generated_Source\PSoC4/CyLib.c ****     }
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c **** 
 273:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 274:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 275:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 276:Generated_Source\PSoC4/CyLib.c ****     *
 277:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 280:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 283:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 284:Generated_Source\PSoC4/CyLib.c ****     *
 285:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 286:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 287:Generated_Source\PSoC4/CyLib.c ****     {
 288:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 289:Generated_Source\PSoC4/CyLib.c ****     }
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c **** 
 292:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 293:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 294:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 295:Generated_Source\PSoC4/CyLib.c ****     *
 296:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 297:Generated_Source\PSoC4/CyLib.c ****     *
 298:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 299:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 300:Generated_Source\PSoC4/CyLib.c ****     *
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 302:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 303:Generated_Source\PSoC4/CyLib.c ****     *
 304:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 305:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 306:Generated_Source\PSoC4/CyLib.c ****     {
 307:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 309:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 310:Generated_Source\PSoC4/CyLib.c ****     }
 311:Generated_Source\PSoC4/CyLib.c **** 
 312:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c **** 
 315:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 318:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 319:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 326:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 329:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 334:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 335:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 336:Generated_Source\PSoC4/CyLib.c ****             
 337:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 338:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 339:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 342:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 345:Generated_Source\PSoC4/CyLib.c ****             {
 346:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 347:Generated_Source\PSoC4/CyLib.c ****                 {
 348:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 349:Generated_Source\PSoC4/CyLib.c ****                     break;
 350:Generated_Source\PSoC4/CyLib.c ****                 }
 351:Generated_Source\PSoC4/CyLib.c ****             }
 352:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 353:Generated_Source\PSoC4/CyLib.c ****         
 354:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 355:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 356:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 357:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 359:Generated_Source\PSoC4/CyLib.c **** 
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****            
 362:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 363:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 364:Generated_Source\PSoC4/CyLib.c ****             
 365:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 366:Generated_Source\PSoC4/CyLib.c ****             {
 367:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 368:Generated_Source\PSoC4/CyLib.c ****                 
 369:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 370:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 372:Generated_Source\PSoC4/CyLib.c ****                 
 373:Generated_Source\PSoC4/CyLib.c ****             }
 374:Generated_Source\PSoC4/CyLib.c ****             else
 375:Generated_Source\PSoC4/CyLib.c ****             {
 376:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 377:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 378:Generated_Source\PSoC4/CyLib.c **** 
 379:Generated_Source\PSoC4/CyLib.c ****             }
 380:Generated_Source\PSoC4/CyLib.c **** 
 381:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 382:Generated_Source\PSoC4/CyLib.c ****             {
 383:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 384:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 385:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 386:Generated_Source\PSoC4/CyLib.c ****             }
 387:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 388:Generated_Source\PSoC4/CyLib.c ****             {
 389:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 390:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 391:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 392:Generated_Source\PSoC4/CyLib.c ****             }
 393:Generated_Source\PSoC4/CyLib.c ****             else
 394:Generated_Source\PSoC4/CyLib.c ****             {
 395:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 396:Generated_Source\PSoC4/CyLib.c ****             }
 397:Generated_Source\PSoC4/CyLib.c ****             
 398:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 399:Generated_Source\PSoC4/CyLib.c **** 
 400:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 401:Generated_Source\PSoC4/CyLib.c ****     }
 402:Generated_Source\PSoC4/CyLib.c **** 
 403:Generated_Source\PSoC4/CyLib.c **** 
 404:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 406:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/CyLib.c ****     *
 408:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 409:Generated_Source\PSoC4/CyLib.c ****     *
 410:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 411:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 412:Generated_Source\PSoC4/CyLib.c ****     *
 413:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 414:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 415:Generated_Source\PSoC4/CyLib.c ****     *
 416:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 418:Generated_Source\PSoC4/CyLib.c ****     {
 419:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 420:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 421:Generated_Source\PSoC4/CyLib.c ****             
 422:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 423:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 424:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 427:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 430:Generated_Source\PSoC4/CyLib.c ****             {
 431:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 432:Generated_Source\PSoC4/CyLib.c ****                 {
 433:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 434:Generated_Source\PSoC4/CyLib.c ****                     break;
 435:Generated_Source\PSoC4/CyLib.c ****                 }
 436:Generated_Source\PSoC4/CyLib.c ****             }           
 437:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 438:Generated_Source\PSoC4/CyLib.c ****         
 439:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 440:Generated_Source\PSoC4/CyLib.c **** 
 441:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 442:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 443:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 444:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 445:Generated_Source\PSoC4/CyLib.c **** 
 446:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 447:Generated_Source\PSoC4/CyLib.c ****             {
 448:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 449:Generated_Source\PSoC4/CyLib.c ****             }
 450:Generated_Source\PSoC4/CyLib.c ****             
 451:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 452:Generated_Source\PSoC4/CyLib.c ****             
 453:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 454:Generated_Source\PSoC4/CyLib.c ****     }
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 459:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c ****     *
 461:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 462:Generated_Source\PSoC4/CyLib.c ****     *
 463:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 464:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 465:Generated_Source\PSoC4/CyLib.c ****     *
 466:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 467:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 468:Generated_Source\PSoC4/CyLib.c ****     *
 469:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 470:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 471:Generated_Source\PSoC4/CyLib.c ****     {
 472:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 473:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 474:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 475:Generated_Source\PSoC4/CyLib.c ****     }
 476:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 477:Generated_Source\PSoC4/CyLib.c **** 
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c **** 
 480:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 482:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 483:Generated_Source\PSoC4/CyLib.c **** *
 484:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 11


 485:Generated_Source\PSoC4/CyLib.c **** *
 486:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 487:Generated_Source\PSoC4/CyLib.c **** *
 488:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 489:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 490:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 491:Generated_Source\PSoC4/CyLib.c **** *
 492:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 493:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 494:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 495:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 496:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 497:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 498:Generated_Source\PSoC4/CyLib.c **** *
 499:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 500:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 501:Generated_Source\PSoC4/CyLib.c **** *
 502:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 503:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 504:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 505:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 506:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 507:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 508:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 509:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 510:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 513:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 514:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 514 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 515:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 516:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 517:Generated_Source\PSoC4/CyLib.c ****     
 518:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 519:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 520:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 522 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 525:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 526:Generated_Source\PSoC4/CyLib.c ****     {
 527:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 528:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 12


 529:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 530:Generated_Source\PSoC4/CyLib.c ****         
 531:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 532:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 533:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 534:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 535:Generated_Source\PSoC4/CyLib.c ****         
 536:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 537:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 538:Generated_Source\PSoC4/CyLib.c ****         
 539:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 540:Generated_Source\PSoC4/CyLib.c ****         {
 541:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 543:Generated_Source\PSoC4/CyLib.c ****         }
 544:Generated_Source\PSoC4/CyLib.c ****         
 545:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 546:Generated_Source\PSoC4/CyLib.c ****     }
 547:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 549 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 550:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 551:Generated_Source\PSoC4/CyLib.c **** 
 552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 553:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 554:Generated_Source\PSoC4/CyLib.c ****     {
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 556:Generated_Source\PSoC4/CyLib.c ****     }
 557:Generated_Source\PSoC4/CyLib.c ****     else
 558:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 559:Generated_Source\PSoC4/CyLib.c ****     {
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 560 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 561:Generated_Source\PSoC4/CyLib.c ****     }   
 562:Generated_Source\PSoC4/CyLib.c ****     
 563:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 563 0
 112 0014 1460     		str	r4, [r2]
 564:Generated_Source\PSoC4/CyLib.c ****     
 565:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 565 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 566:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 566 0
 117              		@ sp needed
 118              	.LVL6:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 13


 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE4:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB5:
 567:Generated_Source\PSoC4/CyLib.c **** 
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 571:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 574:Generated_Source\PSoC4/CyLib.c **** *
 575:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 577:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 578:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 579:Generated_Source\PSoC4/CyLib.c **** *
 580:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 581:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 582:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 586:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 586 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 587:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 588:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 588 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 589:Generated_Source\PSoC4/CyLib.c ****         {
 590:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 590 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 14


 152 0012 0AE0     		b	.L10
 153              	.L11:
 591:Generated_Source\PSoC4/CyLib.c ****         }
 592:Generated_Source\PSoC4/CyLib.c ****         else
 593:Generated_Source\PSoC4/CyLib.c ****         {
 594:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 594 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 595:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 596:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 596 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 597:Generated_Source\PSoC4/CyLib.c ****         }
 598:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 599:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 600:Generated_Source\PSoC4/CyLib.c ****         {
 601:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 602:Generated_Source\PSoC4/CyLib.c ****         }
 603:Generated_Source\PSoC4/CyLib.c ****         else
 604:Generated_Source\PSoC4/CyLib.c ****         {
 605:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 606:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 607:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 608:Generated_Source\PSoC4/CyLib.c ****         }
 609:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 610:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 610 0
 169              		@ sp needed
 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE5:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB6:
 611:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 15


 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 616:Generated_Source\PSoC4/CyLib.c **** *
 617:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 618:Generated_Source\PSoC4/CyLib.c **** *
 619:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 623:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 623 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 624:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 625:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 626:Generated_Source\PSoC4/CyLib.c **** 
 627:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 627 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 628:Generated_Source\PSoC4/CyLib.c **** 
 629:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 630:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 631:Generated_Source\PSoC4/CyLib.c ****     {
 632:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 633:Generated_Source\PSoC4/CyLib.c ****     }
 634:Generated_Source\PSoC4/CyLib.c ****     else
 635:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 636:Generated_Source\PSoC4/CyLib.c ****     {
 637:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 637 0
 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 640:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 641:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 642:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 643:Generated_Source\PSoC4/CyLib.c ****         
 644:Generated_Source\PSoC4/CyLib.c ****     }
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 646 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 16


 649:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 649 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE6:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB7:
 650:Generated_Source\PSoC4/CyLib.c **** 
 651:Generated_Source\PSoC4/CyLib.c **** 
 652:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 653:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 654:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 657:Generated_Source\PSoC4/CyLib.c **** *
 658:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 659:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 660:Generated_Source\PSoC4/CyLib.c **** *
 661:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 662:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 663:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 664:Generated_Source\PSoC4/CyLib.c **** *
 665:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 666:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 667:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 668:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 669:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 670:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 671:Generated_Source\PSoC4/CyLib.c **** *
 672:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 673:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 674:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 675:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 676:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 677:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 678:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 679:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 680:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 683:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 684:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 684 0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 17


 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 685:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 686:Generated_Source\PSoC4/CyLib.c **** 
 687:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 687 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 689 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 691:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 691 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 690 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 689:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 689 0
 257 001e 2360     		str	r3, [r4]
 692:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 693:Generated_Source\PSoC4/CyLib.c **** 
 694:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 694 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 695:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 695 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE7:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysClkEcoStop,"ax",%progbits
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 18


 273              		.align	2
 274              		.global	CySysClkEcoStop
 275              		.code	16
 276              		.thumb_func
 277              		.type	CySysClkEcoStop, %function
 278              	CySysClkEcoStop:
 279              	.LFB10:
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c **** 
 698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 701:Generated_Source\PSoC4/CyLib.c **** *
 702:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 703:Generated_Source\PSoC4/CyLib.c **** *
 704:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 705:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 706:Generated_Source\PSoC4/CyLib.c **** *
 707:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 708:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 709:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 710:Generated_Source\PSoC4/CyLib.c **** *
 711:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 712:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 713:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 714:Generated_Source\PSoC4/CyLib.c **** *
 715:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 716:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 717:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 718:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 719:Generated_Source\PSoC4/CyLib.c **** *
 720:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 721:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 722:Generated_Source\PSoC4/CyLib.c **** *
 723:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 724:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 725:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 726:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 727:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 728:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 731:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 732:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 735:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 736:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 737:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 738:Generated_Source\PSoC4/CyLib.c **** *
 739:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 740:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 741:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 742:Generated_Source\PSoC4/CyLib.c ****     {
 743:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 744:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 745:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 19


 746:Generated_Source\PSoC4/CyLib.c ****         #else
 747:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 748:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 749:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 750:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 751:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 754:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 755:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 756:Generated_Source\PSoC4/CyLib.c **** 
 757:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 758:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 759:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 760:Generated_Source\PSoC4/CyLib.c **** 
 761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c **** 
 764:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 765:Generated_Source\PSoC4/CyLib.c **** 
 766:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 767:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 768:Generated_Source\PSoC4/CyLib.c ****             {
 769:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 770:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 771:Generated_Source\PSoC4/CyLib.c ****             }
 772:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** 
 775:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 776:Generated_Source\PSoC4/CyLib.c **** 
 777:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 778:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 779:Generated_Source\PSoC4/CyLib.c ****                 {
 780:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 781:Generated_Source\PSoC4/CyLib.c **** 
 782:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 783:Generated_Source\PSoC4/CyLib.c ****                 {
 784:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 785:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 786:Generated_Source\PSoC4/CyLib.c ****                 }
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 789:Generated_Source\PSoC4/CyLib.c ****                 }
 790:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c **** 
 795:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 796:Generated_Source\PSoC4/CyLib.c **** 
 797:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 798:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 799:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 800:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 801:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 802:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 20


 803:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 804:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 805:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 806:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 809:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 810:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 815:Generated_Source\PSoC4/CyLib.c ****         {
 816:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 817:Generated_Source\PSoC4/CyLib.c ****             {
 818:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 819:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 822:Generated_Source\PSoC4/CyLib.c ****             {
 823:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 824:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 825:Generated_Source\PSoC4/CyLib.c ****             }
 826:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 827:Generated_Source\PSoC4/CyLib.c ****             {
 828:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 829:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 830:Generated_Source\PSoC4/CyLib.c ****             }
 831:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 832:Generated_Source\PSoC4/CyLib.c ****             {
 833:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 834:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 835:Generated_Source\PSoC4/CyLib.c ****             }
 836:Generated_Source\PSoC4/CyLib.c ****             else
 837:Generated_Source\PSoC4/CyLib.c ****             {
 838:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 839:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 840:Generated_Source\PSoC4/CyLib.c ****             }
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 843:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 844:Generated_Source\PSoC4/CyLib.c **** 
 845:Generated_Source\PSoC4/CyLib.c **** 
 846:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 847:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 848:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 849:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 850:Generated_Source\PSoC4/CyLib.c ****             *
 851:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 852:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 853:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 854:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 855:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 856:Generated_Source\PSoC4/CyLib.c ****             {
 857:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 858:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 859:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 21


 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 864:Generated_Source\PSoC4/CyLib.c ****             }
 865:Generated_Source\PSoC4/CyLib.c ****             else
 866:Generated_Source\PSoC4/CyLib.c ****             {
 867:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 868:Generated_Source\PSoC4/CyLib.c ****             }
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 872:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 873:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 874:Generated_Source\PSoC4/CyLib.c ****             *
 875:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 876:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 877:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 878:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 879:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 880:Generated_Source\PSoC4/CyLib.c ****             {
 881:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 882:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 883:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 884:Generated_Source\PSoC4/CyLib.c ****             }
 885:Generated_Source\PSoC4/CyLib.c **** 
 886:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 887:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 888:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 889:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 890:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 891:Generated_Source\PSoC4/CyLib.c **** 
 892:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 895:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 896:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 897:Generated_Source\PSoC4/CyLib.c ****             }
 898:Generated_Source\PSoC4/CyLib.c ****         }
 899:Generated_Source\PSoC4/CyLib.c ****         else
 900:Generated_Source\PSoC4/CyLib.c ****         {
 901:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 902:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 903:Generated_Source\PSoC4/CyLib.c ****         }
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 908:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 909:Generated_Source\PSoC4/CyLib.c ****             {
 910:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 913:Generated_Source\PSoC4/CyLib.c **** 
 914:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 915:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 916:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 22


 917:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 918:Generated_Source\PSoC4/CyLib.c ****             }
 919:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 922:Generated_Source\PSoC4/CyLib.c ****     }
 923:Generated_Source\PSoC4/CyLib.c **** 
 924:Generated_Source\PSoC4/CyLib.c **** #else
 925:Generated_Source\PSoC4/CyLib.c **** 
 926:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 927:Generated_Source\PSoC4/CyLib.c ****     {
 928:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 929:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 932:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 933:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 937:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 940:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 941:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 942:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 943:Generated_Source\PSoC4/CyLib.c ****         #else
 944:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 945:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 946:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 947:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 948:Generated_Source\PSoC4/CyLib.c ****         {
 949:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 952:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 953:Generated_Source\PSoC4/CyLib.c ****                 {
 954:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 955:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 956:Generated_Source\PSoC4/CyLib.c ****                 }
 957:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 958:Generated_Source\PSoC4/CyLib.c **** 
 959:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 960:Generated_Source\PSoC4/CyLib.c **** 
 961:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 962:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 963:Generated_Source\PSoC4/CyLib.c ****                     {
 964:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 967:Generated_Source\PSoC4/CyLib.c ****                     {
 968:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 969:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 970:Generated_Source\PSoC4/CyLib.c ****                     }
 971:Generated_Source\PSoC4/CyLib.c **** 
 972:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 973:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 23


 974:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 975:Generated_Source\PSoC4/CyLib.c **** 
 976:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c **** 
 979:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 980:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 984:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 985:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 986:Generated_Source\PSoC4/CyLib.c ****                 {
 987:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 988:Generated_Source\PSoC4/CyLib.c ****                 }
 989:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 990:Generated_Source\PSoC4/CyLib.c ****                 {
 991:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 992:Generated_Source\PSoC4/CyLib.c ****                 }
 993:Generated_Source\PSoC4/CyLib.c ****                 else
 994:Generated_Source\PSoC4/CyLib.c ****                 {
 995:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 996:Generated_Source\PSoC4/CyLib.c ****                 }
 997:Generated_Source\PSoC4/CyLib.c ****             #else
 998:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 999:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1000:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1003:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1007:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1012:Generated_Source\PSoC4/CyLib.c ****             {
1013:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1014:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1015:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1018:Generated_Source\PSoC4/CyLib.c **** 
1019:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1020:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1021:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1022:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1023:Generated_Source\PSoC4/CyLib.c ****             }
1024:Generated_Source\PSoC4/CyLib.c **** 
1025:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1026:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1027:Generated_Source\PSoC4/CyLib.c ****                 {
1028:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1029:Generated_Source\PSoC4/CyLib.c ****                 }
1030:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 24


1031:Generated_Source\PSoC4/CyLib.c ****         
1032:Generated_Source\PSoC4/CyLib.c ****         
1033:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1034:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1035:Generated_Source\PSoC4/CyLib.c ****                 {
1036:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1037:Generated_Source\PSoC4/CyLib.c ****                 }
1038:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1039:Generated_Source\PSoC4/CyLib.c **** 
1040:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1041:Generated_Source\PSoC4/CyLib.c ****         }
1042:Generated_Source\PSoC4/CyLib.c ****         else
1043:Generated_Source\PSoC4/CyLib.c ****         {
1044:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1045:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1046:Generated_Source\PSoC4/CyLib.c ****         }
1047:Generated_Source\PSoC4/CyLib.c ****     }
1048:Generated_Source\PSoC4/CyLib.c **** 
1049:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1053:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1054:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1055:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1056:Generated_Source\PSoC4/CyLib.c ****     *
1057:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1058:Generated_Source\PSoC4/CyLib.c ****     *
1059:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1060:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1061:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1062:Generated_Source\PSoC4/CyLib.c ****     *
1063:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1064:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1065:Generated_Source\PSoC4/CyLib.c ****     *
1066:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1067:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1068:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1069:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1070:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1071:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1072:Generated_Source\PSoC4/CyLib.c ****     *
1073:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1074:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1075:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1076:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1077:Generated_Source\PSoC4/CyLib.c ****     *
1078:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1079:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1080:Generated_Source\PSoC4/CyLib.c ****     {
1081:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1082:Generated_Source\PSoC4/CyLib.c **** 
1083:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1086:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1087:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 25


1088:Generated_Source\PSoC4/CyLib.c **** 
1089:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1090:Generated_Source\PSoC4/CyLib.c ****     }
1091:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c **** 
1094:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1095:Generated_Source\PSoC4/CyLib.c **** 
1096:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1097:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1098:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1101:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1102:Generated_Source\PSoC4/CyLib.c ****     *
1103:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1104:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1105:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1106:Generated_Source\PSoC4/CyLib.c ****     * called.
1107:Generated_Source\PSoC4/CyLib.c ****     *
1108:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1109:Generated_Source\PSoC4/CyLib.c ****     *
1110:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1111:Generated_Source\PSoC4/CyLib.c ****     *
1112:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1113:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1114:Generated_Source\PSoC4/CyLib.c ****     *
1115:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1116:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1117:Generated_Source\PSoC4/CyLib.c ****     *
1118:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1119:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1120:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1121:Generated_Source\PSoC4/CyLib.c ****     *
1122:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1123:Generated_Source\PSoC4/CyLib.c ****     *
1124:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1125:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1126:Generated_Source\PSoC4/CyLib.c ****     {
1127:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1128:Generated_Source\PSoC4/CyLib.c **** 
1129:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1130:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1132:Generated_Source\PSoC4/CyLib.c **** 
1133:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1135:Generated_Source\PSoC4/CyLib.c **** 
1136:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1137:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1138:Generated_Source\PSoC4/CyLib.c ****         
1139:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1140:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1141:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1142:Generated_Source\PSoC4/CyLib.c ****             
1143:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1144:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 26


1145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1146:Generated_Source\PSoC4/CyLib.c ****             }
1147:Generated_Source\PSoC4/CyLib.c ****             else
1148:Generated_Source\PSoC4/CyLib.c ****             {
1149:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1150:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1151:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1152:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1153:Generated_Source\PSoC4/CyLib.c ****             
1154:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1155:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1156:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1157:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1158:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1159:Generated_Source\PSoC4/CyLib.c ****                 
1160:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1161:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1162:Generated_Source\PSoC4/CyLib.c ****                 {
1163:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1164:Generated_Source\PSoC4/CyLib.c ****                 }
1165:Generated_Source\PSoC4/CyLib.c ****                 
1166:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1167:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1168:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1169:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1170:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1173:Generated_Source\PSoC4/CyLib.c ****                 {
1174:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1175:Generated_Source\PSoC4/CyLib.c ****                 }
1176:Generated_Source\PSoC4/CyLib.c **** 
1177:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1178:Generated_Source\PSoC4/CyLib.c ****                 {
1179:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1180:Generated_Source\PSoC4/CyLib.c ****                 }
1181:Generated_Source\PSoC4/CyLib.c ****                 
1182:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1183:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1188:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1189:Generated_Source\PSoC4/CyLib.c ****                 #else
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1191:Generated_Source\PSoC4/CyLib.c ****                 #endif
1192:Generated_Source\PSoC4/CyLib.c ****                 
1193:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1195:Generated_Source\PSoC4/CyLib.c ****                 {
1196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1197:Generated_Source\PSoC4/CyLib.c ****                 }
1198:Generated_Source\PSoC4/CyLib.c ****                 
1199:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1200:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1201:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 27


1202:Generated_Source\PSoC4/CyLib.c ****                                             
1203:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c **** 
1208:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1209:Generated_Source\PSoC4/CyLib.c ****                 
1210:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1213:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1214:Generated_Source\PSoC4/CyLib.c ****                 
1215:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1216:Generated_Source\PSoC4/CyLib.c ****                 {
1217:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1218:Generated_Source\PSoC4/CyLib.c ****                 }
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1222:Generated_Source\PSoC4/CyLib.c ****                 
1223:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1224:Generated_Source\PSoC4/CyLib.c ****                 {
1225:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1226:Generated_Source\PSoC4/CyLib.c ****                 }
1227:Generated_Source\PSoC4/CyLib.c ****                 
1228:Generated_Source\PSoC4/CyLib.c ****             }
1229:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1230:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1231:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1232:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1233:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1236:Generated_Source\PSoC4/CyLib.c ****         {
1237:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1238:Generated_Source\PSoC4/CyLib.c **** 
1239:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1240:Generated_Source\PSoC4/CyLib.c ****             {
1241:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1242:Generated_Source\PSoC4/CyLib.c **** 
1243:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1244:Generated_Source\PSoC4/CyLib.c ****                 {
1245:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1246:Generated_Source\PSoC4/CyLib.c ****                     break;
1247:Generated_Source\PSoC4/CyLib.c ****                 }
1248:Generated_Source\PSoC4/CyLib.c ****             }
1249:Generated_Source\PSoC4/CyLib.c **** 
1250:Generated_Source\PSoC4/CyLib.c ****         }
1251:Generated_Source\PSoC4/CyLib.c **** 
1252:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1253:Generated_Source\PSoC4/CyLib.c ****     }
1254:Generated_Source\PSoC4/CyLib.c **** 
1255:Generated_Source\PSoC4/CyLib.c **** 
1256:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1257:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1258:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 28


1259:Generated_Source\PSoC4/CyLib.c ****     *
1260:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1261:Generated_Source\PSoC4/CyLib.c ****     *
1262:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1263:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1264:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1265:Generated_Source\PSoC4/CyLib.c ****     *
1266:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1267:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1268:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 1268 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
1269:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1270:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1271:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 285              		.loc 1 1271 0
 286 0000 054A     		ldr	r2, .L22
 287 0002 1368     		ldr	r3, [r2]
 288 0004 0121     		movs	r1, #1
 289 0006 8B43     		bics	r3, r1
 290 0008 1360     		str	r3, [r2]
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1274:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 291              		.loc 1 1274 0
 292 000a 044A     		ldr	r2, .L22+4
 293 000c 1168     		ldr	r1, [r2]
 294 000e 044B     		ldr	r3, .L22+8
 295 0010 0B40     		ands	r3, r1
 296 0012 1360     		str	r3, [r2]
1275:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1276:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1277:Generated_Source\PSoC4/CyLib.c ****         #else
1278:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1279:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1280:Generated_Source\PSoC4/CyLib.c ****     }
 297              		.loc 1 1280 0
 298              		@ sp needed
 299 0014 7047     		bx	lr
 300              	.L23:
 301 0016 C046     		.align	2
 302              	.L22:
 303 0018 60F02E40 		.word	1076818016
 304 001c 10002E40 		.word	1076756496
 305 0020 FF7FFFFF 		.word	-32769
 306              		.cfi_endproc
 307              	.LFE10:
 308              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 309              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 310              		.align	2
 311              		.global	CySysClkEcoReadStatus
 312              		.code	16
 313              		.thumb_func
 314              		.type	CySysClkEcoReadStatus, %function
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 29


 315              	CySysClkEcoReadStatus:
 316              	.LFB11:
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c **** 
1283:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1284:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1285:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1286:Generated_Source\PSoC4/CyLib.c ****     *
1287:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1288:Generated_Source\PSoC4/CyLib.c ****     *
1289:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1290:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1293:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1294:Generated_Source\PSoC4/CyLib.c ****     *
1295:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1296:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1297:Generated_Source\PSoC4/CyLib.c ****     *
1298:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1299:Generated_Source\PSoC4/CyLib.c ****     *
1300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1302:Generated_Source\PSoC4/CyLib.c ****     {
 317              		.loc 1 1302 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
1303:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1304:Generated_Source\PSoC4/CyLib.c **** 
1305:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1306:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 322              		.loc 1 1306 0
 323 0000 024B     		ldr	r3, .L25
 324 0002 1B68     		ldr	r3, [r3]
 325 0004 0120     		movs	r0, #1
 326 0006 1840     		ands	r0, r3
 327              	.LVL16:
1307:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1308:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1309:Generated_Source\PSoC4/CyLib.c **** 
1310:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1311:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1312:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1313:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1314:Generated_Source\PSoC4/CyLib.c ****         #else
1315:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1316:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1319:Generated_Source\PSoC4/CyLib.c ****     }
 328              		.loc 1 1319 0
 329              		@ sp needed
 330 0008 7047     		bx	lr
 331              	.L26:
 332 000a C046     		.align	2
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 30


 333              	.L25:
 334 000c 0C002E40 		.word	1076756492
 335              		.cfi_endproc
 336              	.LFE11:
 337              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 338              		.section	.text.CySysLvdDisable,"ax",%progbits
 339              		.align	2
 340              		.global	CySysLvdDisable
 341              		.code	16
 342              		.thumb_func
 343              		.type	CySysLvdDisable, %function
 344              	CySysLvdDisable:
 345              	.LFB14:
1320:Generated_Source\PSoC4/CyLib.c **** 
1321:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1322:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1323:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1324:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLib.c ****         *
1326:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1327:Generated_Source\PSoC4/CyLib.c ****         *
1328:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1329:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1330:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1331:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1332:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1333:Generated_Source\PSoC4/CyLib.c ****         *
1334:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1335:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1336:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1337:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1338:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1339:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1340:Generated_Source\PSoC4/CyLib.c ****         *
1341:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1342:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1343:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1344:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1345:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1346:Generated_Source\PSoC4/CyLib.c ****         *
1347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1349:Generated_Source\PSoC4/CyLib.c ****         {
1350:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1353:Generated_Source\PSoC4/CyLib.c ****             {
1354:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1355:Generated_Source\PSoC4/CyLib.c **** 
1356:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1357:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1360:Generated_Source\PSoC4/CyLib.c ****             }
1361:Generated_Source\PSoC4/CyLib.c ****             else
1362:Generated_Source\PSoC4/CyLib.c ****             {
1363:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 31


1364:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1365:Generated_Source\PSoC4/CyLib.c ****             }
1366:Generated_Source\PSoC4/CyLib.c ****         }
1367:Generated_Source\PSoC4/CyLib.c **** 
1368:Generated_Source\PSoC4/CyLib.c ****     #else
1369:Generated_Source\PSoC4/CyLib.c **** 
1370:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1371:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1372:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1375:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1376:Generated_Source\PSoC4/CyLib.c ****         *
1377:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1378:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1381:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1382:Generated_Source\PSoC4/CyLib.c ****         *
1383:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1384:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1385:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1386:Generated_Source\PSoC4/CyLib.c ****         *
1387:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1388:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1389:Generated_Source\PSoC4/CyLib.c ****         *
1390:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1391:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1392:Generated_Source\PSoC4/CyLib.c ****         *
1393:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1394:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1395:Generated_Source\PSoC4/CyLib.c ****         *
1396:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1397:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1398:Generated_Source\PSoC4/CyLib.c ****         *
1399:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1400:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1401:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1402:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1403:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1406:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1407:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1408:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1409:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1410:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1411:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1412:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1413:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1414:Generated_Source\PSoC4/CyLib.c ****         *
1415:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1416:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1417:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1418:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1419:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1420:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 32


1421:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1428:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1429:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1430:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1437:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1438:Generated_Source\PSoC4/CyLib.c ****         {
1439:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1440:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1441:Generated_Source\PSoC4/CyLib.c **** 
1442:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1445:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1446:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1447:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1450:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1451:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1452:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1453:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1454:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1455:Generated_Source\PSoC4/CyLib.c **** 
1456:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1457:Generated_Source\PSoC4/CyLib.c **** 
1458:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1459:Generated_Source\PSoC4/CyLib.c ****         }
1460:Generated_Source\PSoC4/CyLib.c **** 
1461:Generated_Source\PSoC4/CyLib.c **** 
1462:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1463:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1464:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1465:Generated_Source\PSoC4/CyLib.c ****         *
1466:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1467:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1468:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1471:Generated_Source\PSoC4/CyLib.c ****         *
1472:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1473:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1474:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1475:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1476:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1477:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 33


1478:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1479:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1480:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1481:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1482:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1483:Generated_Source\PSoC4/CyLib.c ****         *
1484:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1485:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1486:Generated_Source\PSoC4/CyLib.c ****         *
1487:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1488:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1489:Generated_Source\PSoC4/CyLib.c ****         {
1490:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1493:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1494:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1495:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1496:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1497:Generated_Source\PSoC4/CyLib.c **** 
1498:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c **** 
1501:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1502:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1503:Generated_Source\PSoC4/CyLib.c ****             {
1504:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1505:Generated_Source\PSoC4/CyLib.c ****             }
1506:Generated_Source\PSoC4/CyLib.c ****             else
1507:Generated_Source\PSoC4/CyLib.c ****             {
1508:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1509:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1512:Generated_Source\PSoC4/CyLib.c ****                 {
1513:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1514:Generated_Source\PSoC4/CyLib.c ****                 }
1515:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1516:Generated_Source\PSoC4/CyLib.c ****                 {
1517:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1518:Generated_Source\PSoC4/CyLib.c ****                 }
1519:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1520:Generated_Source\PSoC4/CyLib.c ****                 {
1521:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1522:Generated_Source\PSoC4/CyLib.c ****                 }
1523:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1524:Generated_Source\PSoC4/CyLib.c ****                 {
1525:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1526:Generated_Source\PSoC4/CyLib.c ****                 }
1527:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1528:Generated_Source\PSoC4/CyLib.c ****                 {
1529:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1530:Generated_Source\PSoC4/CyLib.c ****                 }
1531:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1532:Generated_Source\PSoC4/CyLib.c ****                 {
1533:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1534:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 34


1535:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1536:Generated_Source\PSoC4/CyLib.c ****                 {
1537:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1538:Generated_Source\PSoC4/CyLib.c ****                 }
1539:Generated_Source\PSoC4/CyLib.c ****                 else
1540:Generated_Source\PSoC4/CyLib.c ****                 {
1541:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1542:Generated_Source\PSoC4/CyLib.c ****                 }
1543:Generated_Source\PSoC4/CyLib.c **** 
1544:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1545:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1548:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1549:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1552:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1553:Generated_Source\PSoC4/CyLib.c ****                 }
1554:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1555:Generated_Source\PSoC4/CyLib.c ****                 {
1556:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1557:Generated_Source\PSoC4/CyLib.c ****                 }
1558:Generated_Source\PSoC4/CyLib.c ****                 else
1559:Generated_Source\PSoC4/CyLib.c ****                 {
1560:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1561:Generated_Source\PSoC4/CyLib.c ****                 }
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1564:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1565:Generated_Source\PSoC4/CyLib.c ****                 {
1566:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1567:Generated_Source\PSoC4/CyLib.c ****                 }
1568:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1569:Generated_Source\PSoC4/CyLib.c ****                 {
1570:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1571:Generated_Source\PSoC4/CyLib.c ****                 }
1572:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1573:Generated_Source\PSoC4/CyLib.c ****                 {
1574:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1575:Generated_Source\PSoC4/CyLib.c ****                 }
1576:Generated_Source\PSoC4/CyLib.c ****                 else
1577:Generated_Source\PSoC4/CyLib.c ****                 {
1578:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1582:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1583:Generated_Source\PSoC4/CyLib.c **** 
1584:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1585:Generated_Source\PSoC4/CyLib.c **** 
1586:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1587:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1588:Generated_Source\PSoC4/CyLib.c ****                 {
1589:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1590:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1591:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 35


1592:Generated_Source\PSoC4/CyLib.c ****                 else
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1595:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1596:Generated_Source\PSoC4/CyLib.c ****                     */
1597:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1598:Generated_Source\PSoC4/CyLib.c ****                 }
1599:Generated_Source\PSoC4/CyLib.c ****             }
1600:Generated_Source\PSoC4/CyLib.c **** 
1601:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1602:Generated_Source\PSoC4/CyLib.c ****         }
1603:Generated_Source\PSoC4/CyLib.c **** 
1604:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1605:Generated_Source\PSoC4/CyLib.c **** 
1606:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1607:Generated_Source\PSoC4/CyLib.c **** 
1608:Generated_Source\PSoC4/CyLib.c **** 
1609:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1610:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1611:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1612:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1613:Generated_Source\PSoC4/CyLib.c ****     *
1614:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1615:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1616:Generated_Source\PSoC4/CyLib.c ****     *
1617:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1618:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1619:Generated_Source\PSoC4/CyLib.c ****     *
1620:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1621:Generated_Source\PSoC4/CyLib.c ****     *
1622:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1623:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1624:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1625:Generated_Source\PSoC4/CyLib.c ****     *
1626:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1627:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1628:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1629:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1632:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1633:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1634:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1635:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1636:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1639:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1640:Generated_Source\PSoC4/CyLib.c ****     {
1641:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1642:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1643:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1644:Generated_Source\PSoC4/CyLib.c **** 
1645:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1646:Generated_Source\PSoC4/CyLib.c ****         {
1647:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1648:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 36


1649:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1650:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1651:Generated_Source\PSoC4/CyLib.c **** 
1652:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1653:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1654:Generated_Source\PSoC4/CyLib.c **** 
1655:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1658:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1659:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1660:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1661:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1662:Generated_Source\PSoC4/CyLib.c **** 
1663:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1664:Generated_Source\PSoC4/CyLib.c ****             {
1665:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1668:Generated_Source\PSoC4/CyLib.c ****                 {
1669:Generated_Source\PSoC4/CyLib.c **** 
1670:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1671:Generated_Source\PSoC4/CyLib.c ****                     {
1672:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1673:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1674:Generated_Source\PSoC4/CyLib.c ****                         break;
1675:Generated_Source\PSoC4/CyLib.c ****                     }
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1678:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c ****         }
1682:Generated_Source\PSoC4/CyLib.c ****         else
1683:Generated_Source\PSoC4/CyLib.c ****         {
1684:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1685:Generated_Source\PSoC4/CyLib.c ****         }
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1688:Generated_Source\PSoC4/CyLib.c ****     }
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** 
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1696:Generated_Source\PSoC4/CyLib.c ****     *
1697:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1698:Generated_Source\PSoC4/CyLib.c ****     *
1699:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1700:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1701:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1704:Generated_Source\PSoC4/CyLib.c ****     *
1705:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 37


1706:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1707:Generated_Source\PSoC4/CyLib.c ****     {
1708:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1709:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1710:Generated_Source\PSoC4/CyLib.c **** 
1711:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1714:Generated_Source\PSoC4/CyLib.c **** 
1715:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1716:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1717:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1718:Generated_Source\PSoC4/CyLib.c ****         {
1719:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1720:Generated_Source\PSoC4/CyLib.c ****         }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1723:Generated_Source\PSoC4/CyLib.c **** 
1724:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1725:Generated_Source\PSoC4/CyLib.c ****     }
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1734:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1737:Generated_Source\PSoC4/CyLib.c ****     *
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1739:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1740:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1743:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1744:Generated_Source\PSoC4/CyLib.c ****     {
1745:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1748:Generated_Source\PSoC4/CyLib.c ****         {
1749:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1750:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1751:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c ****     }
1754:Generated_Source\PSoC4/CyLib.c **** 
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1757:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1758:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1761:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1762:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 38


1763:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1766:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1775:Generated_Source\PSoC4/CyLib.c ****     * divider.
1776:Generated_Source\PSoC4/CyLib.c ****     *
1777:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1778:Generated_Source\PSoC4/CyLib.c ****     *
1779:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1780:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1781:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1784:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1785:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1788:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1789:Generated_Source\PSoC4/CyLib.c ****     {
1790:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1791:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1792:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1793:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1794:Generated_Source\PSoC4/CyLib.c **** 
1795:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1796:Generated_Source\PSoC4/CyLib.c **** 
1797:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1798:Generated_Source\PSoC4/CyLib.c **** 
1799:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1800:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1801:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1802:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1803:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1804:Generated_Source\PSoC4/CyLib.c ****         {
1805:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1806:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1807:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1808:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1809:Generated_Source\PSoC4/CyLib.c **** 
1810:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1811:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1812:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1815:Generated_Source\PSoC4/CyLib.c **** 
1816:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1817:Generated_Source\PSoC4/CyLib.c ****         }
1818:Generated_Source\PSoC4/CyLib.c **** 
1819:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 39


1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1822:Generated_Source\PSoC4/CyLib.c ****     }
1823:Generated_Source\PSoC4/CyLib.c **** 
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1826:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1827:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1828:Generated_Source\PSoC4/CyLib.c ****     *
1829:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1830:Generated_Source\PSoC4/CyLib.c ****     *
1831:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1832:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1833:Generated_Source\PSoC4/CyLib.c ****     *
1834:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1835:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1836:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1837:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1838:Generated_Source\PSoC4/CyLib.c ****     *
1839:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1842:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1843:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1844:Generated_Source\PSoC4/CyLib.c ****     *
1845:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1846:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1847:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1848:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1851:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1852:Generated_Source\PSoC4/CyLib.c ****     *
1853:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1856:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1857:Generated_Source\PSoC4/CyLib.c ****     {
1858:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1859:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1860:Generated_Source\PSoC4/CyLib.c **** 
1861:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1862:Generated_Source\PSoC4/CyLib.c **** 
1863:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1864:Generated_Source\PSoC4/CyLib.c ****         {
1865:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1866:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1867:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         }
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1871:Generated_Source\PSoC4/CyLib.c ****     }
1872:Generated_Source\PSoC4/CyLib.c **** 
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1876:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 40


1877:Generated_Source\PSoC4/CyLib.c ****     *
1878:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1879:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1882:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1883:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1886:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1889:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1890:Generated_Source\PSoC4/CyLib.c ****     {
1891:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1892:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1893:Generated_Source\PSoC4/CyLib.c **** 
1894:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1897:Generated_Source\PSoC4/CyLib.c **** 
1898:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1899:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1900:Generated_Source\PSoC4/CyLib.c **** 
1901:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1902:Generated_Source\PSoC4/CyLib.c **** 
1903:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1904:Generated_Source\PSoC4/CyLib.c ****     }
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c **** 
1907:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1909:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1912:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1917:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1918:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1921:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1922:Generated_Source\PSoC4/CyLib.c ****     *
1923:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1924:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1925:Generated_Source\PSoC4/CyLib.c ****     {
1926:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1927:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1928:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1931:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 41


1934:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1936:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1937:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1938:Generated_Source\PSoC4/CyLib.c ****             )
1939:Generated_Source\PSoC4/CyLib.c ****         {
1940:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1941:Generated_Source\PSoC4/CyLib.c ****         }
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1944:Generated_Source\PSoC4/CyLib.c ****     }
1945:Generated_Source\PSoC4/CyLib.c **** 
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1948:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1949:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1952:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1953:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1954:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1955:Generated_Source\PSoC4/CyLib.c ****     *
1956:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1957:Generated_Source\PSoC4/CyLib.c ****     *
1958:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1959:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1960:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1963:Generated_Source\PSoC4/CyLib.c ****     *
1964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1965:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1966:Generated_Source\PSoC4/CyLib.c ****     {
1967:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1968:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1969:Generated_Source\PSoC4/CyLib.c **** 
1970:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1973:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1976:Generated_Source\PSoC4/CyLib.c **** 
1977:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1978:Generated_Source\PSoC4/CyLib.c ****     }
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1982:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1983:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1984:Generated_Source\PSoC4/CyLib.c ****     *
1985:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1986:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1987:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1988:Generated_Source\PSoC4/CyLib.c ****     *
1989:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1990:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 42


1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1993:Generated_Source\PSoC4/CyLib.c ****     *
1994:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1995:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1996:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2001:Generated_Source\PSoC4/CyLib.c ****     *
2002:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2003:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2004:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2005:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2006:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2007:Generated_Source\PSoC4/CyLib.c ****     *
2008:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2011:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2014:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2018:Generated_Source\PSoC4/CyLib.c ****     {
2019:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2020:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2023:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2024:Generated_Source\PSoC4/CyLib.c **** 
2025:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2026:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2029:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2032:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2033:Generated_Source\PSoC4/CyLib.c **** 
2034:Generated_Source\PSoC4/CyLib.c **** 
2035:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2036:Generated_Source\PSoC4/CyLib.c **** 
2037:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2038:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2039:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2040:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2041:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2042:Generated_Source\PSoC4/CyLib.c ****         {
2043:Generated_Source\PSoC4/CyLib.c **** 
2044:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2045:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2046:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2047:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 43


2048:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2049:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2050:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2053:Generated_Source\PSoC4/CyLib.c ****             {
2054:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2055:Generated_Source\PSoC4/CyLib.c ****                 {
2056:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2059:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2062:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2063:Generated_Source\PSoC4/CyLib.c **** 
2064:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2065:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2066:Generated_Source\PSoC4/CyLib.c **** 
2067:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2068:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2069:Generated_Source\PSoC4/CyLib.c ****                     {
2070:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2071:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2072:Generated_Source\PSoC4/CyLib.c ****                         break;
2073:Generated_Source\PSoC4/CyLib.c ****                     }
2074:Generated_Source\PSoC4/CyLib.c ****                 }
2075:Generated_Source\PSoC4/CyLib.c **** 
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2078:Generated_Source\PSoC4/CyLib.c ****                 {
2079:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2080:Generated_Source\PSoC4/CyLib.c ****                     {
2081:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2082:Generated_Source\PSoC4/CyLib.c ****                     }
2083:Generated_Source\PSoC4/CyLib.c ****                 }
2084:Generated_Source\PSoC4/CyLib.c ****             }
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****         }
2087:Generated_Source\PSoC4/CyLib.c **** 
2088:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2089:Generated_Source\PSoC4/CyLib.c ****     }
2090:Generated_Source\PSoC4/CyLib.c **** 
2091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLib.c ****     *
2095:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2096:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2097:Generated_Source\PSoC4/CyLib.c ****     *
2098:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2099:Generated_Source\PSoC4/CyLib.c ****     *
2100:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2101:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2102:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2103:Generated_Source\PSoC4/CyLib.c ****     *
2104:Generated_Source\PSoC4/CyLib.c ****     * \param source:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 44


2105:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2106:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2107:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2108:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2109:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2110:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2111:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2112:Generated_Source\PSoC4/CyLib.c ****     *
2113:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2114:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2115:Generated_Source\PSoC4/CyLib.c ****     {
2116:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2117:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2118:Generated_Source\PSoC4/CyLib.c ****         
2119:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2120:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2121:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2126:Generated_Source\PSoC4/CyLib.c ****         {
2127:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2128:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2129:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2130:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2131:Generated_Source\PSoC4/CyLib.c ****             #else
2132:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2133:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2134:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2135:Generated_Source\PSoC4/CyLib.c ****                 
2136:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2137:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2138:Generated_Source\PSoC4/CyLib.c ****                 
2139:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2140:Generated_Source\PSoC4/CyLib.c ****                 {
2141:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2142:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2143:Generated_Source\PSoC4/CyLib.c ****                 }
2144:Generated_Source\PSoC4/CyLib.c ****                 
2145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2148:Generated_Source\PSoC4/CyLib.c ****         }
2149:Generated_Source\PSoC4/CyLib.c **** 
2150:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2151:Generated_Source\PSoC4/CyLib.c ****     }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****     
2154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2157:Generated_Source\PSoC4/CyLib.c ****     *
2158:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2159:Generated_Source\PSoC4/CyLib.c ****     *
2160:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2161:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 45


2162:Generated_Source\PSoC4/CyLib.c ****     *
2163:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2166:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2167:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2168:Generated_Source\PSoC4/CyLib.c ****     *
2169:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2170:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2171:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2172:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2173:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2176:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2177:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2178:Generated_Source\PSoC4/CyLib.c ****     *
2179:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2180:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2181:Generated_Source\PSoC4/CyLib.c ****     {
2182:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2183:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2184:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2185:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** 
2188:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2191:Generated_Source\PSoC4/CyLib.c **** 
2192:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2193:Generated_Source\PSoC4/CyLib.c ****         {
2194:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2195:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2196:Generated_Source\PSoC4/CyLib.c **** 
2197:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2200:Generated_Source\PSoC4/CyLib.c ****         }
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2205:Generated_Source\PSoC4/CyLib.c ****     }
2206:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2207:Generated_Source\PSoC4/CyLib.c **** 
2208:Generated_Source\PSoC4/CyLib.c **** 
2209:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2210:Generated_Source\PSoC4/CyLib.c **** 
2211:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2212:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2213:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2214:Generated_Source\PSoC4/CyLib.c ****     *
2215:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2216:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2217:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2218:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 46


2219:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2220:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2221:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2222:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2223:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2224:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2225:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2226:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2227:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2228:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2229:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2230:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2231:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2232:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2233:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2234:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2235:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2236:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2237:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2238:Generated_Source\PSoC4/CyLib.c ****     *
2239:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2241:Generated_Source\PSoC4/CyLib.c ****     {
2242:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2243:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2246:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2247:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2248:Generated_Source\PSoC4/CyLib.c **** 
2249:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2250:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2251:Generated_Source\PSoC4/CyLib.c **** 
2252:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2253:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2256:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2259:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2260:Generated_Source\PSoC4/CyLib.c ****     }
2261:Generated_Source\PSoC4/CyLib.c **** 
2262:Generated_Source\PSoC4/CyLib.c **** 
2263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2266:Generated_Source\PSoC4/CyLib.c ****     *
2267:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2268:Generated_Source\PSoC4/CyLib.c ****     *
2269:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2270:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2271:Generated_Source\PSoC4/CyLib.c ****     {
 346              		.loc 1 2271 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 47


 350              		@ link register save eliminated.
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 351              		.loc 1 2272 0
 352 0000 054A     		ldr	r2, .L28
 353 0002 1368     		ldr	r3, [r2]
 354 0004 0221     		movs	r1, #2
 355 0006 8B43     		bics	r3, r1
 356 0008 1360     		str	r3, [r2]
2273:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 357              		.loc 1 2273 0
 358 000a 044A     		ldr	r2, .L28+4
 359 000c 1368     		ldr	r3, [r2]
 360 000e 0139     		subs	r1, r1, #1
 361 0010 8B43     		bics	r3, r1
 362 0012 1360     		str	r3, [r2]
2274:Generated_Source\PSoC4/CyLib.c ****     }
 363              		.loc 1 2274 0
 364              		@ sp needed
 365 0014 7047     		bx	lr
 366              	.L29:
 367 0016 C046     		.align	2
 368              	.L28:
 369 0018 08000B40 		.word	1074462728
 370 001c 18000B40 		.word	1074462744
 371              		.cfi_endproc
 372              	.LFE14:
 373              		.size	CySysLvdDisable, .-CySysLvdDisable
 374              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 375              		.align	2
 376              		.global	CySysLvdGetInterruptSource
 377              		.code	16
 378              		.thumb_func
 379              		.type	CySysLvdGetInterruptSource, %function
 380              	CySysLvdGetInterruptSource:
 381              	.LFB15:
2275:Generated_Source\PSoC4/CyLib.c **** 
2276:Generated_Source\PSoC4/CyLib.c **** 
2277:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2278:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2279:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2280:Generated_Source\PSoC4/CyLib.c ****     *
2281:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2282:Generated_Source\PSoC4/CyLib.c ****     *
2283:Generated_Source\PSoC4/CyLib.c ****     * \return
2284:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2285:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2286:Generated_Source\PSoC4/CyLib.c ****     *
2287:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2289:Generated_Source\PSoC4/CyLib.c ****     {
 382              		.loc 1 2289 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
2290:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 387              		.loc 1 2290 0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 48


 388 0000 024B     		ldr	r3, .L31
 389 0002 1B68     		ldr	r3, [r3]
 390 0004 0220     		movs	r0, #2
 391 0006 1840     		ands	r0, r3
2291:Generated_Source\PSoC4/CyLib.c ****     }
 392              		.loc 1 2291 0
 393              		@ sp needed
 394 0008 7047     		bx	lr
 395              	.L32:
 396 000a C046     		.align	2
 397              	.L31:
 398 000c 04000B40 		.word	1074462724
 399              		.cfi_endproc
 400              	.LFE15:
 401              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 402              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 403              		.align	2
 404              		.global	CySysLvdClearInterrupt
 405              		.code	16
 406              		.thumb_func
 407              		.type	CySysLvdClearInterrupt, %function
 408              	CySysLvdClearInterrupt:
 409              	.LFB16:
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2296:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c ****     *
2298:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2299:Generated_Source\PSoC4/CyLib.c ****     *
2300:Generated_Source\PSoC4/CyLib.c ****     * \return
2301:Generated_Source\PSoC4/CyLib.c ****     *  None
2302:Generated_Source\PSoC4/CyLib.c ****     *
2303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2304:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2305:Generated_Source\PSoC4/CyLib.c ****     {
 410              		.loc 1 2305 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
2306:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 415              		.loc 1 2306 0
 416 0000 0222     		movs	r2, #2
 417 0002 014B     		ldr	r3, .L34
 418 0004 1A60     		str	r2, [r3]
2307:Generated_Source\PSoC4/CyLib.c ****     }
 419              		.loc 1 2307 0
 420              		@ sp needed
 421 0006 7047     		bx	lr
 422              	.L35:
 423              		.align	2
 424              	.L34:
 425 0008 04000B40 		.word	1074462724
 426              		.cfi_endproc
 427              	.LFE16:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 49


 428              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 429              		.section	.text.CySysGetResetReason,"ax",%progbits
 430              		.align	2
 431              		.global	CySysGetResetReason
 432              		.code	16
 433              		.thumb_func
 434              		.type	CySysGetResetReason, %function
 435              	CySysGetResetReason:
 436              	.LFB17:
2308:Generated_Source\PSoC4/CyLib.c **** 
2309:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2310:Generated_Source\PSoC4/CyLib.c **** 
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2313:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2314:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2315:Generated_Source\PSoC4/CyLib.c **** *
2316:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2317:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2318:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2319:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2322:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2323:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2324:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2325:Generated_Source\PSoC4/CyLib.c **** *
2326:Generated_Source\PSoC4/CyLib.c **** * \return
2327:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2331:Generated_Source\PSoC4/CyLib.c **** {
 437              		.loc 1 2331 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442              	.LVL17:
 443 0000 0200     		movs	r2, r0
2332:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2333:Generated_Source\PSoC4/CyLib.c **** 
2334:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 444              		.loc 1 2334 0
 445 0002 1920     		movs	r0, #25
 446              	.LVL18:
 447 0004 0240     		ands	r2, r0
 448              	.LVL19:
2335:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 449              		.loc 1 2335 0
 450 0006 0249     		ldr	r1, .L37
 451 0008 0B68     		ldr	r3, [r1]
 452 000a 1840     		ands	r0, r3
 453              	.LVL20:
2336:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2337:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 454              		.loc 1 2337 0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 50


 455 000c 0A60     		str	r2, [r1]
2338:Generated_Source\PSoC4/CyLib.c **** 
2339:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2340:Generated_Source\PSoC4/CyLib.c **** }
 456              		.loc 1 2340 0
 457              		@ sp needed
 458 000e 7047     		bx	lr
 459              	.L38:
 460              		.align	2
 461              	.L37:
 462 0010 00030B40 		.word	1074463488
 463              		.cfi_endproc
 464              	.LFE17:
 465              		.size	CySysGetResetReason, .-CySysGetResetReason
 466              		.section	.text.CyDisableInts,"ax",%progbits
 467              		.align	2
 468              		.global	CyDisableInts
 469              		.code	16
 470              		.thumb_func
 471              		.type	CyDisableInts, %function
 472              	CyDisableInts:
 473              	.LFB18:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** 
2343:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2344:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2345:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2348:Generated_Source\PSoC4/CyLib.c **** *
2349:Generated_Source\PSoC4/CyLib.c **** * \return
2350:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2353:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2354:Generated_Source\PSoC4/CyLib.c **** {
 474              		.loc 1 2354 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
2355:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2358:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 479              		.loc 1 2358 0
 480 0000 024B     		ldr	r3, .L40
 481 0002 1868     		ldr	r0, [r3]
 482              	.LVL21:
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2361:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 483              		.loc 1 2361 0
 484 0004 0122     		movs	r2, #1
 485 0006 5242     		rsbs	r2, r2, #0
 486 0008 1A60     		str	r2, [r3]
2362:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 51


2363:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2364:Generated_Source\PSoC4/CyLib.c **** }
 487              		.loc 1 2364 0
 488              		@ sp needed
 489 000a 7047     		bx	lr
 490              	.L41:
 491              		.align	2
 492              	.L40:
 493 000c 80E100E0 		.word	-536813184
 494              		.cfi_endproc
 495              	.LFE18:
 496              		.size	CyDisableInts, .-CyDisableInts
 497              		.section	.text.CyEnableInts,"ax",%progbits
 498              		.align	2
 499              		.global	CyEnableInts
 500              		.code	16
 501              		.thumb_func
 502              		.type	CyEnableInts, %function
 503              	CyEnableInts:
 504              	.LFB19:
2365:Generated_Source\PSoC4/CyLib.c **** 
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2368:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2369:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2370:Generated_Source\PSoC4/CyLib.c **** *
2371:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2376:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2377:Generated_Source\PSoC4/CyLib.c **** {
 505              		.loc 1 2377 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510              	.LVL22:
2378:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 511              		.loc 1 2378 0
 512 0000 014B     		ldr	r3, .L43
 513 0002 1860     		str	r0, [r3]
2379:Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 2379 0
 515              		@ sp needed
 516 0004 7047     		bx	lr
 517              	.L44:
 518 0006 C046     		.align	2
 519              	.L43:
 520 0008 00E100E0 		.word	-536813312
 521              		.cfi_endproc
 522              	.LFE19:
 523              		.size	CyEnableInts, .-CyEnableInts
 524              		.section	.text.CyIntEnable,"ax",%progbits
 525              		.align	2
 526              		.global	CyIntEnable
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 52


 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntEnable, %function
 530              	CyIntEnable:
 531              	.LFB26:
2380:Generated_Source\PSoC4/CyLib.c **** 
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2383:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2384:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2385:Generated_Source\PSoC4/CyLib.c **** *
2386:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2387:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2390:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2391:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2392:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2393:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2394:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2395:Generated_Source\PSoC4/CyLib.c **** *
2396:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2397:Generated_Source\PSoC4/CyLib.c **** *
2398:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2399:Generated_Source\PSoC4/CyLib.c **** *
2400:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2401:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2402:Generated_Source\PSoC4/CyLib.c **** {
2403:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2404:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2405:Generated_Source\PSoC4/CyLib.c **** 
2406:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2409:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2410:Generated_Source\PSoC4/CyLib.c **** 
2411:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2412:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2413:Generated_Source\PSoC4/CyLib.c **** 
2414:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2415:Generated_Source\PSoC4/CyLib.c **** }
2416:Generated_Source\PSoC4/CyLib.c **** 
2417:Generated_Source\PSoC4/CyLib.c **** 
2418:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2419:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2420:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2423:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2424:Generated_Source\PSoC4/CyLib.c **** *
2425:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2426:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2427:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2428:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2429:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2430:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2431:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 53


2432:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2435:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2436:Generated_Source\PSoC4/CyLib.c **** {
2437:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2440:Generated_Source\PSoC4/CyLib.c **** 
2441:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2442:Generated_Source\PSoC4/CyLib.c **** }
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2446:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2447:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2452:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2455:Generated_Source\PSoC4/CyLib.c **** *
2456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2457:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2458:Generated_Source\PSoC4/CyLib.c **** {
2459:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2460:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2465:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2468:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2471:Generated_Source\PSoC4/CyLib.c **** }
2472:Generated_Source\PSoC4/CyLib.c **** 
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2475:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2476:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
2487:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2488:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 54


2489:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2492:Generated_Source\PSoC4/CyLib.c **** }
2493:Generated_Source\PSoC4/CyLib.c **** 
2494:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2495:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2496:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2497:Generated_Source\PSoC4/CyLib.c **** *
2498:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2501:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2502:Generated_Source\PSoC4/CyLib.c **** *
2503:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2504:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2505:Generated_Source\PSoC4/CyLib.c **** {
2506:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2507:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2508:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2509:Generated_Source\PSoC4/CyLib.c **** 
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2511:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2512:Generated_Source\PSoC4/CyLib.c **** 
2513:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2518:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2519:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2520:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2523:Generated_Source\PSoC4/CyLib.c **** }
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c **** 
2526:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2527:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2528:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2529:Generated_Source\PSoC4/CyLib.c **** *
2530:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2531:Generated_Source\PSoC4/CyLib.c **** *
2532:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2533:Generated_Source\PSoC4/CyLib.c **** *
2534:Generated_Source\PSoC4/CyLib.c **** * \return
2535:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2536:Generated_Source\PSoC4/CyLib.c **** *
2537:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2538:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2539:Generated_Source\PSoC4/CyLib.c **** {
2540:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2541:Generated_Source\PSoC4/CyLib.c **** 
2542:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2543:Generated_Source\PSoC4/CyLib.c **** 
2544:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2545:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 55


2546:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2547:Generated_Source\PSoC4/CyLib.c **** }
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2560:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2560 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL23:
2561:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 538              		.loc 1 2561 0
 539 0000 1F23     		movs	r3, #31
 540 0002 1840     		ands	r0, r3
 541              	.LVL24:
 542 0004 1E3B     		subs	r3, r3, #30
 543 0006 8340     		lsls	r3, r3, r0
 544 0008 014A     		ldr	r2, .L46
 545 000a 1360     		str	r3, [r2]
2562:Generated_Source\PSoC4/CyLib.c **** }
 546              		.loc 1 2562 0
 547              		@ sp needed
 548 000c 7047     		bx	lr
 549              	.L47:
 550 000e C046     		.align	2
 551              	.L46:
 552 0010 00E100E0 		.word	-536813312
 553              		.cfi_endproc
 554              	.LFE26:
 555              		.size	CyIntEnable, .-CyIntEnable
 556              		.section	.text.CyIntGetState,"ax",%progbits
 557              		.align	2
 558              		.global	CyIntGetState
 559              		.code	16
 560              		.thumb_func
 561              		.type	CyIntGetState, %function
 562              	CyIntGetState:
 563              	.LFB27:
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c **** 
2565:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2566:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2567:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2568:Generated_Source\PSoC4/CyLib.c **** *
2569:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2570:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 56


2571:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2572:Generated_Source\PSoC4/CyLib.c **** *
2573:Generated_Source\PSoC4/CyLib.c **** * \return
2574:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2575:Generated_Source\PSoC4/CyLib.c **** *
2576:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2577:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2578:Generated_Source\PSoC4/CyLib.c **** {
 564              		.loc 1 2578 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL25:
2579:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2580:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 570              		.loc 1 2580 0
 571 0000 044B     		ldr	r3, .L49
 572 0002 1B68     		ldr	r3, [r3]
 573 0004 1F22     		movs	r2, #31
 574 0006 1040     		ands	r0, r2
 575              	.LVL26:
 576 0008 C340     		lsrs	r3, r3, r0
 577 000a 1800     		movs	r0, r3
 578 000c 0123     		movs	r3, #1
 579 000e 1840     		ands	r0, r3
2581:Generated_Source\PSoC4/CyLib.c **** }
 580              		.loc 1 2581 0
 581              		@ sp needed
 582 0010 7047     		bx	lr
 583              	.L50:
 584 0012 C046     		.align	2
 585              	.L49:
 586 0014 00E100E0 		.word	-536813312
 587              		.cfi_endproc
 588              	.LFE27:
 589              		.size	CyIntGetState, .-CyIntGetState
 590              		.section	.text.CyIntDisable,"ax",%progbits
 591              		.align	2
 592              		.global	CyIntDisable
 593              		.code	16
 594              		.thumb_func
 595              		.type	CyIntDisable, %function
 596              	CyIntDisable:
 597              	.LFB28:
2582:Generated_Source\PSoC4/CyLib.c **** 
2583:Generated_Source\PSoC4/CyLib.c **** 
2584:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2585:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2586:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2587:Generated_Source\PSoC4/CyLib.c **** *
2588:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2589:Generated_Source\PSoC4/CyLib.c **** *
2590:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2591:Generated_Source\PSoC4/CyLib.c **** *
2592:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2593:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 57


2594:Generated_Source\PSoC4/CyLib.c **** {
 598              		.loc 1 2594 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 603              	.LVL27:
2595:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 604              		.loc 1 2595 0
 605 0000 1F23     		movs	r3, #31
 606 0002 1840     		ands	r0, r3
 607              	.LVL28:
 608 0004 1E3B     		subs	r3, r3, #30
 609 0006 8340     		lsls	r3, r3, r0
 610 0008 014A     		ldr	r2, .L52
 611 000a 1360     		str	r3, [r2]
2596:Generated_Source\PSoC4/CyLib.c **** }
 612              		.loc 1 2596 0
 613              		@ sp needed
 614 000c 7047     		bx	lr
 615              	.L53:
 616 000e C046     		.align	2
 617              	.L52:
 618 0010 80E100E0 		.word	-536813184
 619              		.cfi_endproc
 620              	.LFE28:
 621              		.size	CyIntDisable, .-CyIntDisable
 622              		.section	.text.CyIntSetPending,"ax",%progbits
 623              		.align	2
 624              		.global	CyIntSetPending
 625              		.code	16
 626              		.thumb_func
 627              		.type	CyIntSetPending, %function
 628              	CyIntSetPending:
 629              	.LFB29:
2597:Generated_Source\PSoC4/CyLib.c **** 
2598:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2599:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2600:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2605:Generated_Source\PSoC4/CyLib.c **** *
2606:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2607:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2608:Generated_Source\PSoC4/CyLib.c **** {
 630              		.loc 1 2608 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL29:
2609:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 636              		.loc 1 2609 0
 637 0000 1F23     		movs	r3, #31
 638 0002 1840     		ands	r0, r3
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 58


 639              	.LVL30:
 640 0004 1E3B     		subs	r3, r3, #30
 641 0006 8340     		lsls	r3, r3, r0
 642 0008 014A     		ldr	r2, .L55
 643 000a 1360     		str	r3, [r2]
2610:Generated_Source\PSoC4/CyLib.c **** }
 644              		.loc 1 2610 0
 645              		@ sp needed
 646 000c 7047     		bx	lr
 647              	.L56:
 648 000e C046     		.align	2
 649              	.L55:
 650 0010 00E200E0 		.word	-536813056
 651              		.cfi_endproc
 652              	.LFE29:
 653              		.size	CyIntSetPending, .-CyIntSetPending
 654              		.section	.text.CyIntClearPending,"ax",%progbits
 655              		.align	2
 656              		.global	CyIntClearPending
 657              		.code	16
 658              		.thumb_func
 659              		.type	CyIntClearPending, %function
 660              	CyIntClearPending:
 661              	.LFB30:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2618:Generated_Source\PSoC4/CyLib.c **** *
2619:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2620:Generated_Source\PSoC4/CyLib.c **** *
2621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2622:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2623:Generated_Source\PSoC4/CyLib.c **** {
 662              		.loc 1 2623 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667              	.LVL31:
2624:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 668              		.loc 1 2624 0
 669 0000 1F23     		movs	r3, #31
 670 0002 1840     		ands	r0, r3
 671              	.LVL32:
 672 0004 1E3B     		subs	r3, r3, #30
 673 0006 8340     		lsls	r3, r3, r0
 674 0008 014A     		ldr	r2, .L58
 675 000a 1360     		str	r3, [r2]
2625:Generated_Source\PSoC4/CyLib.c **** }
 676              		.loc 1 2625 0
 677              		@ sp needed
 678 000c 7047     		bx	lr
 679              	.L59:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 59


 680 000e C046     		.align	2
 681              	.L58:
 682 0010 80E200E0 		.word	-536812928
 683              		.cfi_endproc
 684              	.LFE30:
 685              		.size	CyIntClearPending, .-CyIntClearPending
 686              		.section	.text.CyHalt,"ax",%progbits
 687              		.align	2
 688              		.global	CyHalt
 689              		.code	16
 690              		.thumb_func
 691              		.type	CyHalt, %function
 692              	CyHalt:
 693              	.LFB31:
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2629:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2630:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2633:Generated_Source\PSoC4/CyLib.c **** *
2634:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2638:Generated_Source\PSoC4/CyLib.c **** {
 694              		.loc 1 2638 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699              	.LVL33:
2639:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2640:Generated_Source\PSoC4/CyLib.c ****     {
2641:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2642:Generated_Source\PSoC4/CyLib.c ****     }
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2645:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2646:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2647:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 700              		.loc 1 2647 0
 701              		.syntax divided
 702              	@ 2647 "Generated_Source\PSoC4\CyLib.c" 1
 703 0000 01BE     		    bkpt    1
 704              	@ 0 "" 2
2648:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2649:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2650:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2651:Generated_Source\PSoC4/CyLib.c **** }
 705              		.loc 1 2651 0
 706              		.thumb
 707              		.syntax unified
 708              		@ sp needed
 709 0002 7047     		bx	lr
 710              		.cfi_endproc
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 60


 711              	.LFE31:
 712              		.size	CyHalt, .-CyHalt
 713              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 714              		.align	2
 715              		.global	CySysClkWriteEcoDiv
 716              		.code	16
 717              		.thumb_func
 718              		.type	CySysClkWriteEcoDiv, %function
 719              	CySysClkWriteEcoDiv:
 720              	.LFB12:
1349:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 721              		.loc 1 1349 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              	.LVL34:
 726 0000 10B5     		push	{r4, lr}
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 4, -8
 729              		.cfi_offset 14, -4
 730 0002 0400     		movs	r4, r0
1352:Generated_Source\PSoC4/CyLib.c ****             {
 731              		.loc 1 1352 0
 732 0004 0A4B     		ldr	r3, .L64
 733 0006 1B68     		ldr	r3, [r3]
 734 0008 0722     		movs	r2, #7
 735 000a 1340     		ands	r3, r2
 736 000c 022B     		cmp	r3, #2
 737 000e 0BD0     		beq	.L62
1354:Generated_Source\PSoC4/CyLib.c **** 
 738              		.loc 1 1354 0
 739 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 740              	.LVL35:
1356:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 741              		.loc 1 1356 0
 742 0014 0321     		movs	r1, #3
 743 0016 0C40     		ands	r4, r1
 744              	.LVL36:
1357:Generated_Source\PSoC4/CyLib.c **** 
 745              		.loc 1 1357 0
 746 0018 064A     		ldr	r2, .L64+4
 747 001a 1368     		ldr	r3, [r2]
 748 001c 8B43     		bics	r3, r1
1356:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 749              		.loc 1 1356 0
 750 001e 2343     		orrs	r3, r4
 751 0020 1360     		str	r3, [r2]
1359:Generated_Source\PSoC4/CyLib.c ****             }
 752              		.loc 1 1359 0
 753 0022 FFF7FEFF 		bl	CyExitCriticalSection
 754              	.LVL37:
 755 0026 02E0     		b	.L61
 756              	.LVL38:
 757              	.L62:
1364:Generated_Source\PSoC4/CyLib.c ****             }
 758              		.loc 1 1364 0 discriminator 1
 759 0028 0020     		movs	r0, #0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 61


 760              	.LVL39:
 761 002a FFF7FEFF 		bl	CyHalt
 762              	.LVL40:
 763              	.L61:
1366:Generated_Source\PSoC4/CyLib.c **** 
 764              		.loc 1 1366 0
 765              		@ sp needed
 766 002e 10BD     		pop	{r4, pc}
 767              	.L65:
 768              		.align	2
 769              	.L64:
 770 0030 00010B40 		.word	1074462976
 771 0034 64F02E40 		.word	1076818020
 772              		.cfi_endproc
 773              	.LFE12:
 774              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 775              		.section	.text.CyIntSetSysVector,"ax",%progbits
 776              		.align	2
 777              		.global	CyIntSetSysVector
 778              		.code	16
 779              		.thumb_func
 780              		.type	CyIntSetSysVector, %function
 781              	CyIntSetSysVector:
 782              	.LFB20:
2402:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 783              		.loc 1 2402 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              	.LVL41:
 788 0000 70B5     		push	{r4, r5, r6, lr}
 789              		.cfi_def_cfa_offset 16
 790              		.cfi_offset 4, -16
 791              		.cfi_offset 5, -12
 792              		.cfi_offset 6, -8
 793              		.cfi_offset 14, -4
 794 0002 0400     		movs	r4, r0
 795 0004 0D00     		movs	r5, r1
 796              	.LVL42:
2406:Generated_Source\PSoC4/CyLib.c **** 
 797              		.loc 1 2406 0
 798 0006 0F28     		cmp	r0, #15
 799 0008 02D9     		bls	.L67
2406:Generated_Source\PSoC4/CyLib.c **** 
 800              		.loc 1 2406 0 is_stmt 0 discriminator 1
 801 000a 0020     		movs	r0, #0
 802              	.LVL43:
 803 000c FFF7FEFF 		bl	CyHalt
 804              	.LVL44:
 805              	.L67:
2409:Generated_Source\PSoC4/CyLib.c **** 
 806              		.loc 1 2409 0 is_stmt 1
 807 0010 A400     		lsls	r4, r4, #2
 808 0012 8023     		movs	r3, #128
 809 0014 9B05     		lsls	r3, r3, #22
 810 0016 9C46     		mov	ip, r3
 811 0018 6444     		add	r4, r4, ip
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 62


 812 001a 2068     		ldr	r0, [r4]
 813              	.LVL45:
2412:Generated_Source\PSoC4/CyLib.c **** 
 814              		.loc 1 2412 0
 815 001c 2560     		str	r5, [r4]
2415:Generated_Source\PSoC4/CyLib.c **** 
 816              		.loc 1 2415 0
 817              		@ sp needed
 818              	.LVL46:
 819 001e 70BD     		pop	{r4, r5, r6, pc}
 820              		.cfi_endproc
 821              	.LFE20:
 822              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 823              		.section	.text.CyIntGetSysVector,"ax",%progbits
 824              		.align	2
 825              		.global	CyIntGetSysVector
 826              		.code	16
 827              		.thumb_func
 828              		.type	CyIntGetSysVector, %function
 829              	CyIntGetSysVector:
 830              	.LFB21:
2436:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 831              		.loc 1 2436 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              	.LVL47:
 836 0000 10B5     		push	{r4, lr}
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 4, -8
 839              		.cfi_offset 14, -4
 840 0002 0400     		movs	r4, r0
 841              	.LVL48:
2439:Generated_Source\PSoC4/CyLib.c **** 
 842              		.loc 1 2439 0
 843 0004 0F28     		cmp	r0, #15
 844 0006 02D9     		bls	.L69
2439:Generated_Source\PSoC4/CyLib.c **** 
 845              		.loc 1 2439 0 is_stmt 0 discriminator 1
 846 0008 0020     		movs	r0, #0
 847              	.LVL49:
 848 000a FFF7FEFF 		bl	CyHalt
 849              	.LVL50:
 850              	.L69:
2441:Generated_Source\PSoC4/CyLib.c **** }
 851              		.loc 1 2441 0 is_stmt 1
 852 000e A400     		lsls	r4, r4, #2
 853 0010 8023     		movs	r3, #128
 854 0012 9B05     		lsls	r3, r3, #22
 855 0014 9C46     		mov	ip, r3
 856 0016 6444     		add	r4, r4, ip
 857 0018 2068     		ldr	r0, [r4]
2442:Generated_Source\PSoC4/CyLib.c **** 
 858              		.loc 1 2442 0
 859              		@ sp needed
 860 001a 10BD     		pop	{r4, pc}
 861              		.cfi_endproc
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 63


 862              	.LFE21:
 863              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 864              		.section	.text.CyIntSetVector,"ax",%progbits
 865              		.align	2
 866              		.global	CyIntSetVector
 867              		.code	16
 868              		.thumb_func
 869              		.type	CyIntSetVector, %function
 870              	CyIntSetVector:
 871              	.LFB22:
2458:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 872              		.loc 1 2458 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              	.LVL51:
 877 0000 70B5     		push	{r4, r5, r6, lr}
 878              		.cfi_def_cfa_offset 16
 879              		.cfi_offset 4, -16
 880              		.cfi_offset 5, -12
 881              		.cfi_offset 6, -8
 882              		.cfi_offset 14, -4
 883 0002 0400     		movs	r4, r0
 884 0004 0D00     		movs	r5, r1
 885              	.LVL52:
2462:Generated_Source\PSoC4/CyLib.c **** 
 886              		.loc 1 2462 0
 887 0006 1F28     		cmp	r0, #31
 888 0008 02D9     		bls	.L71
2462:Generated_Source\PSoC4/CyLib.c **** 
 889              		.loc 1 2462 0 is_stmt 0 discriminator 1
 890 000a 0020     		movs	r0, #0
 891              	.LVL53:
 892 000c FFF7FEFF 		bl	CyHalt
 893              	.LVL54:
 894              	.L71:
2465:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2465 0 is_stmt 1
 896 0010 1034     		adds	r4, r4, #16
 897 0012 A400     		lsls	r4, r4, #2
 898 0014 8023     		movs	r3, #128
 899 0016 9B05     		lsls	r3, r3, #22
 900 0018 9C46     		mov	ip, r3
 901 001a 6444     		add	r4, r4, ip
 902 001c 2068     		ldr	r0, [r4]
 903              	.LVL55:
2468:Generated_Source\PSoC4/CyLib.c **** 
 904              		.loc 1 2468 0
 905 001e 2560     		str	r5, [r4]
2471:Generated_Source\PSoC4/CyLib.c **** 
 906              		.loc 1 2471 0
 907              		@ sp needed
 908              	.LVL56:
 909 0020 70BD     		pop	{r4, r5, r6, pc}
 910              		.cfi_endproc
 911              	.LFE22:
 912              		.size	CyIntSetVector, .-CyIntSetVector
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 64


 913 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 914              		.align	2
 915              		.global	CyIntGetVector
 916              		.code	16
 917              		.thumb_func
 918              		.type	CyIntGetVector, %function
 919              	CyIntGetVector:
 920              	.LFB23:
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 921              		.loc 1 2486 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              	.LVL57:
 926 0000 10B5     		push	{r4, lr}
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 4, -8
 929              		.cfi_offset 14, -4
 930 0002 0400     		movs	r4, r0
 931              	.LVL58:
2489:Generated_Source\PSoC4/CyLib.c **** 
 932              		.loc 1 2489 0
 933 0004 1F28     		cmp	r0, #31
 934 0006 02D9     		bls	.L73
2489:Generated_Source\PSoC4/CyLib.c **** 
 935              		.loc 1 2489 0 is_stmt 0 discriminator 1
 936 0008 0020     		movs	r0, #0
 937              	.LVL59:
 938 000a FFF7FEFF 		bl	CyHalt
 939              	.LVL60:
 940              	.L73:
2491:Generated_Source\PSoC4/CyLib.c **** }
 941              		.loc 1 2491 0 is_stmt 1
 942 000e 1034     		adds	r4, r4, #16
 943 0010 A400     		lsls	r4, r4, #2
 944 0012 8023     		movs	r3, #128
 945 0014 9B05     		lsls	r3, r3, #22
 946 0016 9C46     		mov	ip, r3
 947 0018 6444     		add	r4, r4, ip
 948 001a 2068     		ldr	r0, [r4]
2492:Generated_Source\PSoC4/CyLib.c **** 
 949              		.loc 1 2492 0
 950              		@ sp needed
 951 001c 10BD     		pop	{r4, pc}
 952              		.cfi_endproc
 953              	.LFE23:
 954              		.size	CyIntGetVector, .-CyIntGetVector
 955 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 956              		.align	2
 957              		.global	CyIntSetPriority
 958              		.code	16
 959              		.thumb_func
 960              		.type	CyIntSetPriority, %function
 961              	CyIntSetPriority:
 962              	.LFB24:
2505:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 963              		.loc 1 2505 0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 65


 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              	.LVL61:
 968 0000 70B5     		push	{r4, r5, r6, lr}
 969              		.cfi_def_cfa_offset 16
 970              		.cfi_offset 4, -16
 971              		.cfi_offset 5, -12
 972              		.cfi_offset 6, -8
 973              		.cfi_offset 14, -4
 974 0002 0400     		movs	r4, r0
 975 0004 0E00     		movs	r6, r1
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 976              		.loc 1 2510 0
 977 0006 0329     		cmp	r1, #3
 978 0008 02D9     		bls	.L75
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 979              		.loc 1 2510 0 is_stmt 0 discriminator 1
 980 000a 0020     		movs	r0, #0
 981              	.LVL62:
 982 000c FFF7FEFF 		bl	CyHalt
 983              	.LVL63:
 984              	.L75:
2511:Generated_Source\PSoC4/CyLib.c **** 
 985              		.loc 1 2511 0 is_stmt 1
 986 0010 1F2C     		cmp	r4, #31
 987 0012 02D9     		bls	.L76
2511:Generated_Source\PSoC4/CyLib.c **** 
 988              		.loc 1 2511 0 is_stmt 0 discriminator 1
 989 0014 0020     		movs	r0, #0
 990 0016 FFF7FEFF 		bl	CyHalt
 991              	.LVL64:
 992              	.L76:
2513:Generated_Source\PSoC4/CyLib.c **** 
 993              		.loc 1 2513 0 is_stmt 1
 994 001a 0325     		movs	r5, #3
 995 001c 2540     		ands	r5, r4
 996 001e ED00     		lsls	r5, r5, #3
 997 0020 0635     		adds	r5, r5, #6
 998              	.LVL65:
2515:Generated_Source\PSoC4/CyLib.c **** 
 999              		.loc 1 2515 0
 1000 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1001              	.LVL66:
2517:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1002              		.loc 1 2517 0
 1003 0026 A408     		lsrs	r4, r4, #2
 1004 0028 A400     		lsls	r4, r4, #2
 1005 002a 074B     		ldr	r3, .L77
 1006 002c 9C46     		mov	ip, r3
 1007 002e 6444     		add	r4, r4, ip
 1008 0030 2168     		ldr	r1, [r4]
 1009              	.LVL67:
2518:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1010              		.loc 1 2518 0
 1011 0032 0323     		movs	r3, #3
 1012 0034 AB40     		lsls	r3, r3, r5
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 66


 1013 0036 9943     		bics	r1, r3
 1014              	.LVL68:
 1015 0038 0B00     		movs	r3, r1
 1016              	.LVL69:
2519:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1017              		.loc 1 2519 0
 1018 003a 3100     		movs	r1, r6
 1019              	.LVL70:
 1020 003c A940     		lsls	r1, r1, r5
 1021 003e 1943     		orrs	r1, r3
 1022              	.LVL71:
2520:Generated_Source\PSoC4/CyLib.c **** 
 1023              		.loc 1 2520 0
 1024 0040 2160     		str	r1, [r4]
2522:Generated_Source\PSoC4/CyLib.c **** }
 1025              		.loc 1 2522 0
 1026 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1027              	.LVL72:
2523:Generated_Source\PSoC4/CyLib.c **** 
 1028              		.loc 1 2523 0
 1029              		@ sp needed
 1030              	.LVL73:
 1031 0046 70BD     		pop	{r4, r5, r6, pc}
 1032              	.L78:
 1033              		.align	2
 1034              	.L77:
 1035 0048 00E400E0 		.word	-536812544
 1036              		.cfi_endproc
 1037              	.LFE24:
 1038              		.size	CyIntSetPriority, .-CyIntSetPriority
 1039              		.section	.text.CyIntGetPriority,"ax",%progbits
 1040              		.align	2
 1041              		.global	CyIntGetPriority
 1042              		.code	16
 1043              		.thumb_func
 1044              		.type	CyIntGetPriority, %function
 1045              	CyIntGetPriority:
 1046              	.LFB25:
2539:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1047              		.loc 1 2539 0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051              	.LVL74:
 1052 0000 10B5     		push	{r4, lr}
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 4, -8
 1055              		.cfi_offset 14, -4
 1056 0002 0400     		movs	r4, r0
2542:Generated_Source\PSoC4/CyLib.c **** 
 1057              		.loc 1 2542 0
 1058 0004 1F28     		cmp	r0, #31
 1059 0006 02D9     		bls	.L80
2542:Generated_Source\PSoC4/CyLib.c **** 
 1060              		.loc 1 2542 0 is_stmt 0 discriminator 1
 1061 0008 0020     		movs	r0, #0
 1062              	.LVL75:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 67


 1063 000a FFF7FEFF 		bl	CyHalt
 1064              	.LVL76:
 1065              	.L80:
2544:Generated_Source\PSoC4/CyLib.c **** 
 1066              		.loc 1 2544 0 is_stmt 1
 1067 000e A308     		lsrs	r3, r4, #2
 1068 0010 9B00     		lsls	r3, r3, #2
 1069 0012 054A     		ldr	r2, .L81
 1070 0014 9446     		mov	ip, r2
 1071 0016 6344     		add	r3, r3, ip
 1072 0018 1868     		ldr	r0, [r3]
 1073 001a 0323     		movs	r3, #3
 1074 001c 1C40     		ands	r4, r3
 1075 001e E400     		lsls	r4, r4, #3
 1076 0020 0634     		adds	r4, r4, #6
 1077 0022 E040     		lsrs	r0, r0, r4
 1078              	.LVL77:
2546:Generated_Source\PSoC4/CyLib.c **** }
 1079              		.loc 1 2546 0
 1080 0024 1840     		ands	r0, r3
 1081              	.LVL78:
2547:Generated_Source\PSoC4/CyLib.c **** 
 1082              		.loc 1 2547 0
 1083              		@ sp needed
 1084 0026 10BD     		pop	{r4, pc}
 1085              	.L82:
 1086              		.align	2
 1087              	.L81:
 1088 0028 00E400E0 		.word	-536812544
 1089              		.cfi_endproc
 1090              	.LFE25:
 1091              		.size	CyIntGetPriority, .-CyIntGetPriority
 1092              		.section	.text.CySoftwareReset,"ax",%progbits
 1093              		.align	2
 1094              		.global	CySoftwareReset
 1095              		.code	16
 1096              		.thumb_func
 1097              		.type	CySoftwareReset, %function
 1098              	CySoftwareReset:
 1099              	.LFB32:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2661:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2662:Generated_Source\PSoC4/CyLib.c **** {
 1100              		.loc 1 2662 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
2663:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 68


2664:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2665:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2666:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2667:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1105              		.loc 1 2667 0
 1106 0000 034A     		ldr	r2, .L84
 1107 0002 1368     		ldr	r3, [r2]
 1108 0004 1B04     		lsls	r3, r3, #16
 1109 0006 1B0C     		lsrs	r3, r3, #16
2668:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1110              		.loc 1 2668 0
 1111 0008 0249     		ldr	r1, .L84+4
 1112 000a 0B43     		orrs	r3, r1
2667:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1113              		.loc 1 2667 0
 1114 000c 1360     		str	r3, [r2]
2669:Generated_Source\PSoC4/CyLib.c **** }
 1115              		.loc 1 2669 0
 1116              		@ sp needed
 1117 000e 7047     		bx	lr
 1118              	.L85:
 1119              		.align	2
 1120              	.L84:
 1121 0010 0CED00E0 		.word	-536810228
 1122 0014 0400FA05 		.word	100270084
 1123              		.cfi_endproc
 1124              	.LFE32:
 1125              		.size	CySoftwareReset, .-CySoftwareReset
 1126              		.section	.text.CyDelay,"ax",%progbits
 1127              		.align	2
 1128              		.global	CyDelay
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	CyDelay, %function
 1132              	CyDelay:
 1133              	.LFB33:
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2673:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2674:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2675:Generated_Source\PSoC4/CyLib.c **** *
2676:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2677:Generated_Source\PSoC4/CyLib.c **** *
2678:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2679:Generated_Source\PSoC4/CyLib.c **** *
2680:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2681:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2682:Generated_Source\PSoC4/CyLib.c **** {
 1134              		.loc 1 2682 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              	.LVL79:
 1139 0000 10B5     		push	{r4, lr}
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 4, -8
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 69


 1142              		.cfi_offset 14, -4
 1143 0002 0400     		movs	r4, r0
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1144              		.loc 1 2683 0
 1145 0004 06E0     		b	.L87
 1146              	.LVL80:
 1147              	.L88:
2684:Generated_Source\PSoC4/CyLib.c ****     {
2685:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2686:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2687:Generated_Source\PSoC4/CyLib.c ****          */
2688:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1148              		.loc 1 2688 0
 1149 0006 084B     		ldr	r3, .L89
 1150 0008 5868     		ldr	r0, [r3, #4]
 1151 000a FFF7FEFF 		bl	CyDelayCycles
 1152              	.LVL81:
2689:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1153              		.loc 1 2689 0
 1154 000e 074B     		ldr	r3, .L89+4
 1155 0010 9C46     		mov	ip, r3
 1156 0012 6444     		add	r4, r4, ip
 1157              	.LVL82:
 1158              	.L87:
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1159              		.loc 1 2683 0
 1160 0014 8023     		movs	r3, #128
 1161 0016 1B02     		lsls	r3, r3, #8
 1162 0018 9C42     		cmp	r4, r3
 1163 001a F4D8     		bhi	.L88
2690:Generated_Source\PSoC4/CyLib.c ****     }
2691:Generated_Source\PSoC4/CyLib.c **** 
2692:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1164              		.loc 1 2692 0
 1165 001c 024B     		ldr	r3, .L89
 1166 001e 9868     		ldr	r0, [r3, #8]
 1167 0020 6043     		muls	r0, r4
 1168 0022 FFF7FEFF 		bl	CyDelayCycles
 1169              	.LVL83:
2693:Generated_Source\PSoC4/CyLib.c **** }
 1170              		.loc 1 2693 0
 1171              		@ sp needed
 1172              	.LVL84:
 1173 0026 10BD     		pop	{r4, pc}
 1174              	.L90:
 1175              		.align	2
 1176              	.L89:
 1177 0028 00000000 		.word	.LANCHOR0
 1178 002c 0080FFFF 		.word	-32768
 1179              		.cfi_endproc
 1180              	.LFE33:
 1181              		.size	CyDelay, .-CyDelay
 1182              		.section	.text.CyDelayUs,"ax",%progbits
 1183              		.align	2
 1184              		.global	CyDelayUs
 1185              		.code	16
 1186              		.thumb_func
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 70


 1187              		.type	CyDelayUs, %function
 1188              	CyDelayUs:
 1189              	.LFB34:
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** 
2696:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2697:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2698:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2699:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2705:Generated_Source\PSoC4/CyLib.c **** {
 1190              		.loc 1 2705 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              	.LVL85:
 1195 0000 10B5     		push	{r4, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 4, -8
 1198              		.cfi_offset 14, -4
2706:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1199              		.loc 1 2706 0
 1200 0002 034B     		ldr	r3, .L92
 1201 0004 1B7B     		ldrb	r3, [r3, #12]
 1202 0006 5843     		muls	r0, r3
 1203              	.LVL86:
 1204 0008 FFF7FEFF 		bl	CyDelayCycles
 1205              	.LVL87:
2707:Generated_Source\PSoC4/CyLib.c **** }
 1206              		.loc 1 2707 0
 1207              		@ sp needed
 1208 000c 10BD     		pop	{r4, pc}
 1209              	.L93:
 1210 000e C046     		.align	2
 1211              	.L92:
 1212 0010 00000000 		.word	.LANCHOR0
 1213              		.cfi_endproc
 1214              	.LFE34:
 1215              		.size	CyDelayUs, .-CyDelayUs
 1216              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1217              		.align	2
 1218              		.global	CySysClkWriteImoFreq
 1219              		.code	16
 1220              		.thumb_func
 1221              		.type	CySysClkWriteImoFreq, %function
 1222              	CySysClkWriteImoFreq:
 1223              	.LFB8:
 742:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1224              		.loc 1 742 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 8
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228              	.LVL88:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 71


 1229 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1230              		.cfi_def_cfa_offset 20
 1231              		.cfi_offset 4, -20
 1232              		.cfi_offset 5, -16
 1233              		.cfi_offset 6, -12
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 5746     		mov	r7, r10
 1237 0004 4E46     		mov	r6, r9
 1238 0006 C0B4     		push	{r6, r7}
 1239              		.cfi_def_cfa_offset 28
 1240              		.cfi_offset 9, -28
 1241              		.cfi_offset 10, -24
 1242 0008 83B0     		sub	sp, sp, #12
 1243              		.cfi_def_cfa_offset 40
 1244 000a 0400     		movs	r4, r0
 764:Generated_Source\PSoC4/CyLib.c **** 
 1245              		.loc 1 764 0
 1246 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1247              	.LVL89:
 1248 0010 0190     		str	r0, [sp, #4]
 1249              	.LVL90:
 814:Generated_Source\PSoC4/CyLib.c ****         {
 1250              		.loc 1 814 0
 1251 0012 E71E     		subs	r7, r4, #3
 1252 0014 2D2F     		cmp	r7, #45
 1253 0016 74D8     		bhi	.L95
 816:Generated_Source\PSoC4/CyLib.c ****             {
 1254              		.loc 1 816 0
 1255 0018 3F4B     		ldr	r3, .L105
 1256 001a 1B78     		ldrb	r3, [r3]
 1257 001c DBB2     		uxtb	r3, r3
 1258 001e 9C42     		cmp	r4, r3
 1259 0020 08D8     		bhi	.L96
 818:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1260              		.loc 1 818 0
 1261 0022 3E4B     		ldr	r3, .L105+4
 1262 0024 1B78     		ldrb	r3, [r3]
 1263 0026 DBB2     		uxtb	r3, r3
 1264 0028 9A46     		mov	r10, r3
 1265              	.LVL91:
 819:Generated_Source\PSoC4/CyLib.c ****             }
 1266              		.loc 1 819 0
 1267 002a 3D4B     		ldr	r3, .L105+8
 1268 002c 1B78     		ldrb	r3, [r3]
 1269 002e DBB2     		uxtb	r3, r3
 1270 0030 9946     		mov	r9, r3
 1271              	.LVL92:
 1272 0032 31E0     		b	.L97
 1273              	.LVL93:
 1274              	.L96:
 821:Generated_Source\PSoC4/CyLib.c ****             {
 1275              		.loc 1 821 0
 1276 0034 3B4B     		ldr	r3, .L105+12
 1277 0036 1B78     		ldrb	r3, [r3]
 1278 0038 DBB2     		uxtb	r3, r3
 1279 003a 9C42     		cmp	r4, r3
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 72


 1280 003c 08D8     		bhi	.L98
 823:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1281              		.loc 1 823 0
 1282 003e 3A4B     		ldr	r3, .L105+16
 1283 0040 1B78     		ldrb	r3, [r3]
 1284 0042 DBB2     		uxtb	r3, r3
 1285 0044 9A46     		mov	r10, r3
 1286              	.LVL94:
 824:Generated_Source\PSoC4/CyLib.c ****             }
 1287              		.loc 1 824 0
 1288 0046 394B     		ldr	r3, .L105+20
 1289 0048 1B78     		ldrb	r3, [r3]
 1290 004a DBB2     		uxtb	r3, r3
 1291 004c 9946     		mov	r9, r3
 1292              	.LVL95:
 1293 004e 23E0     		b	.L97
 1294              	.LVL96:
 1295              	.L98:
 826:Generated_Source\PSoC4/CyLib.c ****             {
 1296              		.loc 1 826 0
 1297 0050 374B     		ldr	r3, .L105+24
 1298 0052 1B78     		ldrb	r3, [r3]
 1299 0054 DBB2     		uxtb	r3, r3
 1300 0056 9C42     		cmp	r4, r3
 1301 0058 08D8     		bhi	.L99
 828:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1302              		.loc 1 828 0
 1303 005a 364B     		ldr	r3, .L105+28
 1304 005c 1B78     		ldrb	r3, [r3]
 1305 005e DBB2     		uxtb	r3, r3
 1306 0060 9A46     		mov	r10, r3
 1307              	.LVL97:
 829:Generated_Source\PSoC4/CyLib.c ****             }
 1308              		.loc 1 829 0
 1309 0062 354B     		ldr	r3, .L105+32
 1310 0064 1B78     		ldrb	r3, [r3]
 1311 0066 DBB2     		uxtb	r3, r3
 1312 0068 9946     		mov	r9, r3
 1313              	.LVL98:
 1314 006a 15E0     		b	.L97
 1315              	.LVL99:
 1316              	.L99:
 831:Generated_Source\PSoC4/CyLib.c ****             {
 1317              		.loc 1 831 0
 1318 006c 334B     		ldr	r3, .L105+36
 1319 006e 1B78     		ldrb	r3, [r3]
 1320 0070 DBB2     		uxtb	r3, r3
 1321 0072 9C42     		cmp	r4, r3
 1322 0074 08D8     		bhi	.L100
 833:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1323              		.loc 1 833 0
 1324 0076 324B     		ldr	r3, .L105+40
 1325 0078 1B78     		ldrb	r3, [r3]
 1326 007a DBB2     		uxtb	r3, r3
 1327 007c 9A46     		mov	r10, r3
 1328              	.LVL100:
 834:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 73


 1329              		.loc 1 834 0
 1330 007e 314B     		ldr	r3, .L105+44
 1331 0080 1B78     		ldrb	r3, [r3]
 1332 0082 DBB2     		uxtb	r3, r3
 1333 0084 9946     		mov	r9, r3
 1334              	.LVL101:
 1335 0086 07E0     		b	.L97
 1336              	.LVL102:
 1337              	.L100:
 838:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1338              		.loc 1 838 0
 1339 0088 2F4B     		ldr	r3, .L105+48
 1340 008a 1B78     		ldrb	r3, [r3]
 1341 008c DBB2     		uxtb	r3, r3
 1342 008e 9A46     		mov	r10, r3
 1343              	.LVL103:
 839:Generated_Source\PSoC4/CyLib.c ****             }
 1344              		.loc 1 839 0
 1345 0090 2E4B     		ldr	r3, .L105+52
 1346 0092 1B78     		ldrb	r3, [r3]
 1347 0094 DBB2     		uxtb	r3, r3
 1348 0096 9946     		mov	r9, r3
 1349              	.LVL104:
 1350              	.L97:
 843:Generated_Source\PSoC4/CyLib.c **** 
 1351              		.loc 1 843 0
 1352 0098 2D4B     		ldr	r3, .L105+56
 1353 009a DE5D     		ldrb	r6, [r3, r7]
 1354              	.LVL105:
 855:Generated_Source\PSoC4/CyLib.c ****             {
 1355              		.loc 1 855 0
 1356 009c 2F2E     		cmp	r6, #47
 1357 009e 09D9     		bls	.L101
 855:Generated_Source\PSoC4/CyLib.c ****             {
 1358              		.loc 1 855 0 is_stmt 0 discriminator 1
 1359 00a0 2A2C     		cmp	r4, #42
 1360 00a2 07D9     		bls	.L101
 858:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1361              		.loc 1 858 0 is_stmt 1
 1362 00a4 1922     		movs	r2, #25
 1363 00a6 2B4B     		ldr	r3, .L105+60
 1364 00a8 1A60     		str	r2, [r3]
 1365              	.LVL106:
 861:Generated_Source\PSoC4/CyLib.c **** 
 1366              		.loc 1 861 0
 1367 00aa 0520     		movs	r0, #5
 1368 00ac FFF7FEFF 		bl	CyDelayCycles
 1369              	.LVL107:
 863:Generated_Source\PSoC4/CyLib.c ****             }
 1370              		.loc 1 863 0
 1371 00b0 1925     		movs	r5, #25
 1372 00b2 03E0     		b	.L102
 1373              	.LVL108:
 1374              	.L101:
 867:Generated_Source\PSoC4/CyLib.c ****             }
 1375              		.loc 1 867 0
 1376 00b4 274B     		ldr	r3, .L105+60
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 74


 1377 00b6 1D68     		ldr	r5, [r3]
 1378 00b8 3F23     		movs	r3, #63
 1379 00ba 1D40     		ands	r5, r3
 1380              	.LVL109:
 1381              	.L102:
 879:Generated_Source\PSoC4/CyLib.c ****             {
 1382              		.loc 1 879 0
 1383 00bc B542     		cmp	r5, r6
 1384 00be 06D9     		bls	.L103
 882:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1385              		.loc 1 882 0
 1386 00c0 234B     		ldr	r3, .L105+56
 1387 00c2 DA5D     		ldrb	r2, [r3, r7]
 1388 00c4 234B     		ldr	r3, .L105+60
 1389 00c6 1A60     		str	r2, [r3]
 883:Generated_Source\PSoC4/CyLib.c ****             }
 1390              		.loc 1 883 0
 1391 00c8 0520     		movs	r0, #5
 1392 00ca FFF7FEFF 		bl	CyDelayCycles
 1393              	.LVL110:
 1394              	.L103:
 887:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1395              		.loc 1 887 0
 1396 00ce 1F4B     		ldr	r3, .L105+52
 1397 00d0 9C46     		mov	ip, r3
 1398 00d2 6444     		add	r4, r4, ip
 1399              	.LVL111:
 1400 00d4 2378     		ldrb	r3, [r4]
 1401 00d6 DBB2     		uxtb	r3, r3
 1402 00d8 1F4A     		ldr	r2, .L105+64
 1403 00da 1360     		str	r3, [r2]
 888:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1404              		.loc 1 888 0
 1405 00dc 1F4B     		ldr	r3, .L105+68
 1406 00de 5246     		mov	r2, r10
 1407 00e0 1A60     		str	r2, [r3]
 889:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1408              		.loc 1 889 0
 1409 00e2 1F4B     		ldr	r3, .L105+72
 1410 00e4 4A46     		mov	r2, r9
 1411 00e6 1A60     		str	r2, [r3]
 890:Generated_Source\PSoC4/CyLib.c **** 
 1412              		.loc 1 890 0
 1413 00e8 0520     		movs	r0, #5
 1414 00ea FFF7FEFF 		bl	CyDelayUs
 1415              	.LVL112:
 892:Generated_Source\PSoC4/CyLib.c ****             {
 1416              		.loc 1 892 0
 1417 00ee B542     		cmp	r5, r6
 1418 00f0 0AD2     		bcs	.L104
 895:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1419              		.loc 1 895 0
 1420 00f2 174B     		ldr	r3, .L105+56
 1421 00f4 DA5D     		ldrb	r2, [r3, r7]
 1422 00f6 174B     		ldr	r3, .L105+60
 1423 00f8 1A60     		str	r2, [r3]
 896:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 75


 1424              		.loc 1 896 0
 1425 00fa 0520     		movs	r0, #5
 1426 00fc FFF7FEFF 		bl	CyDelayCycles
 1427              	.LVL113:
 1428 0100 02E0     		b	.L104
 1429              	.LVL114:
 1430              	.L95:
 902:Generated_Source\PSoC4/CyLib.c ****         }
 1431              		.loc 1 902 0 discriminator 1
 1432 0102 0020     		movs	r0, #0
 1433 0104 FFF7FEFF 		bl	CyHalt
 1434              	.LVL115:
 1435              	.L104:
 921:Generated_Source\PSoC4/CyLib.c ****     }
 1436              		.loc 1 921 0
 1437 0108 0198     		ldr	r0, [sp, #4]
 1438 010a FFF7FEFF 		bl	CyExitCriticalSection
 1439              	.LVL116:
 922:Generated_Source\PSoC4/CyLib.c **** 
 1440              		.loc 1 922 0
 1441 010e 03B0     		add	sp, sp, #12
 1442              		@ sp needed
 1443              	.LVL117:
 1444 0110 0CBC     		pop	{r2, r3}
 1445 0112 9146     		mov	r9, r2
 1446 0114 9A46     		mov	r10, r3
 1447 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1448              	.L106:
 1449              		.align	2
 1450              	.L105:
 1451 0118 40F3FF0F 		.word	268432192
 1452 011c 41F3FF0F 		.word	268432193
 1453 0120 42F3FF0F 		.word	268432194
 1454 0124 43F3FF0F 		.word	268432195
 1455 0128 44F3FF0F 		.word	268432196
 1456 012c 45F3FF0F 		.word	268432197
 1457 0130 46F3FF0F 		.word	268432198
 1458 0134 47F3FF0F 		.word	268432199
 1459 0138 48F3FF0F 		.word	268432200
 1460 013c 49F3FF0F 		.word	268432201
 1461 0140 4AF3FF0F 		.word	268432202
 1462 0144 4BF3FF0F 		.word	268432203
 1463 0148 4CF3FF0F 		.word	268432204
 1464 014c 4DF3FF0F 		.word	268432205
 1465 0150 00000000 		.word	.LANCHOR1
 1466 0154 2CFF0B40 		.word	1074528044
 1467 0158 28FF0B40 		.word	1074528040
 1468 015c 1CFF0B40 		.word	1074528028
 1469 0160 20FF0B40 		.word	1074528032
 1470              		.cfi_endproc
 1471              	.LFE8:
 1472              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1473              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1474              		.align	2
 1475              		.global	CySysClkEcoStart
 1476              		.code	16
 1477              		.thumb_func
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 76


 1478              		.type	CySysClkEcoStart, %function
 1479              	CySysClkEcoStart:
 1480              	.LFB9:
1126:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1481              		.loc 1 1126 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              	.LVL118:
 1486 0000 10B5     		push	{r4, lr}
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 4, -8
 1489              		.cfi_offset 14, -4
 1490 0002 0400     		movs	r4, r0
 1491              	.LVL119:
1131:Generated_Source\PSoC4/CyLib.c **** 
 1492              		.loc 1 1131 0
 1493 0004 0F4A     		ldr	r2, .L112
 1494 0006 1168     		ldr	r1, [r2]
 1495 0008 0123     		movs	r3, #1
 1496 000a 0B43     		orrs	r3, r1
 1497 000c 1360     		str	r3, [r2]
1134:Generated_Source\PSoC4/CyLib.c **** 
 1498              		.loc 1 1134 0
 1499 000e 0E4A     		ldr	r2, .L112+4
 1500 0010 0E4B     		ldr	r3, .L112+8
 1501 0012 1A60     		str	r2, [r3]
1137:Generated_Source\PSoC4/CyLib.c ****         
 1502              		.loc 1 1137 0
 1503 0014 0E4A     		ldr	r2, .L112+12
 1504 0016 1368     		ldr	r3, [r2]
 1505 0018 8021     		movs	r1, #128
 1506 001a 0902     		lsls	r1, r1, #8
 1507 001c 0B43     		orrs	r3, r1
 1508 001e 1360     		str	r3, [r2]
1235:Generated_Source\PSoC4/CyLib.c ****         {
 1509              		.loc 1 1235 0
 1510 0020 0028     		cmp	r0, #0
 1511 0022 09D1     		bne	.L108
1127:Generated_Source\PSoC4/CyLib.c **** 
 1512              		.loc 1 1127 0
 1513 0024 0020     		movs	r0, #0
 1514              	.LVL120:
 1515 0026 0CE0     		b	.L109
 1516              	.L110:
1241:Generated_Source\PSoC4/CyLib.c **** 
 1517              		.loc 1 1241 0
 1518 0028 0120     		movs	r0, #1
 1519 002a FFF7FEFF 		bl	CyDelayUs
 1520              	.LVL121:
1243:Generated_Source\PSoC4/CyLib.c ****                 {
 1521              		.loc 1 1243 0
 1522 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1523              	.LVL122:
 1524 0032 0028     		cmp	r0, #0
 1525 0034 04D1     		bne	.L111
1239:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 77


 1526              		.loc 1 1239 0
 1527 0036 013C     		subs	r4, r4, #1
 1528              	.LVL123:
 1529              	.L108:
1239:Generated_Source\PSoC4/CyLib.c ****             {
 1530              		.loc 1 1239 0 is_stmt 0 discriminator 1
 1531 0038 002C     		cmp	r4, #0
 1532 003a F5D1     		bne	.L110
1237:Generated_Source\PSoC4/CyLib.c **** 
 1533              		.loc 1 1237 0 is_stmt 1
 1534 003c 1020     		movs	r0, #16
 1535 003e 00E0     		b	.L109
 1536              	.L111:
1245:Generated_Source\PSoC4/CyLib.c ****                     break;
 1537              		.loc 1 1245 0
 1538 0040 0020     		movs	r0, #0
 1539              	.L109:
 1540              	.LVL124:
1253:Generated_Source\PSoC4/CyLib.c **** 
 1541              		.loc 1 1253 0
 1542              		@ sp needed
 1543              	.LVL125:
 1544 0042 10BD     		pop	{r4, pc}
 1545              	.L113:
 1546              		.align	2
 1547              	.L112:
 1548 0044 60F02E40 		.word	1076818016
 1549 0048 02200000 		.word	8194
 1550 004c 78002E40 		.word	1076756600
 1551 0050 10002E40 		.word	1076756496
 1552              		.cfi_endproc
 1553              	.LFE9:
 1554              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1555              		.section	.text.CySysLvdEnable,"ax",%progbits
 1556              		.align	2
 1557              		.global	CySysLvdEnable
 1558              		.code	16
 1559              		.thumb_func
 1560              		.type	CySysLvdEnable, %function
 1561              	CySysLvdEnable:
 1562              	.LFB13:
2241:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1563              		.loc 1 2241 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
 1567              	.LVL126:
 1568 0000 70B5     		push	{r4, r5, r6, lr}
 1569              		.cfi_def_cfa_offset 16
 1570              		.cfi_offset 4, -16
 1571              		.cfi_offset 5, -12
 1572              		.cfi_offset 6, -8
 1573              		.cfi_offset 14, -4
 1574 0002 0300     		movs	r3, r0
2243:Generated_Source\PSoC4/CyLib.c **** 
 1575              		.loc 1 2243 0
 1576 0004 0D4C     		ldr	r4, .L115
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 78


 1577 0006 2268     		ldr	r2, [r4]
 1578 0008 0225     		movs	r5, #2
 1579 000a AA43     		bics	r2, r5
 1580 000c 2260     		str	r2, [r4]
2246:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1581              		.loc 1 2246 0
 1582 000e 0C4A     		ldr	r2, .L115+4
 1583 0010 1168     		ldr	r1, [r2]
 1584 0012 1E20     		movs	r0, #30
 1585              	.LVL127:
 1586 0014 8143     		bics	r1, r0
2247:Generated_Source\PSoC4/CyLib.c **** 
 1587              		.loc 1 2247 0
 1588 0016 5B00     		lsls	r3, r3, #1
 1589              	.LVL128:
 1590 0018 1840     		ands	r0, r3
2246:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1591              		.loc 1 2246 0
 1592 001a 0843     		orrs	r0, r1
 1593 001c 1060     		str	r0, [r2]
2250:Generated_Source\PSoC4/CyLib.c **** 
 1594              		.loc 1 2250 0
 1595 001e 1168     		ldr	r1, [r2]
 1596 0020 0123     		movs	r3, #1
 1597 0022 0B43     		orrs	r3, r1
 1598 0024 1360     		str	r3, [r2]
2253:Generated_Source\PSoC4/CyLib.c **** 
 1599              		.loc 1 2253 0
 1600 0026 FA20     		movs	r0, #250
 1601 0028 8000     		lsls	r0, r0, #2
 1602 002a FFF7FEFF 		bl	CyDelayUs
 1603              	.LVL129:
2256:Generated_Source\PSoC4/CyLib.c **** 
 1604              		.loc 1 2256 0
 1605 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1606              	.LVL130:
2259:Generated_Source\PSoC4/CyLib.c ****     }
 1607              		.loc 1 2259 0
 1608 0032 2368     		ldr	r3, [r4]
 1609 0034 1D43     		orrs	r5, r3
 1610 0036 2560     		str	r5, [r4]
2260:Generated_Source\PSoC4/CyLib.c **** 
 1611              		.loc 1 2260 0
 1612              		@ sp needed
 1613 0038 70BD     		pop	{r4, r5, r6, pc}
 1614              	.L116:
 1615 003a C046     		.align	2
 1616              	.L115:
 1617 003c 08000B40 		.word	1074462728
 1618 0040 18000B40 		.word	1074462744
 1619              		.cfi_endproc
 1620              	.LFE13:
 1621              		.size	CySysLvdEnable, .-CySysLvdEnable
 1622              		.global	__aeabi_uidiv
 1623              		.section	.text.CyDelayFreq,"ax",%progbits
 1624              		.align	2
 1625              		.global	CyDelayFreq
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 79


 1626              		.code	16
 1627              		.thumb_func
 1628              		.type	CyDelayFreq, %function
 1629              	CyDelayFreq:
 1630              	.LFB35:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2718:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2719:Generated_Source\PSoC4/CyLib.c **** {
 1631              		.loc 1 2719 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              	.LVL131:
 1636 0000 70B5     		push	{r4, r5, r6, lr}
 1637              		.cfi_def_cfa_offset 16
 1638              		.cfi_offset 4, -16
 1639              		.cfi_offset 5, -12
 1640              		.cfi_offset 6, -8
 1641              		.cfi_offset 14, -4
2720:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1642              		.loc 1 2720 0
 1643 0002 0028     		cmp	r0, #0
 1644 0004 02D0     		beq	.L118
2721:Generated_Source\PSoC4/CyLib.c ****     {
2722:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1645              		.loc 1 2722 0
 1646 0006 0C4B     		ldr	r3, .L120
 1647 0008 1861     		str	r0, [r3, #16]
 1648 000a 02E0     		b	.L119
 1649              	.L118:
2723:Generated_Source\PSoC4/CyLib.c ****     }
2724:Generated_Source\PSoC4/CyLib.c ****     else
2725:Generated_Source\PSoC4/CyLib.c ****     {
2726:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1650              		.loc 1 2726 0
 1651 000c 0B4A     		ldr	r2, .L120+4
 1652 000e 0A4B     		ldr	r3, .L120
 1653 0010 1A61     		str	r2, [r3, #16]
 1654              	.L119:
2727:Generated_Source\PSoC4/CyLib.c ****     }
2728:Generated_Source\PSoC4/CyLib.c **** 
2729:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1655              		.loc 1 2729 0
 1656 0012 094C     		ldr	r4, .L120
 1657 0014 2569     		ldr	r5, [r4, #16]
 1658 0016 0A4B     		ldr	r3, .L120+8
 1659 0018 E818     		adds	r0, r5, r3
 1660              	.LVL132:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 80


 1661 001a 0A49     		ldr	r1, .L120+12
 1662 001c FFF7FEFF 		bl	__aeabi_uidiv
 1663              	.LVL133:
 1664 0020 2073     		strb	r0, [r4, #12]
2730:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1665              		.loc 1 2730 0
 1666 0022 094B     		ldr	r3, .L120+16
 1667 0024 E818     		adds	r0, r5, r3
 1668 0026 FA21     		movs	r1, #250
 1669 0028 8900     		lsls	r1, r1, #2
 1670 002a FFF7FEFF 		bl	__aeabi_uidiv
 1671              	.LVL134:
 1672 002e A060     		str	r0, [r4, #8]
2731:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1673              		.loc 1 2731 0
 1674 0030 C003     		lsls	r0, r0, #15
 1675 0032 6060     		str	r0, [r4, #4]
2732:Generated_Source\PSoC4/CyLib.c **** }
 1676              		.loc 1 2732 0
 1677              		@ sp needed
 1678 0034 70BD     		pop	{r4, r5, r6, pc}
 1679              	.L121:
 1680 0036 C046     		.align	2
 1681              	.L120:
 1682 0038 00000000 		.word	.LANCHOR0
 1683 003c 006CDC02 		.word	48000000
 1684 0040 3F420F00 		.word	999999
 1685 0044 40420F00 		.word	1000000
 1686 0048 E7030000 		.word	999
 1687              		.cfi_endproc
 1688              	.LFE35:
 1689              		.size	CyDelayFreq, .-CyDelayFreq
 1690              		.section	.text.CySysTickStop,"ax",%progbits
 1691              		.align	2
 1692              		.global	CySysTickStop
 1693              		.code	16
 1694              		.thumb_func
 1695              		.type	CySysTickStop, %function
 1696              	CySysTickStop:
 1697              	.LFB39:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2740:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2743:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2744:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2747:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2748:Generated_Source\PSoC4/CyLib.c **** *
2749:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 81


2750:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2751:Generated_Source\PSoC4/CyLib.c **** {
2752:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2753:Generated_Source\PSoC4/CyLib.c ****     {
2754:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2755:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2756:Generated_Source\PSoC4/CyLib.c ****     }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2759:Generated_Source\PSoC4/CyLib.c **** }
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** 
2762:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2763:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2764:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2767:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2768:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2769:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2772:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2773:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2776:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2777:Generated_Source\PSoC4/CyLib.c **** *
2778:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2779:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2780:Generated_Source\PSoC4/CyLib.c **** {
2781:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2782:Generated_Source\PSoC4/CyLib.c **** 
2783:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2784:Generated_Source\PSoC4/CyLib.c ****     {
2785:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2786:Generated_Source\PSoC4/CyLib.c ****     }
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2791:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2792:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2793:Generated_Source\PSoC4/CyLib.c **** 
2794:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2795:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2796:Generated_Source\PSoC4/CyLib.c **** }
2797:Generated_Source\PSoC4/CyLib.c **** 
2798:Generated_Source\PSoC4/CyLib.c **** 
2799:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2800:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2801:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2802:Generated_Source\PSoC4/CyLib.c **** *
2803:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2806:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 82


2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2809:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2810:Generated_Source\PSoC4/CyLib.c **** {
2811:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2812:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2813:Generated_Source\PSoC4/CyLib.c **** }
2814:Generated_Source\PSoC4/CyLib.c **** 
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2817:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2818:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2823:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2824:Generated_Source\PSoC4/CyLib.c **** *
2825:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2826:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2827:Generated_Source\PSoC4/CyLib.c **** {
 1698              		.loc 1 2827 0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 0, uses_anonymous_args = 0
 1702              		@ link register save eliminated.
2828:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1703              		.loc 1 2828 0
 1704 0000 024A     		ldr	r2, .L123
 1705 0002 1368     		ldr	r3, [r2]
 1706 0004 0121     		movs	r1, #1
 1707 0006 8B43     		bics	r3, r1
 1708 0008 1360     		str	r3, [r2]
2829:Generated_Source\PSoC4/CyLib.c **** }
 1709              		.loc 1 2829 0
 1710              		@ sp needed
 1711 000a 7047     		bx	lr
 1712              	.L124:
 1713              		.align	2
 1714              	.L123:
 1715 000c 10E000E0 		.word	-536813552
 1716              		.cfi_endproc
 1717              	.LFE39:
 1718              		.size	CySysTickStop, .-CySysTickStop
 1719              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1720              		.align	2
 1721              		.global	CySysTickEnableInterrupt
 1722              		.code	16
 1723              		.thumb_func
 1724              		.type	CySysTickEnableInterrupt, %function
 1725              	CySysTickEnableInterrupt:
 1726              	.LFB40:
2830:Generated_Source\PSoC4/CyLib.c **** 
2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2833:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2834:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 83


2835:Generated_Source\PSoC4/CyLib.c **** *
2836:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2837:Generated_Source\PSoC4/CyLib.c **** *
2838:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2839:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2840:Generated_Source\PSoC4/CyLib.c **** *
2841:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2843:Generated_Source\PSoC4/CyLib.c **** {
 1727              		.loc 1 2843 0
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 0
 1730              		@ frame_needed = 0, uses_anonymous_args = 0
 1731              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1732              		.loc 1 2844 0
 1733 0000 024A     		ldr	r2, .L126
 1734 0002 1168     		ldr	r1, [r2]
 1735 0004 0223     		movs	r3, #2
 1736 0006 0B43     		orrs	r3, r1
 1737 0008 1360     		str	r3, [r2]
2845:Generated_Source\PSoC4/CyLib.c **** }
 1738              		.loc 1 2845 0
 1739              		@ sp needed
 1740 000a 7047     		bx	lr
 1741              	.L127:
 1742              		.align	2
 1743              	.L126:
 1744 000c 10E000E0 		.word	-536813552
 1745              		.cfi_endproc
 1746              	.LFE40:
 1747              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1748              		.section	.text.CySysTickEnable,"ax",%progbits
 1749              		.align	2
 1750              		.global	CySysTickEnable
 1751              		.code	16
 1752              		.thumb_func
 1753              		.type	CySysTickEnable, %function
 1754              	CySysTickEnable:
 1755              	.LFB38:
2810:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1756              		.loc 1 2810 0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 0
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
 1760 0000 10B5     		push	{r4, lr}
 1761              		.cfi_def_cfa_offset 8
 1762              		.cfi_offset 4, -8
 1763              		.cfi_offset 14, -4
2811:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1764              		.loc 1 2811 0
 1765 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1766              	.LVL135:
2812:Generated_Source\PSoC4/CyLib.c **** }
 1767              		.loc 1 2812 0
 1768 0006 034A     		ldr	r2, .L129
 1769 0008 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 84


 1770 000a 0123     		movs	r3, #1
 1771 000c 0B43     		orrs	r3, r1
 1772 000e 1360     		str	r3, [r2]
2813:Generated_Source\PSoC4/CyLib.c **** 
 1773              		.loc 1 2813 0
 1774              		@ sp needed
 1775 0010 10BD     		pop	{r4, pc}
 1776              	.L130:
 1777 0012 C046     		.align	2
 1778              	.L129:
 1779 0014 10E000E0 		.word	-536813552
 1780              		.cfi_endproc
 1781              	.LFE38:
 1782              		.size	CySysTickEnable, .-CySysTickEnable
 1783              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1784              		.align	2
 1785              		.global	CySysTickDisableInterrupt
 1786              		.code	16
 1787              		.thumb_func
 1788              		.type	CySysTickDisableInterrupt, %function
 1789              	CySysTickDisableInterrupt:
 1790              	.LFB41:
2846:Generated_Source\PSoC4/CyLib.c **** 
2847:Generated_Source\PSoC4/CyLib.c **** 
2848:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2849:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2850:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2855:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2858:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2859:Generated_Source\PSoC4/CyLib.c **** {
 1791              		.loc 1 2859 0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 0
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 1795              		@ link register save eliminated.
2860:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1796              		.loc 1 2860 0
 1797 0000 024A     		ldr	r2, .L132
 1798 0002 1368     		ldr	r3, [r2]
 1799 0004 0221     		movs	r1, #2
 1800 0006 8B43     		bics	r3, r1
 1801 0008 1360     		str	r3, [r2]
2861:Generated_Source\PSoC4/CyLib.c **** }
 1802              		.loc 1 2861 0
 1803              		@ sp needed
 1804 000a 7047     		bx	lr
 1805              	.L133:
 1806              		.align	2
 1807              	.L132:
 1808 000c 10E000E0 		.word	-536813552
 1809              		.cfi_endproc
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 85


 1810              	.LFE41:
 1811              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1812              		.section	.text.CySysTickSetReload,"ax",%progbits
 1813              		.align	2
 1814              		.global	CySysTickSetReload
 1815              		.code	16
 1816              		.thumb_func
 1817              		.type	CySysTickSetReload, %function
 1818              	CySysTickSetReload:
 1819              	.LFB42:
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c **** 
2864:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2865:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2866:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2869:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2870:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2871:Generated_Source\PSoC4/CyLib.c **** *
2872:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2873:Generated_Source\PSoC4/CyLib.c **** *
2874:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2875:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2876:Generated_Source\PSoC4/CyLib.c **** {
 1820              		.loc 1 2876 0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824              		@ link register save eliminated.
 1825              	.LVL136:
2877:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1826              		.loc 1 2877 0
 1827 0000 0002     		lsls	r0, r0, #8
 1828              	.LVL137:
 1829 0002 000A     		lsrs	r0, r0, #8
 1830 0004 014B     		ldr	r3, .L135
 1831 0006 1860     		str	r0, [r3]
2878:Generated_Source\PSoC4/CyLib.c **** }
 1832              		.loc 1 2878 0
 1833              		@ sp needed
 1834 0008 7047     		bx	lr
 1835              	.L136:
 1836 000a C046     		.align	2
 1837              	.L135:
 1838 000c 14E000E0 		.word	-536813548
 1839              		.cfi_endproc
 1840              	.LFE42:
 1841              		.size	CySysTickSetReload, .-CySysTickSetReload
 1842              		.section	.text.CySysTickGetReload,"ax",%progbits
 1843              		.align	2
 1844              		.global	CySysTickGetReload
 1845              		.code	16
 1846              		.thumb_func
 1847              		.type	CySysTickGetReload, %function
 1848              	CySysTickGetReload:
 1849              	.LFB43:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 86


2879:Generated_Source\PSoC4/CyLib.c **** 
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2882:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2883:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2884:Generated_Source\PSoC4/CyLib.c **** *
2885:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2886:Generated_Source\PSoC4/CyLib.c **** *
2887:Generated_Source\PSoC4/CyLib.c **** * \return
2888:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2889:Generated_Source\PSoC4/CyLib.c **** *
2890:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2891:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2892:Generated_Source\PSoC4/CyLib.c **** {
 1850              		.loc 1 2892 0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 0
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              		@ link register save eliminated.
2893:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1855              		.loc 1 2893 0
 1856 0000 024B     		ldr	r3, .L138
 1857 0002 1868     		ldr	r0, [r3]
 1858 0004 0002     		lsls	r0, r0, #8
 1859 0006 000A     		lsrs	r0, r0, #8
2894:Generated_Source\PSoC4/CyLib.c **** }
 1860              		.loc 1 2894 0
 1861              		@ sp needed
 1862 0008 7047     		bx	lr
 1863              	.L139:
 1864 000a C046     		.align	2
 1865              	.L138:
 1866 000c 14E000E0 		.word	-536813548
 1867              		.cfi_endproc
 1868              	.LFE43:
 1869              		.size	CySysTickGetReload, .-CySysTickGetReload
 1870              		.section	.text.CySysTickGetValue,"ax",%progbits
 1871              		.align	2
 1872              		.global	CySysTickGetValue
 1873              		.code	16
 1874              		.thumb_func
 1875              		.type	CySysTickGetValue, %function
 1876              	CySysTickGetValue:
 1877              	.LFB44:
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** 
2897:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2898:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2899:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2902:Generated_Source\PSoC4/CyLib.c **** *
2903:Generated_Source\PSoC4/CyLib.c **** * \return
2904:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 87


2908:Generated_Source\PSoC4/CyLib.c **** {
 1878              		.loc 1 2908 0
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 0
 1881              		@ frame_needed = 0, uses_anonymous_args = 0
 1882              		@ link register save eliminated.
2909:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1883              		.loc 1 2909 0
 1884 0000 024B     		ldr	r3, .L141
 1885 0002 1868     		ldr	r0, [r3]
 1886 0004 0002     		lsls	r0, r0, #8
 1887 0006 000A     		lsrs	r0, r0, #8
2910:Generated_Source\PSoC4/CyLib.c **** }
 1888              		.loc 1 2910 0
 1889              		@ sp needed
 1890 0008 7047     		bx	lr
 1891              	.L142:
 1892 000a C046     		.align	2
 1893              	.L141:
 1894 000c 18E000E0 		.word	-536813544
 1895              		.cfi_endproc
 1896              	.LFE44:
 1897              		.size	CySysTickGetValue, .-CySysTickGetValue
 1898              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1899              		.align	2
 1900              		.global	CySysTickSetClockSource
 1901              		.code	16
 1902              		.thumb_func
 1903              		.type	CySysTickSetClockSource, %function
 1904              	CySysTickSetClockSource:
 1905              	.LFB45:
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2914:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2915:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2916:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2917:Generated_Source\PSoC4/CyLib.c ****     *
2918:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2919:Generated_Source\PSoC4/CyLib.c ****     *
2920:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2921:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2922:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2923:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2924:Generated_Source\PSoC4/CyLib.c ****     *
2925:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2926:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2927:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2928:Generated_Source\PSoC4/CyLib.c ****     *
2929:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2930:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2931:Generated_Source\PSoC4/CyLib.c ****     *
2932:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2933:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2934:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2935:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2936:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 88


2937:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2938:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2939:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2940:Generated_Source\PSoC4/CyLib.c ****     {
 1906              		.loc 1 2940 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 0
 1909              		@ frame_needed = 0, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911              	.LVL138:
2941:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1912              		.loc 1 2941 0
 1913 0000 0128     		cmp	r0, #1
 1914 0002 05D1     		bne	.L144
2942:Generated_Source\PSoC4/CyLib.c ****         {
2943:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1915              		.loc 1 2943 0
 1916 0004 054A     		ldr	r2, .L146
 1917 0006 1168     		ldr	r1, [r2]
 1918 0008 0423     		movs	r3, #4
 1919 000a 0B43     		orrs	r3, r1
 1920 000c 1360     		str	r3, [r2]
 1921 000e 04E0     		b	.L143
 1922              	.L144:
2944:Generated_Source\PSoC4/CyLib.c ****         }
2945:Generated_Source\PSoC4/CyLib.c ****         else
2946:Generated_Source\PSoC4/CyLib.c ****         {
2947:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1923              		.loc 1 2947 0
 1924 0010 024A     		ldr	r2, .L146
 1925 0012 1368     		ldr	r3, [r2]
 1926 0014 0421     		movs	r1, #4
 1927 0016 8B43     		bics	r3, r1
 1928 0018 1360     		str	r3, [r2]
 1929              	.L143:
2948:Generated_Source\PSoC4/CyLib.c ****         }
2949:Generated_Source\PSoC4/CyLib.c ****     }
 1930              		.loc 1 2949 0
 1931              		@ sp needed
 1932 001a 7047     		bx	lr
 1933              	.L147:
 1934              		.align	2
 1935              	.L146:
 1936 001c 10E000E0 		.word	-536813552
 1937              		.cfi_endproc
 1938              	.LFE45:
 1939              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1940              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1941              		.align	2
 1942              		.global	CySysTickGetClockSource
 1943              		.code	16
 1944              		.thumb_func
 1945              		.type	CySysTickGetClockSource, %function
 1946              	CySysTickGetClockSource:
 1947              	.LFB46:
2950:Generated_Source\PSoC4/CyLib.c **** 
2951:Generated_Source\PSoC4/CyLib.c ****     
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 89


2952:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2954:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c ****     *
2956:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2959:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2961:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2963:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2964:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2965:Generated_Source\PSoC4/CyLib.c ****     {
 1948              		.loc 1 2965 0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              		@ link register save eliminated.
2966:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1953              		.loc 1 2966 0
 1954 0000 024B     		ldr	r3, .L149
 1955 0002 1868     		ldr	r0, [r3]
 1956 0004 8008     		lsrs	r0, r0, #2
 1957 0006 0123     		movs	r3, #1
 1958 0008 1840     		ands	r0, r3
2967:Generated_Source\PSoC4/CyLib.c ****     }
 1959              		.loc 1 2967 0
 1960              		@ sp needed
 1961 000a 7047     		bx	lr
 1962              	.L150:
 1963              		.align	2
 1964              	.L149:
 1965 000c 10E000E0 		.word	-536813552
 1966              		.cfi_endproc
 1967              	.LFE46:
 1968              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1969              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1970              		.align	2
 1971              		.global	CySysTickGetCountFlag
 1972              		.code	16
 1973              		.thumb_func
 1974              		.type	CySysTickGetCountFlag, %function
 1975              	CySysTickGetCountFlag:
 1976              	.LFB47:
2968:Generated_Source\PSoC4/CyLib.c ****     
2969:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2977:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2978:Generated_Source\PSoC4/CyLib.c **** *
2979:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 90


2980:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *
2983:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2984:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2985:Generated_Source\PSoC4/CyLib.c **** *
2986:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2987:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2988:Generated_Source\PSoC4/CyLib.c **** {
 1977              		.loc 1 2988 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 0
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              		@ link register save eliminated.
2989:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1982              		.loc 1 2989 0
 1983 0000 024B     		ldr	r3, .L152
 1984 0002 1868     		ldr	r0, [r3]
 1985 0004 000C     		lsrs	r0, r0, #16
 1986 0006 0123     		movs	r3, #1
 1987 0008 1840     		ands	r0, r3
2990:Generated_Source\PSoC4/CyLib.c **** }
 1988              		.loc 1 2990 0
 1989              		@ sp needed
 1990 000a 7047     		bx	lr
 1991              	.L153:
 1992              		.align	2
 1993              	.L152:
 1994 000c 10E000E0 		.word	-536813552
 1995              		.cfi_endproc
 1996              	.LFE47:
 1997              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1998              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1999              		.align	2
 2000              		.code	16
 2001              		.thumb_func
 2002              		.type	CySysTickServiceCallbacks, %function
 2003              	CySysTickServiceCallbacks:
 2004              	.LFB51:
2991:Generated_Source\PSoC4/CyLib.c **** 
2992:Generated_Source\PSoC4/CyLib.c **** 
2993:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2994:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2995:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2996:Generated_Source\PSoC4/CyLib.c **** *
2997:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2998:Generated_Source\PSoC4/CyLib.c **** *
2999:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3000:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3001:Generated_Source\PSoC4/CyLib.c **** {
3002:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3003:Generated_Source\PSoC4/CyLib.c **** }
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 91


3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3011:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3012:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3015:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3016:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3017:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3018:Generated_Source\PSoC4/CyLib.c **** *  functions.
3019:Generated_Source\PSoC4/CyLib.c **** *
3020:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3021:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3024:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3025:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3026:Generated_Source\PSoC4/CyLib.c **** *
3027:Generated_Source\PSoC4/CyLib.c **** * \return
3028:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3029:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3030:Generated_Source\PSoC4/CyLib.c **** *
3031:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3032:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3033:Generated_Source\PSoC4/CyLib.c **** *
3034:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3036:Generated_Source\PSoC4/CyLib.c **** {
3037:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3040:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3041:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3042:Generated_Source\PSoC4/CyLib.c **** }
3043:Generated_Source\PSoC4/CyLib.c **** 
3044:Generated_Source\PSoC4/CyLib.c **** 
3045:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3046:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3047:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3050:Generated_Source\PSoC4/CyLib.c **** *
3051:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3052:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** * \return
3055:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3056:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3060:Generated_Source\PSoC4/CyLib.c **** {
3061:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3062:Generated_Source\PSoC4/CyLib.c **** }
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 92


3066:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3067:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3073:Generated_Source\PSoC4/CyLib.c **** {
 2005              		.loc 1 3073 0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 0
 2008              		@ frame_needed = 0, uses_anonymous_args = 0
 2009 0000 10B5     		push	{r4, lr}
 2010              		.cfi_def_cfa_offset 8
 2011              		.cfi_offset 4, -8
 2012              		.cfi_offset 14, -4
3074:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3077:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2013              		.loc 1 3077 0
 2014 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2015              	.LVL139:
 2016 0006 0128     		cmp	r0, #1
 2017 0008 0BD1     		bne	.L154
 2018 000a 07E0     		b	.L159
 2019              	.LVL140:
 2020              	.L158:
3078:Generated_Source\PSoC4/CyLib.c ****     {
3079:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3080:Generated_Source\PSoC4/CyLib.c ****         {
3081:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2021              		.loc 1 3081 0
 2022 000c A300     		lsls	r3, r4, #2
 2023 000e 054A     		ldr	r2, .L160
 2024 0010 9B58     		ldr	r3, [r3, r2]
 2025 0012 002B     		cmp	r3, #0
 2026 0014 00D0     		beq	.L157
3082:Generated_Source\PSoC4/CyLib.c ****             {
3083:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2027              		.loc 1 3083 0
 2028 0016 9847     		blx	r3
 2029              	.LVL141:
 2030              	.L157:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 2031              		.loc 1 3079 0 discriminator 2
 2032 0018 0134     		adds	r4, r4, #1
 2033              	.LVL142:
 2034 001a 00E0     		b	.L155
 2035              	.LVL143:
 2036              	.L159:
 2037 001c 0024     		movs	r4, #0
 2038              	.L155:
 2039              	.LVL144:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 2040              		.loc 1 3079 0 is_stmt 0 discriminator 1
 2041 001e 042C     		cmp	r4, #4
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 93


 2042 0020 F4D9     		bls	.L158
 2043              	.LVL145:
 2044              	.L154:
3084:Generated_Source\PSoC4/CyLib.c ****             }
3085:Generated_Source\PSoC4/CyLib.c ****         }
3086:Generated_Source\PSoC4/CyLib.c ****     }
3087:Generated_Source\PSoC4/CyLib.c **** }
 2045              		.loc 1 3087 0 is_stmt 1
 2046              		@ sp needed
 2047 0022 10BD     		pop	{r4, pc}
 2048              	.L161:
 2049              		.align	2
 2050              	.L160:
 2051 0024 00000000 		.word	.LANCHOR2
 2052              		.cfi_endproc
 2053              	.LFE51:
 2054              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2055              		.section	.text.CySysTickClear,"ax",%progbits
 2056              		.align	2
 2057              		.global	CySysTickClear
 2058              		.code	16
 2059              		.thumb_func
 2060              		.type	CySysTickClear, %function
 2061              	CySysTickClear:
 2062              	.LFB48:
3001:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2063              		.loc 1 3001 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
 2067              		@ link register save eliminated.
3002:Generated_Source\PSoC4/CyLib.c **** }
 2068              		.loc 1 3002 0
 2069 0000 0022     		movs	r2, #0
 2070 0002 014B     		ldr	r3, .L163
 2071 0004 1A60     		str	r2, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** 
 2072              		.loc 1 3003 0
 2073              		@ sp needed
 2074 0006 7047     		bx	lr
 2075              	.L164:
 2076              		.align	2
 2077              	.L163:
 2078 0008 18E000E0 		.word	-536813544
 2079              		.cfi_endproc
 2080              	.LFE48:
 2081              		.size	CySysTickClear, .-CySysTickClear
 2082              		.section	.text.CySysTickInit,"ax",%progbits
 2083              		.align	2
 2084              		.global	CySysTickInit
 2085              		.code	16
 2086              		.thumb_func
 2087              		.type	CySysTickInit, %function
 2088              	CySysTickInit:
 2089              	.LFB37:
2780:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 2090              		.loc 1 2780 0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 94


 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 0
 2093              		@ frame_needed = 0, uses_anonymous_args = 0
 2094 0000 10B5     		push	{r4, lr}
 2095              		.cfi_def_cfa_offset 8
 2096              		.cfi_offset 4, -8
 2097              		.cfi_offset 14, -4
 2098              	.LVL146:
2783:Generated_Source\PSoC4/CyLib.c ****     {
 2099              		.loc 1 2783 0
 2100 0002 0023     		movs	r3, #0
 2101 0004 04E0     		b	.L166
 2102              	.LVL147:
 2103              	.L167:
2785:Generated_Source\PSoC4/CyLib.c ****     }
 2104              		.loc 1 2785 0 discriminator 3
 2105 0006 9900     		lsls	r1, r3, #2
 2106 0008 0020     		movs	r0, #0
 2107 000a 0B4A     		ldr	r2, .L168
 2108 000c 8850     		str	r0, [r1, r2]
2783:Generated_Source\PSoC4/CyLib.c ****     {
 2109              		.loc 1 2783 0 discriminator 3
 2110 000e 0133     		adds	r3, r3, #1
 2111              	.LVL148:
 2112              	.L166:
2783:Generated_Source\PSoC4/CyLib.c ****     {
 2113              		.loc 1 2783 0 is_stmt 0 discriminator 1
 2114 0010 042B     		cmp	r3, #4
 2115 0012 F8D9     		bls	.L167
2788:Generated_Source\PSoC4/CyLib.c **** 
 2116              		.loc 1 2788 0 is_stmt 1
 2117 0014 0949     		ldr	r1, .L168+4
 2118 0016 0F20     		movs	r0, #15
 2119 0018 FFF7FEFF 		bl	CyIntSetSysVector
 2120              	.LVL149:
2791:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 2121              		.loc 1 2791 0
 2122 001c 0120     		movs	r0, #1
 2123 001e FFF7FEFF 		bl	CySysTickSetClockSource
 2124              	.LVL150:
2794:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2125              		.loc 1 2794 0
 2126 0022 074B     		ldr	r3, .L168+8
 2127 0024 1869     		ldr	r0, [r3, #16]
 2128 0026 FA21     		movs	r1, #250
 2129 0028 8900     		lsls	r1, r1, #2
 2130 002a FFF7FEFF 		bl	__aeabi_uidiv
 2131              	.LVL151:
 2132 002e FFF7FEFF 		bl	CySysTickSetReload
 2133              	.LVL152:
2795:Generated_Source\PSoC4/CyLib.c **** }
 2134              		.loc 1 2795 0
 2135 0032 FFF7FEFF 		bl	CySysTickClear
 2136              	.LVL153:
2796:Generated_Source\PSoC4/CyLib.c **** 
 2137              		.loc 1 2796 0
 2138              		@ sp needed
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 95


 2139 0036 10BD     		pop	{r4, pc}
 2140              	.L169:
 2141              		.align	2
 2142              	.L168:
 2143 0038 00000000 		.word	.LANCHOR2
 2144 003c 00000000 		.word	CySysTickServiceCallbacks
 2145 0040 00000000 		.word	.LANCHOR0
 2146              		.cfi_endproc
 2147              	.LFE37:
 2148              		.size	CySysTickInit, .-CySysTickInit
 2149              		.section	.text.CySysTickStart,"ax",%progbits
 2150              		.align	2
 2151              		.global	CySysTickStart
 2152              		.code	16
 2153              		.thumb_func
 2154              		.type	CySysTickStart, %function
 2155              	CySysTickStart:
 2156              	.LFB36:
2751:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2157              		.loc 1 2751 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161 0000 10B5     		push	{r4, lr}
 2162              		.cfi_def_cfa_offset 8
 2163              		.cfi_offset 4, -8
 2164              		.cfi_offset 14, -4
2752:Generated_Source\PSoC4/CyLib.c ****     {
 2165              		.loc 1 2752 0
 2166 0002 064B     		ldr	r3, .L172
 2167 0004 5B69     		ldr	r3, [r3, #20]
 2168 0006 002B     		cmp	r3, #0
 2169 0008 04D1     		bne	.L171
2754:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2170              		.loc 1 2754 0
 2171 000a FFF7FEFF 		bl	CySysTickInit
 2172              	.LVL154:
2755:Generated_Source\PSoC4/CyLib.c ****     }
 2173              		.loc 1 2755 0
 2174 000e 0122     		movs	r2, #1
 2175 0010 024B     		ldr	r3, .L172
 2176 0012 5A61     		str	r2, [r3, #20]
 2177              	.L171:
2758:Generated_Source\PSoC4/CyLib.c **** }
 2178              		.loc 1 2758 0
 2179 0014 FFF7FEFF 		bl	CySysTickEnable
 2180              	.LVL155:
2759:Generated_Source\PSoC4/CyLib.c **** 
 2181              		.loc 1 2759 0
 2182              		@ sp needed
 2183 0018 10BD     		pop	{r4, pc}
 2184              	.L173:
 2185 001a C046     		.align	2
 2186              	.L172:
 2187 001c 00000000 		.word	.LANCHOR2
 2188              		.cfi_endproc
 2189              	.LFE36:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 96


 2190              		.size	CySysTickStart, .-CySysTickStart
 2191              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2192              		.align	2
 2193              		.global	CySysTickSetCallback
 2194              		.code	16
 2195              		.thumb_func
 2196              		.type	CySysTickSetCallback, %function
 2197              	CySysTickSetCallback:
 2198              	.LFB49:
3036:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2199              		.loc 1 3036 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 0
 2202              		@ frame_needed = 0, uses_anonymous_args = 0
 2203              		@ link register save eliminated.
 2204              	.LVL156:
3039:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2205              		.loc 1 3039 0
 2206 0000 024A     		ldr	r2, .L175
 2207 0002 8300     		lsls	r3, r0, #2
 2208 0004 9858     		ldr	r0, [r3, r2]
 2209              	.LVL157:
3040:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2210              		.loc 1 3040 0
 2211 0006 9950     		str	r1, [r3, r2]
3042:Generated_Source\PSoC4/CyLib.c **** 
 2212              		.loc 1 3042 0
 2213              		@ sp needed
 2214 0008 7047     		bx	lr
 2215              	.L176:
 2216 000a C046     		.align	2
 2217              	.L175:
 2218 000c 00000000 		.word	.LANCHOR2
 2219              		.cfi_endproc
 2220              	.LFE49:
 2221              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2222              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2223              		.align	2
 2224              		.global	CySysTickGetCallback
 2225              		.code	16
 2226              		.thumb_func
 2227              		.type	CySysTickGetCallback, %function
 2228              	CySysTickGetCallback:
 2229              	.LFB50:
3060:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2230              		.loc 1 3060 0
 2231              		.cfi_startproc
 2232              		@ args = 0, pretend = 0, frame = 0
 2233              		@ frame_needed = 0, uses_anonymous_args = 0
 2234              		@ link register save eliminated.
 2235              	.LVL158:
3061:Generated_Source\PSoC4/CyLib.c **** }
 2236              		.loc 1 3061 0
 2237 0000 8000     		lsls	r0, r0, #2
 2238              	.LVL159:
 2239 0002 014B     		ldr	r3, .L178
 2240 0004 C058     		ldr	r0, [r0, r3]
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 97


3062:Generated_Source\PSoC4/CyLib.c **** 
 2241              		.loc 1 3062 0
 2242              		@ sp needed
 2243 0006 7047     		bx	lr
 2244              	.L179:
 2245              		.align	2
 2246              	.L178:
 2247 0008 00000000 		.word	.LANCHOR2
 2248              		.cfi_endproc
 2249              	.LFE50:
 2250              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2251              		.section	.text.CyGetUniqueId,"ax",%progbits
 2252              		.align	2
 2253              		.global	CyGetUniqueId
 2254              		.code	16
 2255              		.thumb_func
 2256              		.type	CyGetUniqueId, %function
 2257              	CyGetUniqueId:
 2258              	.LFB52:
3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3092:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c **** *
3094:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3095:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3096:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3097:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3098:Generated_Source\PSoC4/CyLib.c **** *
3099:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3100:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3101:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3102:Generated_Source\PSoC4/CyLib.c **** *
3103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3104:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3105:Generated_Source\PSoC4/CyLib.c **** {
 2259              		.loc 1 3105 0
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 0
 2262              		@ frame_needed = 0, uses_anonymous_args = 0
 2263              		@ link register save eliminated.
 2264              	.LVL160:
3106:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3107:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2265              		.loc 1 3107 0
 2266 0000 134B     		ldr	r3, .L181
 2267 0002 1B78     		ldrb	r3, [r3]
 2268 0004 DAB2     		uxtb	r2, r3
 2269 0006 0260     		str	r2, [r0]
3108:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2270              		.loc 1 3108 0
 2271 0008 124B     		ldr	r3, .L181+4
 2272 000a 1B78     		ldrb	r3, [r3]
 2273 000c 1B02     		lsls	r3, r3, #8
 2274 000e 1343     		orrs	r3, r2
 2275 0010 0360     		str	r3, [r0]
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 98


3109:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2276              		.loc 1 3109 0
 2277 0012 114A     		ldr	r2, .L181+8
 2278 0014 1278     		ldrb	r2, [r2]
 2279 0016 1204     		lsls	r2, r2, #16
 2280 0018 1343     		orrs	r3, r2
 2281 001a 0360     		str	r3, [r0]
3110:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2282              		.loc 1 3110 0
 2283 001c 0F4A     		ldr	r2, .L181+12
 2284 001e 1278     		ldrb	r2, [r2]
 2285 0020 1206     		lsls	r2, r2, #24
 2286 0022 1343     		orrs	r3, r2
 2287 0024 0360     		str	r3, [r0]
3111:Generated_Source\PSoC4/CyLib.c **** 
3112:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2288              		.loc 1 3112 0
 2289 0026 0E4B     		ldr	r3, .L181+16
 2290 0028 1B78     		ldrb	r3, [r3]
 2291 002a DAB2     		uxtb	r2, r3
 2292 002c 4260     		str	r2, [r0, #4]
3113:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2293              		.loc 1 3113 0
 2294 002e 0D4B     		ldr	r3, .L181+20
 2295 0030 1B78     		ldrb	r3, [r3]
 2296 0032 1B02     		lsls	r3, r3, #8
 2297 0034 1343     		orrs	r3, r2
 2298 0036 4360     		str	r3, [r0, #4]
3114:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2299              		.loc 1 3114 0
 2300 0038 0B4A     		ldr	r2, .L181+24
 2301 003a 1278     		ldrb	r2, [r2]
 2302 003c 1204     		lsls	r2, r2, #16
 2303 003e 1343     		orrs	r3, r2
 2304 0040 4360     		str	r3, [r0, #4]
3115:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2305              		.loc 1 3115 0
 2306 0042 0A4A     		ldr	r2, .L181+28
 2307 0044 1278     		ldrb	r2, [r2]
 2308 0046 1206     		lsls	r2, r2, #24
 2309 0048 1343     		orrs	r3, r2
 2310 004a 4360     		str	r3, [r0, #4]
3116:Generated_Source\PSoC4/CyLib.c **** #else
3117:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3118:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3119:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3120:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3121:Generated_Source\PSoC4/CyLib.c **** 
3122:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3123:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3124:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3125:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3126:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3127:Generated_Source\PSoC4/CyLib.c **** }
 2311              		.loc 1 3127 0
 2312              		@ sp needed
 2313 004c 7047     		bx	lr
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 99


 2314              	.L182:
 2315 004e C046     		.align	2
 2316              	.L181:
 2317 0050 78F2FF0F 		.word	268431992
 2318 0054 79F2FF0F 		.word	268431993
 2319 0058 7AF2FF0F 		.word	268431994
 2320 005c 7BF2FF0F 		.word	268431995
 2321 0060 7CF2FF0F 		.word	268431996
 2322 0064 7DF2FF0F 		.word	268431997
 2323 0068 7EF2FF0F 		.word	268431998
 2324 006c 7FF2FF0F 		.word	268431999
 2325              		.cfi_endproc
 2326              	.LFE52:
 2327              		.size	CyGetUniqueId, .-CyGetUniqueId
 2328              		.global	CySysClkPumpConfig
 2329              		.global	cyImoFreqMhz2Reg
 2330              		.global	CySysTickInitVar
 2331              		.global	cydelay32kMs
 2332              		.global	cydelayFreqMhz
 2333              		.global	cydelayFreqKhz
 2334              		.global	cydelayFreqHz
 2335              		.section	.rodata
 2336              		.align	2
 2337              		.set	.LANCHOR1,. + 0
 2338              		.type	cyImoFreqMhz2Reg, %object
 2339              		.size	cyImoFreqMhz2Reg, 46
 2340              	cyImoFreqMhz2Reg:
 2341 0000 03       		.byte	3
 2342 0001 04       		.byte	4
 2343 0002 05       		.byte	5
 2344 0003 06       		.byte	6
 2345 0004 07       		.byte	7
 2346 0005 08       		.byte	8
 2347 0006 09       		.byte	9
 2348 0007 0A       		.byte	10
 2349 0008 0B       		.byte	11
 2350 0009 0C       		.byte	12
 2351 000a 0E       		.byte	14
 2352 000b 0F       		.byte	15
 2353 000c 10       		.byte	16
 2354 000d 11       		.byte	17
 2355 000e 12       		.byte	18
 2356 000f 13       		.byte	19
 2357 0010 14       		.byte	20
 2358 0011 15       		.byte	21
 2359 0012 16       		.byte	22
 2360 0013 17       		.byte	23
 2361 0014 18       		.byte	24
 2362 0015 19       		.byte	25
 2363 0016 1B       		.byte	27
 2364 0017 1C       		.byte	28
 2365 0018 1D       		.byte	29
 2366 0019 1E       		.byte	30
 2367 001a 1F       		.byte	31
 2368 001b 20       		.byte	32
 2369 001c 21       		.byte	33
 2370 001d 22       		.byte	34
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 100


 2371 001e 23       		.byte	35
 2372 001f 25       		.byte	37
 2373 0020 26       		.byte	38
 2374 0021 27       		.byte	39
 2375 0022 28       		.byte	40
 2376 0023 29       		.byte	41
 2377 0024 2A       		.byte	42
 2378 0025 2B       		.byte	43
 2379 0026 2E       		.byte	46
 2380 0027 2F       		.byte	47
 2381 0028 30       		.byte	48
 2382 0029 31       		.byte	49
 2383 002a 32       		.byte	50
 2384 002b 33       		.byte	51
 2385 002c 34       		.byte	52
 2386 002d 35       		.byte	53
 2387              		.data
 2388              		.align	2
 2389              		.set	.LANCHOR0,. + 0
 2390              		.type	CySysClkPumpConfig, %object
 2391              		.size	CySysClkPumpConfig, 4
 2392              	CySysClkPumpConfig:
 2393 0000 01000000 		.word	1
 2394              		.type	cydelay32kMs, %object
 2395              		.size	cydelay32kMs, 4
 2396              	cydelay32kMs:
 2397 0004 0000C05D 		.word	1572864000
 2398              		.type	cydelayFreqKhz, %object
 2399              		.size	cydelayFreqKhz, 4
 2400              	cydelayFreqKhz:
 2401 0008 80BB0000 		.word	48000
 2402              		.type	cydelayFreqMhz, %object
 2403              		.size	cydelayFreqMhz, 1
 2404              	cydelayFreqMhz:
 2405 000c 30       		.byte	48
 2406 000d 000000   		.space	3
 2407              		.type	cydelayFreqHz, %object
 2408              		.size	cydelayFreqHz, 4
 2409              	cydelayFreqHz:
 2410 0010 006CDC02 		.word	48000000
 2411              		.bss
 2412              		.align	2
 2413              		.set	.LANCHOR2,. + 0
 2414              		.type	CySysTickCallbacks, %object
 2415              		.size	CySysTickCallbacks, 20
 2416              	CySysTickCallbacks:
 2417 0000 00000000 		.space	20
 2417      00000000 
 2417      00000000 
 2417      00000000 
 2417      00000000 
 2418              		.type	CySysTickInitVar, %object
 2419              		.size	CySysTickInitVar, 4
 2420              	CySysTickInitVar:
 2421 0014 00000000 		.space	4
 2422              		.text
 2423              	.Letext0:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 101


 2424              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2425              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2426              		.section	.debug_info,"",%progbits
 2427              	.Ldebug_info0:
 2428 0000 2C0C0000 		.4byte	0xc2c
 2429 0004 0400     		.2byte	0x4
 2430 0006 00000000 		.4byte	.Ldebug_abbrev0
 2431 000a 04       		.byte	0x4
 2432 000b 01       		.uleb128 0x1
 2433 000c 84000000 		.4byte	.LASF114
 2434 0010 0C       		.byte	0xc
 2435 0011 E8060000 		.4byte	.LASF115
 2436 0015 9D040000 		.4byte	.LASF116
 2437 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2438 001d 00000000 		.4byte	0
 2439 0021 00000000 		.4byte	.Ldebug_line0
 2440 0025 02       		.uleb128 0x2
 2441 0026 01       		.byte	0x1
 2442 0027 06       		.byte	0x6
 2443 0028 8C010000 		.4byte	.LASF0
 2444 002c 02       		.uleb128 0x2
 2445 002d 01       		.byte	0x1
 2446 002e 08       		.byte	0x8
 2447 002f 54050000 		.4byte	.LASF1
 2448 0033 02       		.uleb128 0x2
 2449 0034 02       		.byte	0x2
 2450 0035 05       		.byte	0x5
 2451 0036 62050000 		.4byte	.LASF2
 2452 003a 02       		.uleb128 0x2
 2453 003b 02       		.byte	0x2
 2454 003c 07       		.byte	0x7
 2455 003d 66030000 		.4byte	.LASF3
 2456 0041 02       		.uleb128 0x2
 2457 0042 04       		.byte	0x4
 2458 0043 05       		.byte	0x5
 2459 0044 CB010000 		.4byte	.LASF4
 2460 0048 02       		.uleb128 0x2
 2461 0049 04       		.byte	0x4
 2462 004a 07       		.byte	0x7
 2463 004b EE020000 		.4byte	.LASF5
 2464 004f 02       		.uleb128 0x2
 2465 0050 08       		.byte	0x8
 2466 0051 05       		.byte	0x5
 2467 0052 7E010000 		.4byte	.LASF6
 2468 0056 02       		.uleb128 0x2
 2469 0057 08       		.byte	0x8
 2470 0058 07       		.byte	0x7
 2471 0059 12010000 		.4byte	.LASF7
 2472 005d 03       		.uleb128 0x3
 2473 005e 04       		.byte	0x4
 2474 005f 05       		.byte	0x5
 2475 0060 696E7400 		.ascii	"int\000"
 2476 0064 02       		.uleb128 0x2
 2477 0065 04       		.byte	0x4
 2478 0066 07       		.byte	0x7
 2479 0067 D2020000 		.4byte	.LASF8
 2480 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 102


 2481 006c F6010000 		.4byte	.LASF9
 2482 0070 02       		.byte	0x2
 2483 0071 E401     		.2byte	0x1e4
 2484 0073 2C000000 		.4byte	0x2c
 2485 0077 04       		.uleb128 0x4
 2486 0078 17000000 		.4byte	.LASF10
 2487 007c 02       		.byte	0x2
 2488 007d E501     		.2byte	0x1e5
 2489 007f 3A000000 		.4byte	0x3a
 2490 0083 04       		.uleb128 0x4
 2491 0084 36020000 		.4byte	.LASF11
 2492 0088 02       		.byte	0x2
 2493 0089 E601     		.2byte	0x1e6
 2494 008b 48000000 		.4byte	0x48
 2495 008f 02       		.uleb128 0x2
 2496 0090 04       		.byte	0x4
 2497 0091 04       		.byte	0x4
 2498 0092 D7040000 		.4byte	.LASF12
 2499 0096 02       		.uleb128 0x2
 2500 0097 08       		.byte	0x8
 2501 0098 04       		.byte	0x4
 2502 0099 12020000 		.4byte	.LASF13
 2503 009d 02       		.uleb128 0x2
 2504 009e 01       		.byte	0x1
 2505 009f 08       		.byte	0x8
 2506 00a0 B6050000 		.4byte	.LASF14
 2507 00a4 04       		.uleb128 0x4
 2508 00a5 BD060000 		.4byte	.LASF15
 2509 00a9 02       		.byte	0x2
 2510 00aa 8602     		.2byte	0x286
 2511 00ac 48000000 		.4byte	0x48
 2512 00b0 04       		.uleb128 0x4
 2513 00b1 3E050000 		.4byte	.LASF16
 2514 00b5 02       		.byte	0x2
 2515 00b6 8E02     		.2byte	0x28e
 2516 00b8 BC000000 		.4byte	0xbc
 2517 00bc 05       		.uleb128 0x5
 2518 00bd 6B000000 		.4byte	0x6b
 2519 00c1 04       		.uleb128 0x4
 2520 00c2 EC030000 		.4byte	.LASF17
 2521 00c6 02       		.byte	0x2
 2522 00c7 9002     		.2byte	0x290
 2523 00c9 CD000000 		.4byte	0xcd
 2524 00cd 05       		.uleb128 0x5
 2525 00ce 83000000 		.4byte	0x83
 2526 00d2 04       		.uleb128 0x4
 2527 00d3 BB050000 		.4byte	.LASF18
 2528 00d7 02       		.byte	0x2
 2529 00d8 A002     		.2byte	0x2a0
 2530 00da DE000000 		.4byte	0xde
 2531 00de 06       		.uleb128 0x6
 2532 00df 04       		.byte	0x4
 2533 00e0 E4000000 		.4byte	0xe4
 2534 00e4 07       		.uleb128 0x7
 2535 00e5 02       		.uleb128 0x2
 2536 00e6 08       		.byte	0x8
 2537 00e7 04       		.byte	0x4
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 103


 2538 00e8 29040000 		.4byte	.LASF19
 2539 00ec 02       		.uleb128 0x2
 2540 00ed 04       		.byte	0x4
 2541 00ee 07       		.byte	0x7
 2542 00ef 0E040000 		.4byte	.LASF20
 2543 00f3 08       		.uleb128 0x8
 2544 00f4 02050000 		.4byte	.LASF21
 2545 00f8 03       		.byte	0x3
 2546 00f9 F5       		.byte	0xf5
 2547 00fa DE000000 		.4byte	0xde
 2548 00fe 09       		.uleb128 0x9
 2549 00ff C6060000 		.4byte	.LASF22
 2550 0103 01       		.byte	0x1
 2551 0104 6C       		.byte	0x6c
 2552 0105 00000000 		.4byte	.LFB2
 2553 0109 14000000 		.4byte	.LFE2-.LFB2
 2554 010d 01       		.uleb128 0x1
 2555 010e 9C       		.byte	0x9c
 2556 010f 09       		.uleb128 0x9
 2557 0110 1B030000 		.4byte	.LASF23
 2558 0114 01       		.byte	0x1
 2559 0115 8C       		.byte	0x8c
 2560 0116 00000000 		.4byte	.LFB3
 2561 011a 10000000 		.4byte	.LFE3-.LFB3
 2562 011e 01       		.uleb128 0x1
 2563 011f 9C       		.byte	0x9c
 2564 0120 0A       		.uleb128 0xa
 2565 0121 27000000 		.4byte	.LASF26
 2566 0125 01       		.byte	0x1
 2567 0126 0102     		.2byte	0x201
 2568 0128 00000000 		.4byte	.LFB4
 2569 012c 20000000 		.4byte	.LFE4-.LFB4
 2570 0130 01       		.uleb128 0x1
 2571 0131 9C       		.byte	0x9c
 2572 0132 79010000 		.4byte	0x179
 2573 0136 0B       		.uleb128 0xb
 2574 0137 8A050000 		.4byte	.LASF28
 2575 013b 01       		.byte	0x1
 2576 013c 0102     		.2byte	0x201
 2577 013e 83000000 		.4byte	0x83
 2578 0142 00000000 		.4byte	.LLST0
 2579 0146 0C       		.uleb128 0xc
 2580 0147 A9010000 		.4byte	.LASF24
 2581 014b 01       		.byte	0x1
 2582 014c 0302     		.2byte	0x203
 2583 014e 6B000000 		.4byte	0x6b
 2584 0152 2C000000 		.4byte	.LLST1
 2585 0156 0C       		.uleb128 0xc
 2586 0157 14070000 		.4byte	.LASF25
 2587 015b 01       		.byte	0x1
 2588 015c 0402     		.2byte	0x204
 2589 015e 83000000 		.4byte	0x83
 2590 0162 3F000000 		.4byte	.LLST2
 2591 0166 0D       		.uleb128 0xd
 2592 0167 08000000 		.4byte	.LVL1
 2593 016b 0E0C0000 		.4byte	0xc0e
 2594 016f 0D       		.uleb128 0xd
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 104


 2595 0170 1A000000 		.4byte	.LVL5
 2596 0174 190C0000 		.4byte	0xc19
 2597 0178 00       		.byte	0
 2598 0179 0A       		.uleb128 0xa
 2599 017a D7030000 		.4byte	.LASF27
 2600 017e 01       		.byte	0x1
 2601 017f 4902     		.2byte	0x249
 2602 0181 00000000 		.4byte	.LFB5
 2603 0185 38000000 		.4byte	.LFE5-.LFB5
 2604 0189 01       		.uleb128 0x1
 2605 018a 9C       		.byte	0x9c
 2606 018b 9E010000 		.4byte	0x19e
 2607 018f 0E       		.uleb128 0xe
 2608 0190 0B020000 		.4byte	.LASF29
 2609 0194 01       		.byte	0x1
 2610 0195 4902     		.2byte	0x249
 2611 0197 83000000 		.4byte	0x83
 2612 019b 01       		.uleb128 0x1
 2613 019c 50       		.byte	0x50
 2614 019d 00       		.byte	0
 2615 019e 0F       		.uleb128 0xf
 2616 019f 58020000 		.4byte	.LASF34
 2617 01a3 01       		.byte	0x1
 2618 01a4 6E02     		.2byte	0x26e
 2619 01a6 83000000 		.4byte	0x83
 2620 01aa 00000000 		.4byte	.LFB6
 2621 01ae 1C000000 		.4byte	.LFE6-.LFB6
 2622 01b2 01       		.uleb128 0x1
 2623 01b3 9C       		.byte	0x9c
 2624 01b4 EB010000 		.4byte	0x1eb
 2625 01b8 0C       		.uleb128 0xc
 2626 01b9 A9010000 		.4byte	.LASF24
 2627 01bd 01       		.byte	0x1
 2628 01be 7002     		.2byte	0x270
 2629 01c0 6B000000 		.4byte	0x6b
 2630 01c4 5D000000 		.4byte	.LLST3
 2631 01c8 0C       		.uleb128 0xc
 2632 01c9 45040000 		.4byte	.LASF30
 2633 01cd 01       		.byte	0x1
 2634 01ce 7102     		.2byte	0x271
 2635 01d0 83000000 		.4byte	0x83
 2636 01d4 70000000 		.4byte	.LLST4
 2637 01d8 0D       		.uleb128 0xd
 2638 01d9 06000000 		.4byte	.LVL8
 2639 01dd 0E0C0000 		.4byte	0xc0e
 2640 01e1 0D       		.uleb128 0xd
 2641 01e2 12000000 		.4byte	.LVL10
 2642 01e6 190C0000 		.4byte	0xc19
 2643 01ea 00       		.byte	0
 2644 01eb 0A       		.uleb128 0xa
 2645 01ec D8050000 		.4byte	.LASF31
 2646 01f0 01       		.byte	0x1
 2647 01f1 AB02     		.2byte	0x2ab
 2648 01f3 00000000 		.4byte	.LFB7
 2649 01f7 30000000 		.4byte	.LFE7-.LFB7
 2650 01fb 01       		.uleb128 0x1
 2651 01fc 9C       		.byte	0x9c
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 105


 2652 01fd 34020000 		.4byte	0x234
 2653 0201 0B       		.uleb128 0xb
 2654 0202 A1060000 		.4byte	.LASF32
 2655 0206 01       		.byte	0x1
 2656 0207 AB02     		.2byte	0x2ab
 2657 0209 83000000 		.4byte	0x83
 2658 020d 8E000000 		.4byte	.LLST5
 2659 0211 0C       		.uleb128 0xc
 2660 0212 A9010000 		.4byte	.LASF24
 2661 0216 01       		.byte	0x1
 2662 0217 AD02     		.2byte	0x2ad
 2663 0219 6B000000 		.4byte	0x6b
 2664 021d BA000000 		.4byte	.LLST6
 2665 0221 0D       		.uleb128 0xd
 2666 0222 08000000 		.4byte	.LVL13
 2667 0226 0E0C0000 		.4byte	0xc0e
 2668 022a 0D       		.uleb128 0xd
 2669 022b 24000000 		.4byte	.LVL15
 2670 022f 190C0000 		.4byte	0xc19
 2671 0233 00       		.byte	0
 2672 0234 10       		.uleb128 0x10
 2673 0235 79060000 		.4byte	.LASF33
 2674 0239 01       		.byte	0x1
 2675 023a F304     		.2byte	0x4f3
 2676 023c 00000000 		.4byte	.LFB10
 2677 0240 24000000 		.4byte	.LFE10-.LFB10
 2678 0244 01       		.uleb128 0x1
 2679 0245 9C       		.byte	0x9c
 2680 0246 0F       		.uleb128 0xf
 2681 0247 3D020000 		.4byte	.LASF35
 2682 024b 01       		.byte	0x1
 2683 024c 1505     		.2byte	0x515
 2684 024e 83000000 		.4byte	0x83
 2685 0252 00000000 		.4byte	.LFB11
 2686 0256 10000000 		.4byte	.LFE11-.LFB11
 2687 025a 01       		.uleb128 0x1
 2688 025b 9C       		.byte	0x9c
 2689 025c 6F020000 		.4byte	0x26f
 2690 0260 11       		.uleb128 0x11
 2691 0261 48070000 		.4byte	.LASF36
 2692 0265 01       		.byte	0x1
 2693 0266 1705     		.2byte	0x517
 2694 0268 83000000 		.4byte	0x83
 2695 026c 01       		.uleb128 0x1
 2696 026d 50       		.byte	0x50
 2697 026e 00       		.byte	0
 2698 026f 10       		.uleb128 0x10
 2699 0270 5A060000 		.4byte	.LASF37
 2700 0274 01       		.byte	0x1
 2701 0275 DE08     		.2byte	0x8de
 2702 0277 00000000 		.4byte	.LFB14
 2703 027b 20000000 		.4byte	.LFE14-.LFB14
 2704 027f 01       		.uleb128 0x1
 2705 0280 9C       		.byte	0x9c
 2706 0281 12       		.uleb128 0x12
 2707 0282 00030000 		.4byte	.LASF87
 2708 0286 01       		.byte	0x1
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 106


 2709 0287 F008     		.2byte	0x8f0
 2710 0289 83000000 		.4byte	0x83
 2711 028d 00000000 		.4byte	.LFB15
 2712 0291 10000000 		.4byte	.LFE15-.LFB15
 2713 0295 01       		.uleb128 0x1
 2714 0296 9C       		.byte	0x9c
 2715 0297 10       		.uleb128 0x10
 2716 0298 1F020000 		.4byte	.LASF38
 2717 029c 01       		.byte	0x1
 2718 029d 0009     		.2byte	0x900
 2719 029f 00000000 		.4byte	.LFB16
 2720 02a3 0C000000 		.4byte	.LFE16-.LFB16
 2721 02a7 01       		.uleb128 0x1
 2722 02a8 9C       		.byte	0x9c
 2723 02a9 0F       		.uleb128 0xf
 2724 02aa 52030000 		.4byte	.LASF39
 2725 02ae 01       		.byte	0x1
 2726 02af 1A09     		.2byte	0x91a
 2727 02b1 83000000 		.4byte	0x83
 2728 02b5 00000000 		.4byte	.LFB17
 2729 02b9 14000000 		.4byte	.LFE17-.LFB17
 2730 02bd 01       		.uleb128 0x1
 2731 02be 9C       		.byte	0x9c
 2732 02bf E2020000 		.4byte	0x2e2
 2733 02c3 0B       		.uleb128 0xb
 2734 02c4 AF050000 		.4byte	.LASF40
 2735 02c8 01       		.byte	0x1
 2736 02c9 1A09     		.2byte	0x91a
 2737 02cb 83000000 		.4byte	0x83
 2738 02cf CD000000 		.4byte	.LLST7
 2739 02d3 11       		.uleb128 0x11
 2740 02d4 01040000 		.4byte	.LASF41
 2741 02d8 01       		.byte	0x1
 2742 02d9 1C09     		.2byte	0x91c
 2743 02db 83000000 		.4byte	0x83
 2744 02df 01       		.uleb128 0x1
 2745 02e0 50       		.byte	0x50
 2746 02e1 00       		.byte	0
 2747 02e2 0F       		.uleb128 0xf
 2748 02e3 61000000 		.4byte	.LASF42
 2749 02e7 01       		.byte	0x1
 2750 02e8 3109     		.2byte	0x931
 2751 02ea 83000000 		.4byte	0x83
 2752 02ee 00000000 		.4byte	.LFB18
 2753 02f2 10000000 		.4byte	.LFE18-.LFB18
 2754 02f6 01       		.uleb128 0x1
 2755 02f7 9C       		.byte	0x9c
 2756 02f8 0B030000 		.4byte	0x30b
 2757 02fc 11       		.uleb128 0x11
 2758 02fd 1E000000 		.4byte	.LASF43
 2759 0301 01       		.byte	0x1
 2760 0302 3309     		.2byte	0x933
 2761 0304 83000000 		.4byte	0x83
 2762 0308 01       		.uleb128 0x1
 2763 0309 50       		.byte	0x50
 2764 030a 00       		.byte	0
 2765 030b 0A       		.uleb128 0xa
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 107


 2766 030c 3A010000 		.4byte	.LASF44
 2767 0310 01       		.byte	0x1
 2768 0311 4809     		.2byte	0x948
 2769 0313 00000000 		.4byte	.LFB19
 2770 0317 0C000000 		.4byte	.LFE19-.LFB19
 2771 031b 01       		.uleb128 0x1
 2772 031c 9C       		.byte	0x9c
 2773 031d 30030000 		.4byte	0x330
 2774 0321 0E       		.uleb128 0xe
 2775 0322 53020000 		.4byte	.LASF45
 2776 0326 01       		.byte	0x1
 2777 0327 4809     		.2byte	0x948
 2778 0329 83000000 		.4byte	0x83
 2779 032d 01       		.uleb128 0x1
 2780 032e 50       		.byte	0x50
 2781 032f 00       		.byte	0
 2782 0330 0A       		.uleb128 0xa
 2783 0331 6C050000 		.4byte	.LASF46
 2784 0335 01       		.byte	0x1
 2785 0336 FF09     		.2byte	0x9ff
 2786 0338 00000000 		.4byte	.LFB26
 2787 033c 14000000 		.4byte	.LFE26-.LFB26
 2788 0340 01       		.uleb128 0x1
 2789 0341 9C       		.byte	0x9c
 2790 0342 57030000 		.4byte	0x357
 2791 0346 0B       		.uleb128 0xb
 2792 0347 A0030000 		.4byte	.LASF47
 2793 034b 01       		.byte	0x1
 2794 034c FF09     		.2byte	0x9ff
 2795 034e 6B000000 		.4byte	0x6b
 2796 0352 EB000000 		.4byte	.LLST8
 2797 0356 00       		.byte	0
 2798 0357 0F       		.uleb128 0xf
 2799 0358 70010000 		.4byte	.LASF48
 2800 035c 01       		.byte	0x1
 2801 035d 110A     		.2byte	0xa11
 2802 035f 6B000000 		.4byte	0x6b
 2803 0363 00000000 		.4byte	.LFB27
 2804 0367 18000000 		.4byte	.LFE27-.LFB27
 2805 036b 01       		.uleb128 0x1
 2806 036c 9C       		.byte	0x9c
 2807 036d 82030000 		.4byte	0x382
 2808 0371 0B       		.uleb128 0xb
 2809 0372 A0030000 		.4byte	.LASF47
 2810 0376 01       		.byte	0x1
 2811 0377 110A     		.2byte	0xa11
 2812 0379 6B000000 		.4byte	0x6b
 2813 037d 0C010000 		.4byte	.LLST9
 2814 0381 00       		.byte	0
 2815 0382 0A       		.uleb128 0xa
 2816 0383 D4010000 		.4byte	.LASF49
 2817 0387 01       		.byte	0x1
 2818 0388 210A     		.2byte	0xa21
 2819 038a 00000000 		.4byte	.LFB28
 2820 038e 14000000 		.4byte	.LFE28-.LFB28
 2821 0392 01       		.uleb128 0x1
 2822 0393 9C       		.byte	0x9c
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 108


 2823 0394 A9030000 		.4byte	0x3a9
 2824 0398 0B       		.uleb128 0xb
 2825 0399 A0030000 		.4byte	.LASF47
 2826 039d 01       		.byte	0x1
 2827 039e 210A     		.2byte	0xa21
 2828 03a0 6B000000 		.4byte	0x6b
 2829 03a4 2D010000 		.4byte	.LLST10
 2830 03a8 00       		.byte	0
 2831 03a9 0A       		.uleb128 0xa
 2832 03aa 42030000 		.4byte	.LASF50
 2833 03ae 01       		.byte	0x1
 2834 03af 2F0A     		.2byte	0xa2f
 2835 03b1 00000000 		.4byte	.LFB29
 2836 03b5 14000000 		.4byte	.LFE29-.LFB29
 2837 03b9 01       		.uleb128 0x1
 2838 03ba 9C       		.byte	0x9c
 2839 03bb D0030000 		.4byte	0x3d0
 2840 03bf 0B       		.uleb128 0xb
 2841 03c0 A0030000 		.4byte	.LASF47
 2842 03c4 01       		.byte	0x1
 2843 03c5 2F0A     		.2byte	0xa2f
 2844 03c7 6B000000 		.4byte	0x6b
 2845 03cb 4E010000 		.4byte	.LLST11
 2846 03cf 00       		.byte	0
 2847 03d0 0A       		.uleb128 0xa
 2848 03d1 17040000 		.4byte	.LASF51
 2849 03d5 01       		.byte	0x1
 2850 03d6 3E0A     		.2byte	0xa3e
 2851 03d8 00000000 		.4byte	.LFB30
 2852 03dc 14000000 		.4byte	.LFE30-.LFB30
 2853 03e0 01       		.uleb128 0x1
 2854 03e1 9C       		.byte	0x9c
 2855 03e2 F7030000 		.4byte	0x3f7
 2856 03e6 0B       		.uleb128 0xb
 2857 03e7 A0030000 		.4byte	.LASF47
 2858 03eb 01       		.byte	0x1
 2859 03ec 3E0A     		.2byte	0xa3e
 2860 03ee 6B000000 		.4byte	0x6b
 2861 03f2 6F010000 		.4byte	.LLST12
 2862 03f6 00       		.byte	0
 2863 03f7 0A       		.uleb128 0xa
 2864 03f8 4D050000 		.4byte	.LASF52
 2865 03fc 01       		.byte	0x1
 2866 03fd 4D0A     		.2byte	0xa4d
 2867 03ff 00000000 		.4byte	.LFB31
 2868 0403 04000000 		.4byte	.LFE31-.LFB31
 2869 0407 01       		.uleb128 0x1
 2870 0408 9C       		.byte	0x9c
 2871 0409 1C040000 		.4byte	0x41c
 2872 040d 0E       		.uleb128 0xe
 2873 040e AF050000 		.4byte	.LASF40
 2874 0412 01       		.byte	0x1
 2875 0413 4D0A     		.2byte	0xa4d
 2876 0415 6B000000 		.4byte	0x6b
 2877 0419 01       		.uleb128 0x1
 2878 041a 50       		.byte	0x50
 2879 041b 00       		.byte	0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 109


 2880 041c 0A       		.uleb128 0xa
 2881 041d A9060000 		.4byte	.LASF53
 2882 0421 01       		.byte	0x1
 2883 0422 4405     		.2byte	0x544
 2884 0424 00000000 		.4byte	.LFB12
 2885 0428 38000000 		.4byte	.LFE12-.LFB12
 2886 042c 01       		.uleb128 0x1
 2887 042d 9C       		.byte	0x9c
 2888 042e 74040000 		.4byte	0x474
 2889 0432 0B       		.uleb128 0xb
 2890 0433 A1060000 		.4byte	.LASF32
 2891 0437 01       		.byte	0x1
 2892 0438 4405     		.2byte	0x544
 2893 043a 83000000 		.4byte	0x83
 2894 043e 90010000 		.4byte	.LLST13
 2895 0442 0C       		.uleb128 0xc
 2896 0443 A9010000 		.4byte	.LASF24
 2897 0447 01       		.byte	0x1
 2898 0448 4605     		.2byte	0x546
 2899 044a 6B000000 		.4byte	0x6b
 2900 044e E0010000 		.4byte	.LLST14
 2901 0452 0D       		.uleb128 0xd
 2902 0453 14000000 		.4byte	.LVL35
 2903 0457 0E0C0000 		.4byte	0xc0e
 2904 045b 0D       		.uleb128 0xd
 2905 045c 26000000 		.4byte	.LVL37
 2906 0460 190C0000 		.4byte	0xc19
 2907 0464 13       		.uleb128 0x13
 2908 0465 2E000000 		.4byte	.LVL40
 2909 0469 F7030000 		.4byte	0x3f7
 2910 046d 14       		.uleb128 0x14
 2911 046e 01       		.uleb128 0x1
 2912 046f 50       		.byte	0x50
 2913 0470 01       		.uleb128 0x1
 2914 0471 30       		.byte	0x30
 2915 0472 00       		.byte	0
 2916 0473 00       		.byte	0
 2917 0474 0F       		.uleb128 0xf
 2918 0475 C5030000 		.4byte	.LASF54
 2919 0479 01       		.byte	0x1
 2920 047a 6109     		.2byte	0x961
 2921 047c D2000000 		.4byte	0xd2
 2922 0480 00000000 		.4byte	.LFB20
 2923 0484 20000000 		.4byte	.LFE20-.LFB20
 2924 0488 01       		.uleb128 0x1
 2925 0489 9C       		.byte	0x9c
 2926 048a DC040000 		.4byte	0x4dc
 2927 048e 0B       		.uleb128 0xb
 2928 048f A0030000 		.4byte	.LASF47
 2929 0493 01       		.byte	0x1
 2930 0494 6109     		.2byte	0x961
 2931 0496 6B000000 		.4byte	0x6b
 2932 049a F3010000 		.4byte	.LLST15
 2933 049e 0B       		.uleb128 0xb
 2934 049f 35040000 		.4byte	.LASF55
 2935 04a3 01       		.byte	0x1
 2936 04a4 6109     		.2byte	0x961
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 110


 2937 04a6 D2000000 		.4byte	0xd2
 2938 04aa 14020000 		.4byte	.LLST16
 2939 04ae 11       		.uleb128 0x11
 2940 04af 53000000 		.4byte	.LASF56
 2941 04b3 01       		.byte	0x1
 2942 04b4 6309     		.2byte	0x963
 2943 04b6 D2000000 		.4byte	0xd2
 2944 04ba 01       		.uleb128 0x1
 2945 04bb 50       		.byte	0x50
 2946 04bc 15       		.uleb128 0x15
 2947 04bd 00000000 		.4byte	.LASF57
 2948 04c1 01       		.byte	0x1
 2949 04c2 6409     		.2byte	0x964
 2950 04c4 DC040000 		.4byte	0x4dc
 2951 04c8 00000020 		.4byte	0x20000000
 2952 04cc 13       		.uleb128 0x13
 2953 04cd 10000000 		.4byte	.LVL44
 2954 04d1 F7030000 		.4byte	0x3f7
 2955 04d5 14       		.uleb128 0x14
 2956 04d6 01       		.uleb128 0x1
 2957 04d7 50       		.byte	0x50
 2958 04d8 01       		.uleb128 0x1
 2959 04d9 30       		.byte	0x30
 2960 04da 00       		.byte	0
 2961 04db 00       		.byte	0
 2962 04dc 06       		.uleb128 0x6
 2963 04dd 04       		.byte	0x4
 2964 04de D2000000 		.4byte	0xd2
 2965 04e2 0F       		.uleb128 0xf
 2966 04e3 78050000 		.4byte	.LASF58
 2967 04e7 01       		.byte	0x1
 2968 04e8 8309     		.2byte	0x983
 2969 04ea D2000000 		.4byte	0xd2
 2970 04ee 00000000 		.4byte	.LFB21
 2971 04f2 1C000000 		.4byte	.LFE21-.LFB21
 2972 04f6 01       		.uleb128 0x1
 2973 04f7 9C       		.byte	0x9c
 2974 04f8 2C050000 		.4byte	0x52c
 2975 04fc 0B       		.uleb128 0xb
 2976 04fd A0030000 		.4byte	.LASF47
 2977 0501 01       		.byte	0x1
 2978 0502 8309     		.2byte	0x983
 2979 0504 6B000000 		.4byte	0x6b
 2980 0508 40020000 		.4byte	.LLST17
 2981 050c 15       		.uleb128 0x15
 2982 050d 00000000 		.4byte	.LASF57
 2983 0511 01       		.byte	0x1
 2984 0512 8509     		.2byte	0x985
 2985 0514 DC040000 		.4byte	0x4dc
 2986 0518 00000020 		.4byte	0x20000000
 2987 051c 13       		.uleb128 0x13
 2988 051d 0E000000 		.4byte	.LVL50
 2989 0521 F7030000 		.4byte	0x3f7
 2990 0525 14       		.uleb128 0x14
 2991 0526 01       		.uleb128 0x1
 2992 0527 50       		.byte	0x50
 2993 0528 01       		.uleb128 0x1
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 111


 2994 0529 30       		.byte	0x30
 2995 052a 00       		.byte	0
 2996 052b 00       		.byte	0
 2997 052c 0F       		.uleb128 0xf
 2998 052d 91030000 		.4byte	.LASF59
 2999 0531 01       		.byte	0x1
 3000 0532 9909     		.2byte	0x999
 3001 0534 D2000000 		.4byte	0xd2
 3002 0538 00000000 		.4byte	.LFB22
 3003 053c 22000000 		.4byte	.LFE22-.LFB22
 3004 0540 01       		.uleb128 0x1
 3005 0541 9C       		.byte	0x9c
 3006 0542 94050000 		.4byte	0x594
 3007 0546 0B       		.uleb128 0xb
 3008 0547 A0030000 		.4byte	.LASF47
 3009 054b 01       		.byte	0x1
 3010 054c 9909     		.2byte	0x999
 3011 054e 6B000000 		.4byte	0x6b
 3012 0552 61020000 		.4byte	.LLST18
 3013 0556 0B       		.uleb128 0xb
 3014 0557 35040000 		.4byte	.LASF55
 3015 055b 01       		.byte	0x1
 3016 055c 9909     		.2byte	0x999
 3017 055e D2000000 		.4byte	0xd2
 3018 0562 82020000 		.4byte	.LLST19
 3019 0566 11       		.uleb128 0x11
 3020 0567 53000000 		.4byte	.LASF56
 3021 056b 01       		.byte	0x1
 3022 056c 9B09     		.2byte	0x99b
 3023 056e D2000000 		.4byte	0xd2
 3024 0572 01       		.uleb128 0x1
 3025 0573 50       		.byte	0x50
 3026 0574 15       		.uleb128 0x15
 3027 0575 00000000 		.4byte	.LASF57
 3028 0579 01       		.byte	0x1
 3029 057a 9C09     		.2byte	0x99c
 3030 057c DC040000 		.4byte	0x4dc
 3031 0580 00000020 		.4byte	0x20000000
 3032 0584 13       		.uleb128 0x13
 3033 0585 10000000 		.4byte	.LVL54
 3034 0589 F7030000 		.4byte	0x3f7
 3035 058d 14       		.uleb128 0x14
 3036 058e 01       		.uleb128 0x1
 3037 058f 50       		.byte	0x50
 3038 0590 01       		.uleb128 0x1
 3039 0591 30       		.byte	0x30
 3040 0592 00       		.byte	0
 3041 0593 00       		.byte	0
 3042 0594 0F       		.uleb128 0xf
 3043 0595 14050000 		.4byte	.LASF60
 3044 0599 01       		.byte	0x1
 3045 059a B509     		.2byte	0x9b5
 3046 059c D2000000 		.4byte	0xd2
 3047 05a0 00000000 		.4byte	.LFB23
 3048 05a4 1E000000 		.4byte	.LFE23-.LFB23
 3049 05a8 01       		.uleb128 0x1
 3050 05a9 9C       		.byte	0x9c
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 112


 3051 05aa DE050000 		.4byte	0x5de
 3052 05ae 0B       		.uleb128 0xb
 3053 05af A0030000 		.4byte	.LASF47
 3054 05b3 01       		.byte	0x1
 3055 05b4 B509     		.2byte	0x9b5
 3056 05b6 6B000000 		.4byte	0x6b
 3057 05ba AE020000 		.4byte	.LLST20
 3058 05be 15       		.uleb128 0x15
 3059 05bf 00000000 		.4byte	.LASF57
 3060 05c3 01       		.byte	0x1
 3061 05c4 B709     		.2byte	0x9b7
 3062 05c6 DC040000 		.4byte	0x4dc
 3063 05ca 00000020 		.4byte	0x20000000
 3064 05ce 13       		.uleb128 0x13
 3065 05cf 0E000000 		.4byte	.LVL60
 3066 05d3 F7030000 		.4byte	0x3f7
 3067 05d7 14       		.uleb128 0x14
 3068 05d8 01       		.uleb128 0x1
 3069 05d9 50       		.byte	0x50
 3070 05da 01       		.uleb128 0x1
 3071 05db 30       		.byte	0x30
 3072 05dc 00       		.byte	0
 3073 05dd 00       		.byte	0
 3074 05de 0A       		.uleb128 0xa
 3075 05df 8C040000 		.4byte	.LASF61
 3076 05e3 01       		.byte	0x1
 3077 05e4 C809     		.2byte	0x9c8
 3078 05e6 00000000 		.4byte	.LFB24
 3079 05ea 4C000000 		.4byte	.LFE24-.LFB24
 3080 05ee 01       		.uleb128 0x1
 3081 05ef 9C       		.byte	0x9c
 3082 05f0 7D060000 		.4byte	0x67d
 3083 05f4 0B       		.uleb128 0xb
 3084 05f5 A0030000 		.4byte	.LASF47
 3085 05f9 01       		.byte	0x1
 3086 05fa C809     		.2byte	0x9c8
 3087 05fc 6B000000 		.4byte	0x6b
 3088 0600 CF020000 		.4byte	.LLST21
 3089 0604 0B       		.uleb128 0xb
 3090 0605 A7030000 		.4byte	.LASF62
 3091 0609 01       		.byte	0x1
 3092 060a C809     		.2byte	0x9c8
 3093 060c 6B000000 		.4byte	0x6b
 3094 0610 F0020000 		.4byte	.LLST22
 3095 0614 0C       		.uleb128 0xc
 3096 0615 A9010000 		.4byte	.LASF24
 3097 0619 01       		.byte	0x1
 3098 061a CA09     		.2byte	0x9ca
 3099 061c 6B000000 		.4byte	0x6b
 3100 0620 11030000 		.4byte	.LLST23
 3101 0624 0C       		.uleb128 0xc
 3102 0625 19020000 		.4byte	.LASF63
 3103 0629 01       		.byte	0x1
 3104 062a CB09     		.2byte	0x9cb
 3105 062c 83000000 		.4byte	0x83
 3106 0630 24030000 		.4byte	.LLST24
 3107 0634 0C       		.uleb128 0xc
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 113


 3108 0635 9C020000 		.4byte	.LASF64
 3109 0639 01       		.byte	0x1
 3110 063a CC09     		.2byte	0x9cc
 3111 063c 83000000 		.4byte	0x83
 3112 0640 37030000 		.4byte	.LLST25
 3113 0644 16       		.uleb128 0x16
 3114 0645 10000000 		.4byte	.LVL63
 3115 0649 F7030000 		.4byte	0x3f7
 3116 064d 57060000 		.4byte	0x657
 3117 0651 14       		.uleb128 0x14
 3118 0652 01       		.uleb128 0x1
 3119 0653 50       		.byte	0x50
 3120 0654 01       		.uleb128 0x1
 3121 0655 30       		.byte	0x30
 3122 0656 00       		.byte	0
 3123 0657 16       		.uleb128 0x16
 3124 0658 1A000000 		.4byte	.LVL64
 3125 065c F7030000 		.4byte	0x3f7
 3126 0660 6A060000 		.4byte	0x66a
 3127 0664 14       		.uleb128 0x14
 3128 0665 01       		.uleb128 0x1
 3129 0666 50       		.byte	0x50
 3130 0667 01       		.uleb128 0x1
 3131 0668 30       		.byte	0x30
 3132 0669 00       		.byte	0
 3133 066a 0D       		.uleb128 0xd
 3134 066b 26000000 		.4byte	.LVL66
 3135 066f 0E0C0000 		.4byte	0xc0e
 3136 0673 0D       		.uleb128 0xd
 3137 0674 46000000 		.4byte	.LVL72
 3138 0678 190C0000 		.4byte	0xc19
 3139 067c 00       		.byte	0
 3140 067d 0F       		.uleb128 0xf
 3141 067e 70020000 		.4byte	.LASF65
 3142 0682 01       		.byte	0x1
 3143 0683 EA09     		.2byte	0x9ea
 3144 0685 6B000000 		.4byte	0x6b
 3145 0689 00000000 		.4byte	.LFB25
 3146 068d 2C000000 		.4byte	.LFE25-.LFB25
 3147 0691 01       		.uleb128 0x1
 3148 0692 9C       		.byte	0x9c
 3149 0693 C7060000 		.4byte	0x6c7
 3150 0697 0B       		.uleb128 0xb
 3151 0698 A0030000 		.4byte	.LASF47
 3152 069c 01       		.byte	0x1
 3153 069d EA09     		.2byte	0x9ea
 3154 069f 6B000000 		.4byte	0x6b
 3155 06a3 6B030000 		.4byte	.LLST26
 3156 06a7 0C       		.uleb128 0xc
 3157 06a8 A7030000 		.4byte	.LASF62
 3158 06ac 01       		.byte	0x1
 3159 06ad EC09     		.2byte	0x9ec
 3160 06af 6B000000 		.4byte	0x6b
 3161 06b3 8C030000 		.4byte	.LLST27
 3162 06b7 13       		.uleb128 0x13
 3163 06b8 0E000000 		.4byte	.LVL76
 3164 06bc F7030000 		.4byte	0x3f7
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 114


 3165 06c0 14       		.uleb128 0x14
 3166 06c1 01       		.uleb128 0x1
 3167 06c2 50       		.byte	0x50
 3168 06c3 01       		.uleb128 0x1
 3169 06c4 30       		.byte	0x30
 3170 06c5 00       		.byte	0
 3171 06c6 00       		.byte	0
 3172 06c7 10       		.uleb128 0x10
 3173 06c8 47010000 		.4byte	.LASF66
 3174 06cc 01       		.byte	0x1
 3175 06cd 650A     		.2byte	0xa65
 3176 06cf 00000000 		.4byte	.LFB32
 3177 06d3 18000000 		.4byte	.LFE32-.LFB32
 3178 06d7 01       		.uleb128 0x1
 3179 06d8 9C       		.byte	0x9c
 3180 06d9 0A       		.uleb128 0xa
 3181 06da 20060000 		.4byte	.LASF67
 3182 06de 01       		.byte	0x1
 3183 06df 790A     		.2byte	0xa79
 3184 06e1 00000000 		.4byte	.LFB33
 3185 06e5 30000000 		.4byte	.LFE33-.LFB33
 3186 06e9 01       		.uleb128 0x1
 3187 06ea 9C       		.byte	0x9c
 3188 06eb 12070000 		.4byte	0x712
 3189 06ef 0B       		.uleb128 0xb
 3190 06f0 23050000 		.4byte	.LASF68
 3191 06f4 01       		.byte	0x1
 3192 06f5 790A     		.2byte	0xa79
 3193 06f7 83000000 		.4byte	0x83
 3194 06fb 9F030000 		.4byte	.LLST28
 3195 06ff 0D       		.uleb128 0xd
 3196 0700 0E000000 		.4byte	.LVL81
 3197 0704 240C0000 		.4byte	0xc24
 3198 0708 0D       		.uleb128 0xd
 3199 0709 26000000 		.4byte	.LVL83
 3200 070d 240C0000 		.4byte	0xc24
 3201 0711 00       		.byte	0
 3202 0712 0A       		.uleb128 0xa
 3203 0713 A5050000 		.4byte	.LASF69
 3204 0717 01       		.byte	0x1
 3205 0718 900A     		.2byte	0xa90
 3206 071a 00000000 		.4byte	.LFB34
 3207 071e 14000000 		.4byte	.LFE34-.LFB34
 3208 0722 01       		.uleb128 0x1
 3209 0723 9C       		.byte	0x9c
 3210 0724 42070000 		.4byte	0x742
 3211 0728 0B       		.uleb128 0xb
 3212 0729 07070000 		.4byte	.LASF70
 3213 072d 01       		.byte	0x1
 3214 072e 900A     		.2byte	0xa90
 3215 0730 77000000 		.4byte	0x77
 3216 0734 BD030000 		.4byte	.LLST29
 3217 0738 0D       		.uleb128 0xd
 3218 0739 0C000000 		.4byte	.LVL87
 3219 073d 240C0000 		.4byte	0xc24
 3220 0741 00       		.byte	0
 3221 0742 0A       		.uleb128 0xa
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 115


 3222 0743 B0030000 		.4byte	.LASF71
 3223 0747 01       		.byte	0x1
 3224 0748 E502     		.2byte	0x2e5
 3225 074a 00000000 		.4byte	.LFB8
 3226 074e 64010000 		.4byte	.LFE8-.LFB8
 3227 0752 01       		.uleb128 0x1
 3228 0753 9C       		.byte	0x9c
 3229 0754 33080000 		.4byte	0x833
 3230 0758 0B       		.uleb128 0xb
 3231 0759 98010000 		.4byte	.LASF72
 3232 075d 01       		.byte	0x1
 3233 075e E502     		.2byte	0x2e5
 3234 0760 83000000 		.4byte	0x83
 3235 0764 DE030000 		.4byte	.LLST30
 3236 0768 0C       		.uleb128 0xc
 3237 0769 0F000000 		.4byte	.LASF73
 3238 076d 01       		.byte	0x1
 3239 076e EB02     		.2byte	0x2eb
 3240 0770 6B000000 		.4byte	0x6b
 3241 0774 33040000 		.4byte	.LLST31
 3242 0778 0C       		.uleb128 0xc
 3243 0779 3D040000 		.4byte	.LASF74
 3244 077d 01       		.byte	0x1
 3245 077e EC02     		.2byte	0x2ec
 3246 0780 6B000000 		.4byte	0x6b
 3247 0784 72040000 		.4byte	.LLST32
 3248 0788 0C       		.uleb128 0xc
 3249 0789 D7060000 		.4byte	.LASF75
 3250 078d 01       		.byte	0x1
 3251 078e ED02     		.2byte	0x2ed
 3252 0790 6B000000 		.4byte	0x6b
 3253 0794 B1040000 		.4byte	.LLST33
 3254 0798 0C       		.uleb128 0xc
 3255 0799 6F000000 		.4byte	.LASF76
 3256 079d 01       		.byte	0x1
 3257 079e EE02     		.2byte	0x2ee
 3258 07a0 6B000000 		.4byte	0x6b
 3259 07a4 C4040000 		.4byte	.LLST34
 3260 07a8 0C       		.uleb128 0xc
 3261 07a9 A9010000 		.4byte	.LASF24
 3262 07ad 01       		.byte	0x1
 3263 07ae F902     		.2byte	0x2f9
 3264 07b0 6B000000 		.4byte	0x6b
 3265 07b4 E3040000 		.4byte	.LLST35
 3266 07b8 0D       		.uleb128 0xd
 3267 07b9 10000000 		.4byte	.LVL89
 3268 07bd 0E0C0000 		.4byte	0xc0e
 3269 07c1 16       		.uleb128 0x16
 3270 07c2 B0000000 		.4byte	.LVL107
 3271 07c6 240C0000 		.4byte	0xc24
 3272 07ca D4070000 		.4byte	0x7d4
 3273 07ce 14       		.uleb128 0x14
 3274 07cf 01       		.uleb128 0x1
 3275 07d0 50       		.byte	0x50
 3276 07d1 01       		.uleb128 0x1
 3277 07d2 35       		.byte	0x35
 3278 07d3 00       		.byte	0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 116


 3279 07d4 16       		.uleb128 0x16
 3280 07d5 CE000000 		.4byte	.LVL110
 3281 07d9 240C0000 		.4byte	0xc24
 3282 07dd E7070000 		.4byte	0x7e7
 3283 07e1 14       		.uleb128 0x14
 3284 07e2 01       		.uleb128 0x1
 3285 07e3 50       		.byte	0x50
 3286 07e4 01       		.uleb128 0x1
 3287 07e5 35       		.byte	0x35
 3288 07e6 00       		.byte	0
 3289 07e7 16       		.uleb128 0x16
 3290 07e8 EE000000 		.4byte	.LVL112
 3291 07ec 12070000 		.4byte	0x712
 3292 07f0 FA070000 		.4byte	0x7fa
 3293 07f4 14       		.uleb128 0x14
 3294 07f5 01       		.uleb128 0x1
 3295 07f6 50       		.byte	0x50
 3296 07f7 01       		.uleb128 0x1
 3297 07f8 35       		.byte	0x35
 3298 07f9 00       		.byte	0
 3299 07fa 16       		.uleb128 0x16
 3300 07fb 00010000 		.4byte	.LVL113
 3301 07ff 240C0000 		.4byte	0xc24
 3302 0803 0D080000 		.4byte	0x80d
 3303 0807 14       		.uleb128 0x14
 3304 0808 01       		.uleb128 0x1
 3305 0809 50       		.byte	0x50
 3306 080a 01       		.uleb128 0x1
 3307 080b 35       		.byte	0x35
 3308 080c 00       		.byte	0
 3309 080d 16       		.uleb128 0x16
 3310 080e 08010000 		.4byte	.LVL115
 3311 0812 F7030000 		.4byte	0x3f7
 3312 0816 20080000 		.4byte	0x820
 3313 081a 14       		.uleb128 0x14
 3314 081b 01       		.uleb128 0x1
 3315 081c 50       		.byte	0x50
 3316 081d 01       		.uleb128 0x1
 3317 081e 30       		.byte	0x30
 3318 081f 00       		.byte	0
 3319 0820 13       		.uleb128 0x13
 3320 0821 0E010000 		.4byte	.LVL116
 3321 0825 190C0000 		.4byte	0xc19
 3322 0829 14       		.uleb128 0x14
 3323 082a 01       		.uleb128 0x1
 3324 082b 50       		.byte	0x50
 3325 082c 04       		.uleb128 0x4
 3326 082d 91       		.byte	0x91
 3327 082e 5C       		.sleb128 -36
 3328 082f 94       		.byte	0x94
 3329 0830 01       		.byte	0x1
 3330 0831 00       		.byte	0
 3331 0832 00       		.byte	0
 3332 0833 0F       		.uleb128 0xf
 3333 0834 94050000 		.4byte	.LASF77
 3334 0838 01       		.byte	0x1
 3335 0839 6504     		.2byte	0x465
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 117


 3336 083b A4000000 		.4byte	0xa4
 3337 083f 00000000 		.4byte	.LFB9
 3338 0843 54000000 		.4byte	.LFE9-.LFB9
 3339 0847 01       		.uleb128 0x1
 3340 0848 9C       		.byte	0x9c
 3341 0849 8A080000 		.4byte	0x88a
 3342 084d 0B       		.uleb128 0xb
 3343 084e 97060000 		.4byte	.LASF78
 3344 0852 01       		.byte	0x1
 3345 0853 6504     		.2byte	0x465
 3346 0855 83000000 		.4byte	0x83
 3347 0859 0F050000 		.4byte	.LLST36
 3348 085d 0C       		.uleb128 0xc
 3349 085e 01040000 		.4byte	.LASF41
 3350 0862 01       		.byte	0x1
 3351 0863 6704     		.2byte	0x467
 3352 0865 A4000000 		.4byte	0xa4
 3353 0869 2D050000 		.4byte	.LLST37
 3354 086d 16       		.uleb128 0x16
 3355 086e 2E000000 		.4byte	.LVL121
 3356 0872 12070000 		.4byte	0x712
 3357 0876 80080000 		.4byte	0x880
 3358 087a 14       		.uleb128 0x14
 3359 087b 01       		.uleb128 0x1
 3360 087c 50       		.byte	0x50
 3361 087d 01       		.uleb128 0x1
 3362 087e 31       		.byte	0x31
 3363 087f 00       		.byte	0
 3364 0880 0D       		.uleb128 0xd
 3365 0881 32000000 		.4byte	.LVL122
 3366 0885 46020000 		.4byte	0x246
 3367 0889 00       		.byte	0
 3368 088a 0A       		.uleb128 0xa
 3369 088b F3040000 		.4byte	.LASF79
 3370 088f 01       		.byte	0x1
 3371 0890 C008     		.2byte	0x8c0
 3372 0892 00000000 		.4byte	.LFB13
 3373 0896 44000000 		.4byte	.LFE13-.LFB13
 3374 089a 01       		.uleb128 0x1
 3375 089b 9C       		.byte	0x9c
 3376 089c CF080000 		.4byte	0x8cf
 3377 08a0 0B       		.uleb128 0xb
 3378 08a1 43050000 		.4byte	.LASF80
 3379 08a5 01       		.byte	0x1
 3380 08a6 C008     		.2byte	0x8c0
 3381 08a8 83000000 		.4byte	0x83
 3382 08ac 4C050000 		.4byte	.LLST38
 3383 08b0 16       		.uleb128 0x16
 3384 08b1 2E000000 		.4byte	.LVL129
 3385 08b5 12070000 		.4byte	0x712
 3386 08b9 C5080000 		.4byte	0x8c5
 3387 08bd 14       		.uleb128 0x14
 3388 08be 01       		.uleb128 0x1
 3389 08bf 50       		.byte	0x50
 3390 08c0 03       		.uleb128 0x3
 3391 08c1 0A       		.byte	0xa
 3392 08c2 E803     		.2byte	0x3e8
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 118


 3393 08c4 00       		.byte	0
 3394 08c5 0D       		.uleb128 0xd
 3395 08c6 32000000 		.4byte	.LVL130
 3396 08ca 97020000 		.4byte	0x297
 3397 08ce 00       		.byte	0
 3398 08cf 17       		.uleb128 0x17
 3399 08d0 9D010000 		.4byte	.LASF81
 3400 08d4 01       		.byte	0x1
 3401 08d5 9E0A     		.2byte	0xa9e
 3402 08d7 00000000 		.4byte	.LFB35
 3403 08db 4C000000 		.4byte	.LFE35-.LFB35
 3404 08df 01       		.uleb128 0x1
 3405 08e0 9C       		.byte	0x9c
 3406 08e1 F6080000 		.4byte	0x8f6
 3407 08e5 0B       		.uleb128 0xb
 3408 08e6 98010000 		.4byte	.LASF72
 3409 08ea 01       		.byte	0x1
 3410 08eb 9E0A     		.2byte	0xa9e
 3411 08ed 83000000 		.4byte	0x83
 3412 08f1 78050000 		.4byte	.LLST39
 3413 08f5 00       		.byte	0
 3414 08f6 10       		.uleb128 0x10
 3415 08f7 89060000 		.4byte	.LASF82
 3416 08fb 01       		.byte	0x1
 3417 08fc 0A0B     		.2byte	0xb0a
 3418 08fe 00000000 		.4byte	.LFB39
 3419 0902 10000000 		.4byte	.LFE39-.LFB39
 3420 0906 01       		.uleb128 0x1
 3421 0907 9C       		.byte	0x9c
 3422 0908 10       		.uleb128 0x10
 3423 0909 57010000 		.4byte	.LASF83
 3424 090d 01       		.byte	0x1
 3425 090e 1A0B     		.2byte	0xb1a
 3426 0910 00000000 		.4byte	.LFB40
 3427 0914 10000000 		.4byte	.LFE40-.LFB40
 3428 0918 01       		.uleb128 0x1
 3429 0919 9C       		.byte	0x9c
 3430 091a 0A       		.uleb128 0xa
 3431 091b C8050000 		.4byte	.LASF84
 3432 091f 01       		.byte	0x1
 3433 0920 F90A     		.2byte	0xaf9
 3434 0922 00000000 		.4byte	.LFB38
 3435 0926 18000000 		.4byte	.LFE38-.LFB38
 3436 092a 01       		.uleb128 0x1
 3437 092b 9C       		.byte	0x9c
 3438 092c 3A090000 		.4byte	0x93a
 3439 0930 0D       		.uleb128 0xd
 3440 0931 06000000 		.4byte	.LVL135
 3441 0935 08090000 		.4byte	0x908
 3442 0939 00       		.byte	0
 3443 093a 10       		.uleb128 0x10
 3444 093b 40060000 		.4byte	.LASF85
 3445 093f 01       		.byte	0x1
 3446 0940 2A0B     		.2byte	0xb2a
 3447 0942 00000000 		.4byte	.LFB41
 3448 0946 10000000 		.4byte	.LFE41-.LFB41
 3449 094a 01       		.uleb128 0x1
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 119


 3450 094b 9C       		.byte	0x9c
 3451 094c 0A       		.uleb128 0xa
 3452 094d 1B070000 		.4byte	.LASF86
 3453 0951 01       		.byte	0x1
 3454 0952 3B0B     		.2byte	0xb3b
 3455 0954 00000000 		.4byte	.LFB42
 3456 0958 10000000 		.4byte	.LFE42-.LFB42
 3457 095c 01       		.uleb128 0x1
 3458 095d 9C       		.byte	0x9c
 3459 095e 73090000 		.4byte	0x973
 3460 0962 0B       		.uleb128 0xb
 3461 0963 9C020000 		.4byte	.LASF64
 3462 0967 01       		.byte	0x1
 3463 0968 3B0B     		.2byte	0xb3b
 3464 096a 83000000 		.4byte	0x83
 3465 096e 99050000 		.4byte	.LLST40
 3466 0972 00       		.byte	0
 3467 0973 12       		.uleb128 0x12
 3468 0974 B8010000 		.4byte	.LASF88
 3469 0978 01       		.byte	0x1
 3470 0979 4B0B     		.2byte	0xb4b
 3471 097b 83000000 		.4byte	0x83
 3472 097f 00000000 		.4byte	.LFB43
 3473 0983 10000000 		.4byte	.LFE43-.LFB43
 3474 0987 01       		.uleb128 0x1
 3475 0988 9C       		.byte	0x9c
 3476 0989 12       		.uleb128 0x12
 3477 098a 6C040000 		.4byte	.LASF89
 3478 098e 01       		.byte	0x1
 3479 098f 5B0B     		.2byte	0xb5b
 3480 0991 83000000 		.4byte	0x83
 3481 0995 00000000 		.4byte	.LFB44
 3482 0999 10000000 		.4byte	.LFE44-.LFB44
 3483 099d 01       		.uleb128 0x1
 3484 099e 9C       		.byte	0x9c
 3485 099f 0A       		.uleb128 0xa
 3486 09a0 79030000 		.4byte	.LASF90
 3487 09a4 01       		.byte	0x1
 3488 09a5 7B0B     		.2byte	0xb7b
 3489 09a7 00000000 		.4byte	.LFB45
 3490 09ab 20000000 		.4byte	.LFE45-.LFB45
 3491 09af 01       		.uleb128 0x1
 3492 09b0 9C       		.byte	0x9c
 3493 09b1 C4090000 		.4byte	0x9c4
 3494 09b5 0E       		.uleb128 0xe
 3495 09b6 A2020000 		.4byte	.LASF91
 3496 09ba 01       		.byte	0x1
 3497 09bb 7B0B     		.2byte	0xb7b
 3498 09bd 83000000 		.4byte	0x83
 3499 09c1 01       		.uleb128 0x1
 3500 09c2 50       		.byte	0x50
 3501 09c3 00       		.byte	0
 3502 09c4 12       		.uleb128 0x12
 3503 09c5 28060000 		.4byte	.LASF92
 3504 09c9 01       		.byte	0x1
 3505 09ca 940B     		.2byte	0xb94
 3506 09cc 83000000 		.4byte	0x83
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 120


 3507 09d0 00000000 		.4byte	.LFB46
 3508 09d4 10000000 		.4byte	.LFE46-.LFB46
 3509 09d8 01       		.uleb128 0x1
 3510 09d9 9C       		.byte	0x9c
 3511 09da 12       		.uleb128 0x12
 3512 09db BC020000 		.4byte	.LASF93
 3513 09df 01       		.byte	0x1
 3514 09e0 AB0B     		.2byte	0xbab
 3515 09e2 83000000 		.4byte	0x83
 3516 09e6 00000000 		.4byte	.LFB47
 3517 09ea 10000000 		.4byte	.LFE47-.LFB47
 3518 09ee 01       		.uleb128 0x1
 3519 09ef 9C       		.byte	0x9c
 3520 09f0 18       		.uleb128 0x18
 3521 09f1 2E070000 		.4byte	.LASF117
 3522 09f5 01       		.byte	0x1
 3523 09f6 000C     		.2byte	0xc00
 3524 09f8 00000000 		.4byte	.LFB51
 3525 09fc 28000000 		.4byte	.LFE51-.LFB51
 3526 0a00 01       		.uleb128 0x1
 3527 0a01 9C       		.byte	0x9c
 3528 0a02 1E0A0000 		.4byte	0xa1e
 3529 0a06 19       		.uleb128 0x19
 3530 0a07 6900     		.ascii	"i\000"
 3531 0a09 01       		.byte	0x1
 3532 0a0a 020C     		.2byte	0xc02
 3533 0a0c 83000000 		.4byte	0x83
 3534 0a10 BA050000 		.4byte	.LLST41
 3535 0a14 0D       		.uleb128 0xd
 3536 0a15 06000000 		.4byte	.LVL139
 3537 0a19 DA090000 		.4byte	0x9da
 3538 0a1d 00       		.byte	0
 3539 0a1e 10       		.uleb128 0x10
 3540 0a1f DF020000 		.4byte	.LASF94
 3541 0a23 01       		.byte	0x1
 3542 0a24 B80B     		.2byte	0xbb8
 3543 0a26 00000000 		.4byte	.LFB48
 3544 0a2a 0C000000 		.4byte	.LFE48-.LFB48
 3545 0a2e 01       		.uleb128 0x1
 3546 0a2f 9C       		.byte	0x9c
 3547 0a30 17       		.uleb128 0x17
 3548 0a31 8E020000 		.4byte	.LASF95
 3549 0a35 01       		.byte	0x1
 3550 0a36 DB0A     		.2byte	0xadb
 3551 0a38 00000000 		.4byte	.LFB37
 3552 0a3c 44000000 		.4byte	.LFE37-.LFB37
 3553 0a40 01       		.uleb128 0x1
 3554 0a41 9C       		.byte	0x9c
 3555 0a42 960A0000 		.4byte	0xa96
 3556 0a46 19       		.uleb128 0x19
 3557 0a47 6900     		.ascii	"i\000"
 3558 0a49 01       		.byte	0x1
 3559 0a4a DD0A     		.2byte	0xadd
 3560 0a4c 83000000 		.4byte	0x83
 3561 0a50 D8050000 		.4byte	.LLST42
 3562 0a54 16       		.uleb128 0x16
 3563 0a55 1C000000 		.4byte	.LVL149
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 121


 3564 0a59 74040000 		.4byte	0x474
 3565 0a5d 700A0000 		.4byte	0xa70
 3566 0a61 14       		.uleb128 0x14
 3567 0a62 01       		.uleb128 0x1
 3568 0a63 50       		.byte	0x50
 3569 0a64 01       		.uleb128 0x1
 3570 0a65 3F       		.byte	0x3f
 3571 0a66 14       		.uleb128 0x14
 3572 0a67 01       		.uleb128 0x1
 3573 0a68 51       		.byte	0x51
 3574 0a69 05       		.uleb128 0x5
 3575 0a6a 03       		.byte	0x3
 3576 0a6b 00000000 		.4byte	CySysTickServiceCallbacks
 3577 0a6f 00       		.byte	0
 3578 0a70 16       		.uleb128 0x16
 3579 0a71 22000000 		.4byte	.LVL150
 3580 0a75 9F090000 		.4byte	0x99f
 3581 0a79 830A0000 		.4byte	0xa83
 3582 0a7d 14       		.uleb128 0x14
 3583 0a7e 01       		.uleb128 0x1
 3584 0a7f 50       		.byte	0x50
 3585 0a80 01       		.uleb128 0x1
 3586 0a81 31       		.byte	0x31
 3587 0a82 00       		.byte	0
 3588 0a83 0D       		.uleb128 0xd
 3589 0a84 32000000 		.4byte	.LVL152
 3590 0a88 4C090000 		.4byte	0x94c
 3591 0a8c 0D       		.uleb128 0xd
 3592 0a8d 36000000 		.4byte	.LVL153
 3593 0a91 1E0A0000 		.4byte	0xa1e
 3594 0a95 00       		.byte	0
 3595 0a96 0A       		.uleb128 0xa
 3596 0a97 F2030000 		.4byte	.LASF96
 3597 0a9b 01       		.byte	0x1
 3598 0a9c BE0A     		.2byte	0xabe
 3599 0a9e 00000000 		.4byte	.LFB36
 3600 0aa2 20000000 		.4byte	.LFE36-.LFB36
 3601 0aa6 01       		.uleb128 0x1
 3602 0aa7 9C       		.byte	0x9c
 3603 0aa8 BF0A0000 		.4byte	0xabf
 3604 0aac 0D       		.uleb128 0xd
 3605 0aad 0E000000 		.4byte	.LVL154
 3606 0ab1 300A0000 		.4byte	0xa30
 3607 0ab5 0D       		.uleb128 0xd
 3608 0ab6 18000000 		.4byte	.LVL155
 3609 0aba 1A090000 		.4byte	0x91a
 3610 0abe 00       		.byte	0
 3611 0abf 0F       		.uleb128 0xf
 3612 0ac0 EF050000 		.4byte	.LASF97
 3613 0ac4 01       		.byte	0x1
 3614 0ac5 DB0B     		.2byte	0xbdb
 3615 0ac7 F3000000 		.4byte	0xf3
 3616 0acb 00000000 		.4byte	.LFB49
 3617 0acf 10000000 		.4byte	.LFE49-.LFB49
 3618 0ad3 01       		.uleb128 0x1
 3619 0ad4 9C       		.byte	0x9c
 3620 0ad5 060B0000 		.4byte	0xb06
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 122


 3621 0ad9 0B       		.uleb128 0xb
 3622 0ada A0030000 		.4byte	.LASF47
 3623 0ade 01       		.byte	0x1
 3624 0adf DB0B     		.2byte	0xbdb
 3625 0ae1 83000000 		.4byte	0x83
 3626 0ae5 F7050000 		.4byte	.LLST43
 3627 0ae9 0E       		.uleb128 0xe
 3628 0aea 52040000 		.4byte	.LASF98
 3629 0aee 01       		.byte	0x1
 3630 0aef DB0B     		.2byte	0xbdb
 3631 0af1 F3000000 		.4byte	0xf3
 3632 0af5 01       		.uleb128 0x1
 3633 0af6 51       		.byte	0x51
 3634 0af7 11       		.uleb128 0x11
 3635 0af8 5A000000 		.4byte	.LASF99
 3636 0afc 01       		.byte	0x1
 3637 0afd DD0B     		.2byte	0xbdd
 3638 0aff F3000000 		.4byte	0xf3
 3639 0b03 01       		.uleb128 0x1
 3640 0b04 50       		.byte	0x50
 3641 0b05 00       		.byte	0
 3642 0b06 0F       		.uleb128 0xf
 3643 0b07 E1010000 		.4byte	.LASF100
 3644 0b0b 01       		.byte	0x1
 3645 0b0c F30B     		.2byte	0xbf3
 3646 0b0e F3000000 		.4byte	0xf3
 3647 0b12 00000000 		.4byte	.LFB50
 3648 0b16 0C000000 		.4byte	.LFE50-.LFB50
 3649 0b1a 01       		.uleb128 0x1
 3650 0b1b 9C       		.byte	0x9c
 3651 0b1c 310B0000 		.4byte	0xb31
 3652 0b20 0B       		.uleb128 0xb
 3653 0b21 A0030000 		.4byte	.LASF47
 3654 0b25 01       		.byte	0x1
 3655 0b26 F30B     		.2byte	0xbf3
 3656 0b28 83000000 		.4byte	0x83
 3657 0b2c 18060000 		.4byte	.LLST44
 3658 0b30 00       		.byte	0
 3659 0b31 0A       		.uleb128 0xa
 3660 0b32 AE020000 		.4byte	.LASF101
 3661 0b36 01       		.byte	0x1
 3662 0b37 200C     		.2byte	0xc20
 3663 0b39 00000000 		.4byte	.LFB52
 3664 0b3d 70000000 		.4byte	.LFE52-.LFB52
 3665 0b41 01       		.uleb128 0x1
 3666 0b42 9C       		.byte	0x9c
 3667 0b43 560B0000 		.4byte	0xb56
 3668 0b47 0E       		.uleb128 0xe
 3669 0b48 17060000 		.4byte	.LASF102
 3670 0b4c 01       		.byte	0x1
 3671 0b4d 200C     		.2byte	0xc20
 3672 0b4f 560B0000 		.4byte	0xb56
 3673 0b53 01       		.uleb128 0x1
 3674 0b54 50       		.byte	0x50
 3675 0b55 00       		.byte	0
 3676 0b56 06       		.uleb128 0x6
 3677 0b57 04       		.byte	0x4
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 123


 3678 0b58 83000000 		.4byte	0x83
 3679 0b5c 1A       		.uleb128 0x1a
 3680 0b5d F3000000 		.4byte	0xf3
 3681 0b61 6C0B0000 		.4byte	0xb6c
 3682 0b65 1B       		.uleb128 0x1b
 3683 0b66 EC000000 		.4byte	0xec
 3684 0b6a 04       		.byte	0x4
 3685 0b6b 00       		.byte	0
 3686 0b6c 1C       		.uleb128 0x1c
 3687 0b6d 04060000 		.4byte	.LASF103
 3688 0b71 01       		.byte	0x1
 3689 0b72 22       		.byte	0x22
 3690 0b73 5C0B0000 		.4byte	0xb5c
 3691 0b77 05       		.uleb128 0x5
 3692 0b78 03       		.byte	0x3
 3693 0b79 00000000 		.4byte	CySysTickCallbacks
 3694 0b7d 1D       		.uleb128 0x1d
 3695 0b7e 7E040000 		.4byte	.LASF104
 3696 0b82 01       		.byte	0x1
 3697 0b83 1B       		.byte	0x1b
 3698 0b84 83000000 		.4byte	0x83
 3699 0b88 05       		.uleb128 0x5
 3700 0b89 03       		.byte	0x3
 3701 0b8a 00000000 		.4byte	cydelayFreqHz
 3702 0b8e 1D       		.uleb128 0x1d
 3703 0b8f FC010000 		.4byte	.LASF105
 3704 0b93 01       		.byte	0x1
 3705 0b94 1C       		.byte	0x1c
 3706 0b95 83000000 		.4byte	0x83
 3707 0b99 05       		.uleb128 0x5
 3708 0b9a 03       		.byte	0x3
 3709 0b9b 00000000 		.4byte	cydelayFreqKhz
 3710 0b9f 1D       		.uleb128 0x1d
 3711 0ba0 6A060000 		.4byte	.LASF106
 3712 0ba4 01       		.byte	0x1
 3713 0ba5 1D       		.byte	0x1d
 3714 0ba6 6B000000 		.4byte	0x6b
 3715 0baa 05       		.uleb128 0x5
 3716 0bab 03       		.byte	0x3
 3717 0bac 00000000 		.4byte	cydelayFreqMhz
 3718 0bb0 1D       		.uleb128 0x1d
 3719 0bb1 81020000 		.4byte	.LASF107
 3720 0bb5 01       		.byte	0x1
 3721 0bb6 1E       		.byte	0x1e
 3722 0bb7 83000000 		.4byte	0x83
 3723 0bbb 05       		.uleb128 0x5
 3724 0bbc 03       		.byte	0x3
 3725 0bbd 00000000 		.4byte	cydelay32kMs
 3726 0bc1 1D       		.uleb128 0x1d
 3727 0bc2 29010000 		.4byte	.LASF108
 3728 0bc6 01       		.byte	0x1
 3729 0bc7 36       		.byte	0x36
 3730 0bc8 83000000 		.4byte	0x83
 3731 0bcc 05       		.uleb128 0x5
 3732 0bcd 03       		.byte	0x3
 3733 0bce 00000000 		.4byte	CySysTickInitVar
 3734 0bd2 1A       		.uleb128 0x1a
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 124


 3735 0bd3 E20B0000 		.4byte	0xbe2
 3736 0bd7 E20B0000 		.4byte	0xbe2
 3737 0bdb 1B       		.uleb128 0x1b
 3738 0bdc EC000000 		.4byte	0xec
 3739 0be0 2D       		.byte	0x2d
 3740 0be1 00       		.byte	0
 3741 0be2 1E       		.uleb128 0x1e
 3742 0be3 6B000000 		.4byte	0x6b
 3743 0be7 1D       		.uleb128 0x1d
 3744 0be8 5B040000 		.4byte	.LASF109
 3745 0bec 01       		.byte	0x1
 3746 0bed 3B       		.byte	0x3b
 3747 0bee F80B0000 		.4byte	0xbf8
 3748 0bf2 05       		.uleb128 0x5
 3749 0bf3 03       		.byte	0x3
 3750 0bf4 00000000 		.4byte	cyImoFreqMhz2Reg
 3751 0bf8 1E       		.uleb128 0x1e
 3752 0bf9 D20B0000 		.4byte	0xbd2
 3753 0bfd 1D       		.uleb128 0x1d
 3754 0bfe 40000000 		.4byte	.LASF110
 3755 0c02 01       		.byte	0x1
 3756 0c03 5C       		.byte	0x5c
 3757 0c04 83000000 		.4byte	0x83
 3758 0c08 05       		.uleb128 0x5
 3759 0c09 03       		.byte	0x3
 3760 0c0a 00000000 		.4byte	CySysClkPumpConfig
 3761 0c0e 1F       		.uleb128 0x1f
 3762 0c0f 2B030000 		.4byte	.LASF111
 3763 0c13 2B030000 		.4byte	.LASF111
 3764 0c17 03       		.byte	0x3
 3765 0c18 E5       		.byte	0xe5
 3766 0c19 1F       		.uleb128 0x1f
 3767 0c1a DD040000 		.4byte	.LASF112
 3768 0c1e DD040000 		.4byte	.LASF112
 3769 0c22 03       		.byte	0x3
 3770 0c23 E6       		.byte	0xe6
 3771 0c24 1F       		.uleb128 0x1f
 3772 0c25 30050000 		.4byte	.LASF113
 3773 0c29 30050000 		.4byte	.LASF113
 3774 0c2d 03       		.byte	0x3
 3775 0c2e DC       		.byte	0xdc
 3776 0c2f 00       		.byte	0
 3777              		.section	.debug_abbrev,"",%progbits
 3778              	.Ldebug_abbrev0:
 3779 0000 01       		.uleb128 0x1
 3780 0001 11       		.uleb128 0x11
 3781 0002 01       		.byte	0x1
 3782 0003 25       		.uleb128 0x25
 3783 0004 0E       		.uleb128 0xe
 3784 0005 13       		.uleb128 0x13
 3785 0006 0B       		.uleb128 0xb
 3786 0007 03       		.uleb128 0x3
 3787 0008 0E       		.uleb128 0xe
 3788 0009 1B       		.uleb128 0x1b
 3789 000a 0E       		.uleb128 0xe
 3790 000b 55       		.uleb128 0x55
 3791 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 125


 3792 000d 11       		.uleb128 0x11
 3793 000e 01       		.uleb128 0x1
 3794 000f 10       		.uleb128 0x10
 3795 0010 17       		.uleb128 0x17
 3796 0011 00       		.byte	0
 3797 0012 00       		.byte	0
 3798 0013 02       		.uleb128 0x2
 3799 0014 24       		.uleb128 0x24
 3800 0015 00       		.byte	0
 3801 0016 0B       		.uleb128 0xb
 3802 0017 0B       		.uleb128 0xb
 3803 0018 3E       		.uleb128 0x3e
 3804 0019 0B       		.uleb128 0xb
 3805 001a 03       		.uleb128 0x3
 3806 001b 0E       		.uleb128 0xe
 3807 001c 00       		.byte	0
 3808 001d 00       		.byte	0
 3809 001e 03       		.uleb128 0x3
 3810 001f 24       		.uleb128 0x24
 3811 0020 00       		.byte	0
 3812 0021 0B       		.uleb128 0xb
 3813 0022 0B       		.uleb128 0xb
 3814 0023 3E       		.uleb128 0x3e
 3815 0024 0B       		.uleb128 0xb
 3816 0025 03       		.uleb128 0x3
 3817 0026 08       		.uleb128 0x8
 3818 0027 00       		.byte	0
 3819 0028 00       		.byte	0
 3820 0029 04       		.uleb128 0x4
 3821 002a 16       		.uleb128 0x16
 3822 002b 00       		.byte	0
 3823 002c 03       		.uleb128 0x3
 3824 002d 0E       		.uleb128 0xe
 3825 002e 3A       		.uleb128 0x3a
 3826 002f 0B       		.uleb128 0xb
 3827 0030 3B       		.uleb128 0x3b
 3828 0031 05       		.uleb128 0x5
 3829 0032 49       		.uleb128 0x49
 3830 0033 13       		.uleb128 0x13
 3831 0034 00       		.byte	0
 3832 0035 00       		.byte	0
 3833 0036 05       		.uleb128 0x5
 3834 0037 35       		.uleb128 0x35
 3835 0038 00       		.byte	0
 3836 0039 49       		.uleb128 0x49
 3837 003a 13       		.uleb128 0x13
 3838 003b 00       		.byte	0
 3839 003c 00       		.byte	0
 3840 003d 06       		.uleb128 0x6
 3841 003e 0F       		.uleb128 0xf
 3842 003f 00       		.byte	0
 3843 0040 0B       		.uleb128 0xb
 3844 0041 0B       		.uleb128 0xb
 3845 0042 49       		.uleb128 0x49
 3846 0043 13       		.uleb128 0x13
 3847 0044 00       		.byte	0
 3848 0045 00       		.byte	0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 126


 3849 0046 07       		.uleb128 0x7
 3850 0047 15       		.uleb128 0x15
 3851 0048 00       		.byte	0
 3852 0049 27       		.uleb128 0x27
 3853 004a 19       		.uleb128 0x19
 3854 004b 00       		.byte	0
 3855 004c 00       		.byte	0
 3856 004d 08       		.uleb128 0x8
 3857 004e 16       		.uleb128 0x16
 3858 004f 00       		.byte	0
 3859 0050 03       		.uleb128 0x3
 3860 0051 0E       		.uleb128 0xe
 3861 0052 3A       		.uleb128 0x3a
 3862 0053 0B       		.uleb128 0xb
 3863 0054 3B       		.uleb128 0x3b
 3864 0055 0B       		.uleb128 0xb
 3865 0056 49       		.uleb128 0x49
 3866 0057 13       		.uleb128 0x13
 3867 0058 00       		.byte	0
 3868 0059 00       		.byte	0
 3869 005a 09       		.uleb128 0x9
 3870 005b 2E       		.uleb128 0x2e
 3871 005c 00       		.byte	0
 3872 005d 3F       		.uleb128 0x3f
 3873 005e 19       		.uleb128 0x19
 3874 005f 03       		.uleb128 0x3
 3875 0060 0E       		.uleb128 0xe
 3876 0061 3A       		.uleb128 0x3a
 3877 0062 0B       		.uleb128 0xb
 3878 0063 3B       		.uleb128 0x3b
 3879 0064 0B       		.uleb128 0xb
 3880 0065 27       		.uleb128 0x27
 3881 0066 19       		.uleb128 0x19
 3882 0067 11       		.uleb128 0x11
 3883 0068 01       		.uleb128 0x1
 3884 0069 12       		.uleb128 0x12
 3885 006a 06       		.uleb128 0x6
 3886 006b 40       		.uleb128 0x40
 3887 006c 18       		.uleb128 0x18
 3888 006d 9742     		.uleb128 0x2117
 3889 006f 19       		.uleb128 0x19
 3890 0070 00       		.byte	0
 3891 0071 00       		.byte	0
 3892 0072 0A       		.uleb128 0xa
 3893 0073 2E       		.uleb128 0x2e
 3894 0074 01       		.byte	0x1
 3895 0075 3F       		.uleb128 0x3f
 3896 0076 19       		.uleb128 0x19
 3897 0077 03       		.uleb128 0x3
 3898 0078 0E       		.uleb128 0xe
 3899 0079 3A       		.uleb128 0x3a
 3900 007a 0B       		.uleb128 0xb
 3901 007b 3B       		.uleb128 0x3b
 3902 007c 05       		.uleb128 0x5
 3903 007d 27       		.uleb128 0x27
 3904 007e 19       		.uleb128 0x19
 3905 007f 11       		.uleb128 0x11
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 127


 3906 0080 01       		.uleb128 0x1
 3907 0081 12       		.uleb128 0x12
 3908 0082 06       		.uleb128 0x6
 3909 0083 40       		.uleb128 0x40
 3910 0084 18       		.uleb128 0x18
 3911 0085 9742     		.uleb128 0x2117
 3912 0087 19       		.uleb128 0x19
 3913 0088 01       		.uleb128 0x1
 3914 0089 13       		.uleb128 0x13
 3915 008a 00       		.byte	0
 3916 008b 00       		.byte	0
 3917 008c 0B       		.uleb128 0xb
 3918 008d 05       		.uleb128 0x5
 3919 008e 00       		.byte	0
 3920 008f 03       		.uleb128 0x3
 3921 0090 0E       		.uleb128 0xe
 3922 0091 3A       		.uleb128 0x3a
 3923 0092 0B       		.uleb128 0xb
 3924 0093 3B       		.uleb128 0x3b
 3925 0094 05       		.uleb128 0x5
 3926 0095 49       		.uleb128 0x49
 3927 0096 13       		.uleb128 0x13
 3928 0097 02       		.uleb128 0x2
 3929 0098 17       		.uleb128 0x17
 3930 0099 00       		.byte	0
 3931 009a 00       		.byte	0
 3932 009b 0C       		.uleb128 0xc
 3933 009c 34       		.uleb128 0x34
 3934 009d 00       		.byte	0
 3935 009e 03       		.uleb128 0x3
 3936 009f 0E       		.uleb128 0xe
 3937 00a0 3A       		.uleb128 0x3a
 3938 00a1 0B       		.uleb128 0xb
 3939 00a2 3B       		.uleb128 0x3b
 3940 00a3 05       		.uleb128 0x5
 3941 00a4 49       		.uleb128 0x49
 3942 00a5 13       		.uleb128 0x13
 3943 00a6 02       		.uleb128 0x2
 3944 00a7 17       		.uleb128 0x17
 3945 00a8 00       		.byte	0
 3946 00a9 00       		.byte	0
 3947 00aa 0D       		.uleb128 0xd
 3948 00ab 898201   		.uleb128 0x4109
 3949 00ae 00       		.byte	0
 3950 00af 11       		.uleb128 0x11
 3951 00b0 01       		.uleb128 0x1
 3952 00b1 31       		.uleb128 0x31
 3953 00b2 13       		.uleb128 0x13
 3954 00b3 00       		.byte	0
 3955 00b4 00       		.byte	0
 3956 00b5 0E       		.uleb128 0xe
 3957 00b6 05       		.uleb128 0x5
 3958 00b7 00       		.byte	0
 3959 00b8 03       		.uleb128 0x3
 3960 00b9 0E       		.uleb128 0xe
 3961 00ba 3A       		.uleb128 0x3a
 3962 00bb 0B       		.uleb128 0xb
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 128


 3963 00bc 3B       		.uleb128 0x3b
 3964 00bd 05       		.uleb128 0x5
 3965 00be 49       		.uleb128 0x49
 3966 00bf 13       		.uleb128 0x13
 3967 00c0 02       		.uleb128 0x2
 3968 00c1 18       		.uleb128 0x18
 3969 00c2 00       		.byte	0
 3970 00c3 00       		.byte	0
 3971 00c4 0F       		.uleb128 0xf
 3972 00c5 2E       		.uleb128 0x2e
 3973 00c6 01       		.byte	0x1
 3974 00c7 3F       		.uleb128 0x3f
 3975 00c8 19       		.uleb128 0x19
 3976 00c9 03       		.uleb128 0x3
 3977 00ca 0E       		.uleb128 0xe
 3978 00cb 3A       		.uleb128 0x3a
 3979 00cc 0B       		.uleb128 0xb
 3980 00cd 3B       		.uleb128 0x3b
 3981 00ce 05       		.uleb128 0x5
 3982 00cf 27       		.uleb128 0x27
 3983 00d0 19       		.uleb128 0x19
 3984 00d1 49       		.uleb128 0x49
 3985 00d2 13       		.uleb128 0x13
 3986 00d3 11       		.uleb128 0x11
 3987 00d4 01       		.uleb128 0x1
 3988 00d5 12       		.uleb128 0x12
 3989 00d6 06       		.uleb128 0x6
 3990 00d7 40       		.uleb128 0x40
 3991 00d8 18       		.uleb128 0x18
 3992 00d9 9742     		.uleb128 0x2117
 3993 00db 19       		.uleb128 0x19
 3994 00dc 01       		.uleb128 0x1
 3995 00dd 13       		.uleb128 0x13
 3996 00de 00       		.byte	0
 3997 00df 00       		.byte	0
 3998 00e0 10       		.uleb128 0x10
 3999 00e1 2E       		.uleb128 0x2e
 4000 00e2 00       		.byte	0
 4001 00e3 3F       		.uleb128 0x3f
 4002 00e4 19       		.uleb128 0x19
 4003 00e5 03       		.uleb128 0x3
 4004 00e6 0E       		.uleb128 0xe
 4005 00e7 3A       		.uleb128 0x3a
 4006 00e8 0B       		.uleb128 0xb
 4007 00e9 3B       		.uleb128 0x3b
 4008 00ea 05       		.uleb128 0x5
 4009 00eb 27       		.uleb128 0x27
 4010 00ec 19       		.uleb128 0x19
 4011 00ed 11       		.uleb128 0x11
 4012 00ee 01       		.uleb128 0x1
 4013 00ef 12       		.uleb128 0x12
 4014 00f0 06       		.uleb128 0x6
 4015 00f1 40       		.uleb128 0x40
 4016 00f2 18       		.uleb128 0x18
 4017 00f3 9742     		.uleb128 0x2117
 4018 00f5 19       		.uleb128 0x19
 4019 00f6 00       		.byte	0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 129


 4020 00f7 00       		.byte	0
 4021 00f8 11       		.uleb128 0x11
 4022 00f9 34       		.uleb128 0x34
 4023 00fa 00       		.byte	0
 4024 00fb 03       		.uleb128 0x3
 4025 00fc 0E       		.uleb128 0xe
 4026 00fd 3A       		.uleb128 0x3a
 4027 00fe 0B       		.uleb128 0xb
 4028 00ff 3B       		.uleb128 0x3b
 4029 0100 05       		.uleb128 0x5
 4030 0101 49       		.uleb128 0x49
 4031 0102 13       		.uleb128 0x13
 4032 0103 02       		.uleb128 0x2
 4033 0104 18       		.uleb128 0x18
 4034 0105 00       		.byte	0
 4035 0106 00       		.byte	0
 4036 0107 12       		.uleb128 0x12
 4037 0108 2E       		.uleb128 0x2e
 4038 0109 00       		.byte	0
 4039 010a 3F       		.uleb128 0x3f
 4040 010b 19       		.uleb128 0x19
 4041 010c 03       		.uleb128 0x3
 4042 010d 0E       		.uleb128 0xe
 4043 010e 3A       		.uleb128 0x3a
 4044 010f 0B       		.uleb128 0xb
 4045 0110 3B       		.uleb128 0x3b
 4046 0111 05       		.uleb128 0x5
 4047 0112 27       		.uleb128 0x27
 4048 0113 19       		.uleb128 0x19
 4049 0114 49       		.uleb128 0x49
 4050 0115 13       		.uleb128 0x13
 4051 0116 11       		.uleb128 0x11
 4052 0117 01       		.uleb128 0x1
 4053 0118 12       		.uleb128 0x12
 4054 0119 06       		.uleb128 0x6
 4055 011a 40       		.uleb128 0x40
 4056 011b 18       		.uleb128 0x18
 4057 011c 9742     		.uleb128 0x2117
 4058 011e 19       		.uleb128 0x19
 4059 011f 00       		.byte	0
 4060 0120 00       		.byte	0
 4061 0121 13       		.uleb128 0x13
 4062 0122 898201   		.uleb128 0x4109
 4063 0125 01       		.byte	0x1
 4064 0126 11       		.uleb128 0x11
 4065 0127 01       		.uleb128 0x1
 4066 0128 31       		.uleb128 0x31
 4067 0129 13       		.uleb128 0x13
 4068 012a 00       		.byte	0
 4069 012b 00       		.byte	0
 4070 012c 14       		.uleb128 0x14
 4071 012d 8A8201   		.uleb128 0x410a
 4072 0130 00       		.byte	0
 4073 0131 02       		.uleb128 0x2
 4074 0132 18       		.uleb128 0x18
 4075 0133 9142     		.uleb128 0x2111
 4076 0135 18       		.uleb128 0x18
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 130


 4077 0136 00       		.byte	0
 4078 0137 00       		.byte	0
 4079 0138 15       		.uleb128 0x15
 4080 0139 34       		.uleb128 0x34
 4081 013a 00       		.byte	0
 4082 013b 03       		.uleb128 0x3
 4083 013c 0E       		.uleb128 0xe
 4084 013d 3A       		.uleb128 0x3a
 4085 013e 0B       		.uleb128 0xb
 4086 013f 3B       		.uleb128 0x3b
 4087 0140 05       		.uleb128 0x5
 4088 0141 49       		.uleb128 0x49
 4089 0142 13       		.uleb128 0x13
 4090 0143 1C       		.uleb128 0x1c
 4091 0144 06       		.uleb128 0x6
 4092 0145 00       		.byte	0
 4093 0146 00       		.byte	0
 4094 0147 16       		.uleb128 0x16
 4095 0148 898201   		.uleb128 0x4109
 4096 014b 01       		.byte	0x1
 4097 014c 11       		.uleb128 0x11
 4098 014d 01       		.uleb128 0x1
 4099 014e 31       		.uleb128 0x31
 4100 014f 13       		.uleb128 0x13
 4101 0150 01       		.uleb128 0x1
 4102 0151 13       		.uleb128 0x13
 4103 0152 00       		.byte	0
 4104 0153 00       		.byte	0
 4105 0154 17       		.uleb128 0x17
 4106 0155 2E       		.uleb128 0x2e
 4107 0156 01       		.byte	0x1
 4108 0157 3F       		.uleb128 0x3f
 4109 0158 19       		.uleb128 0x19
 4110 0159 03       		.uleb128 0x3
 4111 015a 0E       		.uleb128 0xe
 4112 015b 3A       		.uleb128 0x3a
 4113 015c 0B       		.uleb128 0xb
 4114 015d 3B       		.uleb128 0x3b
 4115 015e 05       		.uleb128 0x5
 4116 015f 27       		.uleb128 0x27
 4117 0160 19       		.uleb128 0x19
 4118 0161 11       		.uleb128 0x11
 4119 0162 01       		.uleb128 0x1
 4120 0163 12       		.uleb128 0x12
 4121 0164 06       		.uleb128 0x6
 4122 0165 40       		.uleb128 0x40
 4123 0166 18       		.uleb128 0x18
 4124 0167 9642     		.uleb128 0x2116
 4125 0169 19       		.uleb128 0x19
 4126 016a 01       		.uleb128 0x1
 4127 016b 13       		.uleb128 0x13
 4128 016c 00       		.byte	0
 4129 016d 00       		.byte	0
 4130 016e 18       		.uleb128 0x18
 4131 016f 2E       		.uleb128 0x2e
 4132 0170 01       		.byte	0x1
 4133 0171 03       		.uleb128 0x3
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 131


 4134 0172 0E       		.uleb128 0xe
 4135 0173 3A       		.uleb128 0x3a
 4136 0174 0B       		.uleb128 0xb
 4137 0175 3B       		.uleb128 0x3b
 4138 0176 05       		.uleb128 0x5
 4139 0177 27       		.uleb128 0x27
 4140 0178 19       		.uleb128 0x19
 4141 0179 11       		.uleb128 0x11
 4142 017a 01       		.uleb128 0x1
 4143 017b 12       		.uleb128 0x12
 4144 017c 06       		.uleb128 0x6
 4145 017d 40       		.uleb128 0x40
 4146 017e 18       		.uleb128 0x18
 4147 017f 9642     		.uleb128 0x2116
 4148 0181 19       		.uleb128 0x19
 4149 0182 01       		.uleb128 0x1
 4150 0183 13       		.uleb128 0x13
 4151 0184 00       		.byte	0
 4152 0185 00       		.byte	0
 4153 0186 19       		.uleb128 0x19
 4154 0187 34       		.uleb128 0x34
 4155 0188 00       		.byte	0
 4156 0189 03       		.uleb128 0x3
 4157 018a 08       		.uleb128 0x8
 4158 018b 3A       		.uleb128 0x3a
 4159 018c 0B       		.uleb128 0xb
 4160 018d 3B       		.uleb128 0x3b
 4161 018e 05       		.uleb128 0x5
 4162 018f 49       		.uleb128 0x49
 4163 0190 13       		.uleb128 0x13
 4164 0191 02       		.uleb128 0x2
 4165 0192 17       		.uleb128 0x17
 4166 0193 00       		.byte	0
 4167 0194 00       		.byte	0
 4168 0195 1A       		.uleb128 0x1a
 4169 0196 01       		.uleb128 0x1
 4170 0197 01       		.byte	0x1
 4171 0198 49       		.uleb128 0x49
 4172 0199 13       		.uleb128 0x13
 4173 019a 01       		.uleb128 0x1
 4174 019b 13       		.uleb128 0x13
 4175 019c 00       		.byte	0
 4176 019d 00       		.byte	0
 4177 019e 1B       		.uleb128 0x1b
 4178 019f 21       		.uleb128 0x21
 4179 01a0 00       		.byte	0
 4180 01a1 49       		.uleb128 0x49
 4181 01a2 13       		.uleb128 0x13
 4182 01a3 2F       		.uleb128 0x2f
 4183 01a4 0B       		.uleb128 0xb
 4184 01a5 00       		.byte	0
 4185 01a6 00       		.byte	0
 4186 01a7 1C       		.uleb128 0x1c
 4187 01a8 34       		.uleb128 0x34
 4188 01a9 00       		.byte	0
 4189 01aa 03       		.uleb128 0x3
 4190 01ab 0E       		.uleb128 0xe
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 132


 4191 01ac 3A       		.uleb128 0x3a
 4192 01ad 0B       		.uleb128 0xb
 4193 01ae 3B       		.uleb128 0x3b
 4194 01af 0B       		.uleb128 0xb
 4195 01b0 49       		.uleb128 0x49
 4196 01b1 13       		.uleb128 0x13
 4197 01b2 02       		.uleb128 0x2
 4198 01b3 18       		.uleb128 0x18
 4199 01b4 00       		.byte	0
 4200 01b5 00       		.byte	0
 4201 01b6 1D       		.uleb128 0x1d
 4202 01b7 34       		.uleb128 0x34
 4203 01b8 00       		.byte	0
 4204 01b9 03       		.uleb128 0x3
 4205 01ba 0E       		.uleb128 0xe
 4206 01bb 3A       		.uleb128 0x3a
 4207 01bc 0B       		.uleb128 0xb
 4208 01bd 3B       		.uleb128 0x3b
 4209 01be 0B       		.uleb128 0xb
 4210 01bf 49       		.uleb128 0x49
 4211 01c0 13       		.uleb128 0x13
 4212 01c1 3F       		.uleb128 0x3f
 4213 01c2 19       		.uleb128 0x19
 4214 01c3 02       		.uleb128 0x2
 4215 01c4 18       		.uleb128 0x18
 4216 01c5 00       		.byte	0
 4217 01c6 00       		.byte	0
 4218 01c7 1E       		.uleb128 0x1e
 4219 01c8 26       		.uleb128 0x26
 4220 01c9 00       		.byte	0
 4221 01ca 49       		.uleb128 0x49
 4222 01cb 13       		.uleb128 0x13
 4223 01cc 00       		.byte	0
 4224 01cd 00       		.byte	0
 4225 01ce 1F       		.uleb128 0x1f
 4226 01cf 2E       		.uleb128 0x2e
 4227 01d0 00       		.byte	0
 4228 01d1 3F       		.uleb128 0x3f
 4229 01d2 19       		.uleb128 0x19
 4230 01d3 3C       		.uleb128 0x3c
 4231 01d4 19       		.uleb128 0x19
 4232 01d5 6E       		.uleb128 0x6e
 4233 01d6 0E       		.uleb128 0xe
 4234 01d7 03       		.uleb128 0x3
 4235 01d8 0E       		.uleb128 0xe
 4236 01d9 3A       		.uleb128 0x3a
 4237 01da 0B       		.uleb128 0xb
 4238 01db 3B       		.uleb128 0x3b
 4239 01dc 0B       		.uleb128 0xb
 4240 01dd 00       		.byte	0
 4241 01de 00       		.byte	0
 4242 01df 00       		.byte	0
 4243              		.section	.debug_loc,"",%progbits
 4244              	.Ldebug_loc0:
 4245              	.LLST0:
 4246 0000 00000000 		.4byte	.LVL0
 4247 0004 07000000 		.4byte	.LVL1-1
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 133


 4248 0008 0100     		.2byte	0x1
 4249 000a 50       		.byte	0x50
 4250 000b 07000000 		.4byte	.LVL1-1
 4251 000f 12000000 		.4byte	.LVL3
 4252 0013 0100     		.2byte	0x1
 4253 0015 54       		.byte	0x54
 4254 0016 12000000 		.4byte	.LVL3
 4255 001a 20000000 		.4byte	.LFE4
 4256 001e 0400     		.2byte	0x4
 4257 0020 F3       		.byte	0xf3
 4258 0021 01       		.uleb128 0x1
 4259 0022 50       		.byte	0x50
 4260 0023 9F       		.byte	0x9f
 4261 0024 00000000 		.4byte	0
 4262 0028 00000000 		.4byte	0
 4263              	.LLST1:
 4264 002c 08000000 		.4byte	.LVL1
 4265 0030 19000000 		.4byte	.LVL5-1
 4266 0034 0100     		.2byte	0x1
 4267 0036 50       		.byte	0x50
 4268 0037 00000000 		.4byte	0
 4269 003b 00000000 		.4byte	0
 4270              	.LLST2:
 4271 003f 10000000 		.4byte	.LVL2
 4272 0043 14000000 		.4byte	.LVL4
 4273 0047 0100     		.2byte	0x1
 4274 0049 53       		.byte	0x53
 4275 004a 14000000 		.4byte	.LVL4
 4276 004e 1A000000 		.4byte	.LVL6
 4277 0052 0100     		.2byte	0x1
 4278 0054 54       		.byte	0x54
 4279 0055 00000000 		.4byte	0
 4280 0059 00000000 		.4byte	0
 4281              	.LLST3:
 4282 005d 06000000 		.4byte	.LVL8
 4283 0061 11000000 		.4byte	.LVL10-1
 4284 0065 0100     		.2byte	0x1
 4285 0067 50       		.byte	0x50
 4286 0068 00000000 		.4byte	0
 4287 006c 00000000 		.4byte	0
 4288              	.LLST4:
 4289 0070 0E000000 		.4byte	.LVL9
 4290 0074 14000000 		.4byte	.LVL11
 4291 0078 0100     		.2byte	0x1
 4292 007a 54       		.byte	0x54
 4293 007b 14000000 		.4byte	.LVL11
 4294 007f 1C000000 		.4byte	.LFE6
 4295 0083 0100     		.2byte	0x1
 4296 0085 50       		.byte	0x50
 4297 0086 00000000 		.4byte	0
 4298 008a 00000000 		.4byte	0
 4299              	.LLST5:
 4300 008e 00000000 		.4byte	.LVL12
 4301 0092 07000000 		.4byte	.LVL13-1
 4302 0096 0100     		.2byte	0x1
 4303 0098 50       		.byte	0x50
 4304 0099 07000000 		.4byte	.LVL13-1
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 134


 4305 009d 14000000 		.4byte	.LVL14
 4306 00a1 0100     		.2byte	0x1
 4307 00a3 54       		.byte	0x54
 4308 00a4 14000000 		.4byte	.LVL14
 4309 00a8 30000000 		.4byte	.LFE7
 4310 00ac 0400     		.2byte	0x4
 4311 00ae F3       		.byte	0xf3
 4312 00af 01       		.uleb128 0x1
 4313 00b0 50       		.byte	0x50
 4314 00b1 9F       		.byte	0x9f
 4315 00b2 00000000 		.4byte	0
 4316 00b6 00000000 		.4byte	0
 4317              	.LLST6:
 4318 00ba 08000000 		.4byte	.LVL13
 4319 00be 23000000 		.4byte	.LVL15-1
 4320 00c2 0100     		.2byte	0x1
 4321 00c4 50       		.byte	0x50
 4322 00c5 00000000 		.4byte	0
 4323 00c9 00000000 		.4byte	0
 4324              	.LLST7:
 4325 00cd 00000000 		.4byte	.LVL17
 4326 00d1 04000000 		.4byte	.LVL18
 4327 00d5 0100     		.2byte	0x1
 4328 00d7 50       		.byte	0x50
 4329 00d8 04000000 		.4byte	.LVL18
 4330 00dc 14000000 		.4byte	.LFE17
 4331 00e0 0100     		.2byte	0x1
 4332 00e2 52       		.byte	0x52
 4333 00e3 00000000 		.4byte	0
 4334 00e7 00000000 		.4byte	0
 4335              	.LLST8:
 4336 00eb 00000000 		.4byte	.LVL23
 4337 00ef 04000000 		.4byte	.LVL24
 4338 00f3 0100     		.2byte	0x1
 4339 00f5 50       		.byte	0x50
 4340 00f6 04000000 		.4byte	.LVL24
 4341 00fa 14000000 		.4byte	.LFE26
 4342 00fe 0400     		.2byte	0x4
 4343 0100 F3       		.byte	0xf3
 4344 0101 01       		.uleb128 0x1
 4345 0102 50       		.byte	0x50
 4346 0103 9F       		.byte	0x9f
 4347 0104 00000000 		.4byte	0
 4348 0108 00000000 		.4byte	0
 4349              	.LLST9:
 4350 010c 00000000 		.4byte	.LVL25
 4351 0110 08000000 		.4byte	.LVL26
 4352 0114 0100     		.2byte	0x1
 4353 0116 50       		.byte	0x50
 4354 0117 08000000 		.4byte	.LVL26
 4355 011b 18000000 		.4byte	.LFE27
 4356 011f 0400     		.2byte	0x4
 4357 0121 F3       		.byte	0xf3
 4358 0122 01       		.uleb128 0x1
 4359 0123 50       		.byte	0x50
 4360 0124 9F       		.byte	0x9f
 4361 0125 00000000 		.4byte	0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 135


 4362 0129 00000000 		.4byte	0
 4363              	.LLST10:
 4364 012d 00000000 		.4byte	.LVL27
 4365 0131 04000000 		.4byte	.LVL28
 4366 0135 0100     		.2byte	0x1
 4367 0137 50       		.byte	0x50
 4368 0138 04000000 		.4byte	.LVL28
 4369 013c 14000000 		.4byte	.LFE28
 4370 0140 0400     		.2byte	0x4
 4371 0142 F3       		.byte	0xf3
 4372 0143 01       		.uleb128 0x1
 4373 0144 50       		.byte	0x50
 4374 0145 9F       		.byte	0x9f
 4375 0146 00000000 		.4byte	0
 4376 014a 00000000 		.4byte	0
 4377              	.LLST11:
 4378 014e 00000000 		.4byte	.LVL29
 4379 0152 04000000 		.4byte	.LVL30
 4380 0156 0100     		.2byte	0x1
 4381 0158 50       		.byte	0x50
 4382 0159 04000000 		.4byte	.LVL30
 4383 015d 14000000 		.4byte	.LFE29
 4384 0161 0400     		.2byte	0x4
 4385 0163 F3       		.byte	0xf3
 4386 0164 01       		.uleb128 0x1
 4387 0165 50       		.byte	0x50
 4388 0166 9F       		.byte	0x9f
 4389 0167 00000000 		.4byte	0
 4390 016b 00000000 		.4byte	0
 4391              	.LLST12:
 4392 016f 00000000 		.4byte	.LVL31
 4393 0173 04000000 		.4byte	.LVL32
 4394 0177 0100     		.2byte	0x1
 4395 0179 50       		.byte	0x50
 4396 017a 04000000 		.4byte	.LVL32
 4397 017e 14000000 		.4byte	.LFE30
 4398 0182 0400     		.2byte	0x4
 4399 0184 F3       		.byte	0xf3
 4400 0185 01       		.uleb128 0x1
 4401 0186 50       		.byte	0x50
 4402 0187 9F       		.byte	0x9f
 4403 0188 00000000 		.4byte	0
 4404 018c 00000000 		.4byte	0
 4405              	.LLST13:
 4406 0190 00000000 		.4byte	.LVL34
 4407 0194 13000000 		.4byte	.LVL35-1
 4408 0198 0100     		.2byte	0x1
 4409 019a 50       		.byte	0x50
 4410 019b 13000000 		.4byte	.LVL35-1
 4411 019f 18000000 		.4byte	.LVL36
 4412 01a3 0100     		.2byte	0x1
 4413 01a5 54       		.byte	0x54
 4414 01a6 18000000 		.4byte	.LVL36
 4415 01aa 28000000 		.4byte	.LVL38
 4416 01ae 0400     		.2byte	0x4
 4417 01b0 F3       		.byte	0xf3
 4418 01b1 01       		.uleb128 0x1
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 136


 4419 01b2 50       		.byte	0x50
 4420 01b3 9F       		.byte	0x9f
 4421 01b4 28000000 		.4byte	.LVL38
 4422 01b8 2A000000 		.4byte	.LVL39
 4423 01bc 0100     		.2byte	0x1
 4424 01be 50       		.byte	0x50
 4425 01bf 2A000000 		.4byte	.LVL39
 4426 01c3 2E000000 		.4byte	.LVL40
 4427 01c7 0100     		.2byte	0x1
 4428 01c9 54       		.byte	0x54
 4429 01ca 2E000000 		.4byte	.LVL40
 4430 01ce 38000000 		.4byte	.LFE12
 4431 01d2 0400     		.2byte	0x4
 4432 01d4 F3       		.byte	0xf3
 4433 01d5 01       		.uleb128 0x1
 4434 01d6 50       		.byte	0x50
 4435 01d7 9F       		.byte	0x9f
 4436 01d8 00000000 		.4byte	0
 4437 01dc 00000000 		.4byte	0
 4438              	.LLST14:
 4439 01e0 14000000 		.4byte	.LVL35
 4440 01e4 25000000 		.4byte	.LVL37-1
 4441 01e8 0100     		.2byte	0x1
 4442 01ea 50       		.byte	0x50
 4443 01eb 00000000 		.4byte	0
 4444 01ef 00000000 		.4byte	0
 4445              	.LLST15:
 4446 01f3 00000000 		.4byte	.LVL41
 4447 01f7 0C000000 		.4byte	.LVL43
 4448 01fb 0100     		.2byte	0x1
 4449 01fd 50       		.byte	0x50
 4450 01fe 0C000000 		.4byte	.LVL43
 4451 0202 20000000 		.4byte	.LFE20
 4452 0206 0400     		.2byte	0x4
 4453 0208 F3       		.byte	0xf3
 4454 0209 01       		.uleb128 0x1
 4455 020a 50       		.byte	0x50
 4456 020b 9F       		.byte	0x9f
 4457 020c 00000000 		.4byte	0
 4458 0210 00000000 		.4byte	0
 4459              	.LLST16:
 4460 0214 00000000 		.4byte	.LVL41
 4461 0218 0F000000 		.4byte	.LVL44-1
 4462 021c 0100     		.2byte	0x1
 4463 021e 51       		.byte	0x51
 4464 021f 0F000000 		.4byte	.LVL44-1
 4465 0223 1E000000 		.4byte	.LVL46
 4466 0227 0100     		.2byte	0x1
 4467 0229 55       		.byte	0x55
 4468 022a 1E000000 		.4byte	.LVL46
 4469 022e 20000000 		.4byte	.LFE20
 4470 0232 0400     		.2byte	0x4
 4471 0234 F3       		.byte	0xf3
 4472 0235 01       		.uleb128 0x1
 4473 0236 51       		.byte	0x51
 4474 0237 9F       		.byte	0x9f
 4475 0238 00000000 		.4byte	0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 137


 4476 023c 00000000 		.4byte	0
 4477              	.LLST17:
 4478 0240 00000000 		.4byte	.LVL47
 4479 0244 0A000000 		.4byte	.LVL49
 4480 0248 0100     		.2byte	0x1
 4481 024a 50       		.byte	0x50
 4482 024b 0A000000 		.4byte	.LVL49
 4483 024f 1C000000 		.4byte	.LFE21
 4484 0253 0400     		.2byte	0x4
 4485 0255 F3       		.byte	0xf3
 4486 0256 01       		.uleb128 0x1
 4487 0257 50       		.byte	0x50
 4488 0258 9F       		.byte	0x9f
 4489 0259 00000000 		.4byte	0
 4490 025d 00000000 		.4byte	0
 4491              	.LLST18:
 4492 0261 00000000 		.4byte	.LVL51
 4493 0265 0C000000 		.4byte	.LVL53
 4494 0269 0100     		.2byte	0x1
 4495 026b 50       		.byte	0x50
 4496 026c 0C000000 		.4byte	.LVL53
 4497 0270 22000000 		.4byte	.LFE22
 4498 0274 0400     		.2byte	0x4
 4499 0276 F3       		.byte	0xf3
 4500 0277 01       		.uleb128 0x1
 4501 0278 50       		.byte	0x50
 4502 0279 9F       		.byte	0x9f
 4503 027a 00000000 		.4byte	0
 4504 027e 00000000 		.4byte	0
 4505              	.LLST19:
 4506 0282 00000000 		.4byte	.LVL51
 4507 0286 0F000000 		.4byte	.LVL54-1
 4508 028a 0100     		.2byte	0x1
 4509 028c 51       		.byte	0x51
 4510 028d 0F000000 		.4byte	.LVL54-1
 4511 0291 20000000 		.4byte	.LVL56
 4512 0295 0100     		.2byte	0x1
 4513 0297 55       		.byte	0x55
 4514 0298 20000000 		.4byte	.LVL56
 4515 029c 22000000 		.4byte	.LFE22
 4516 02a0 0400     		.2byte	0x4
 4517 02a2 F3       		.byte	0xf3
 4518 02a3 01       		.uleb128 0x1
 4519 02a4 51       		.byte	0x51
 4520 02a5 9F       		.byte	0x9f
 4521 02a6 00000000 		.4byte	0
 4522 02aa 00000000 		.4byte	0
 4523              	.LLST20:
 4524 02ae 00000000 		.4byte	.LVL57
 4525 02b2 0A000000 		.4byte	.LVL59
 4526 02b6 0100     		.2byte	0x1
 4527 02b8 50       		.byte	0x50
 4528 02b9 0A000000 		.4byte	.LVL59
 4529 02bd 1E000000 		.4byte	.LFE23
 4530 02c1 0400     		.2byte	0x4
 4531 02c3 F3       		.byte	0xf3
 4532 02c4 01       		.uleb128 0x1
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 138


 4533 02c5 50       		.byte	0x50
 4534 02c6 9F       		.byte	0x9f
 4535 02c7 00000000 		.4byte	0
 4536 02cb 00000000 		.4byte	0
 4537              	.LLST21:
 4538 02cf 00000000 		.4byte	.LVL61
 4539 02d3 0C000000 		.4byte	.LVL62
 4540 02d7 0100     		.2byte	0x1
 4541 02d9 50       		.byte	0x50
 4542 02da 0C000000 		.4byte	.LVL62
 4543 02de 4C000000 		.4byte	.LFE24
 4544 02e2 0400     		.2byte	0x4
 4545 02e4 F3       		.byte	0xf3
 4546 02e5 01       		.uleb128 0x1
 4547 02e6 50       		.byte	0x50
 4548 02e7 9F       		.byte	0x9f
 4549 02e8 00000000 		.4byte	0
 4550 02ec 00000000 		.4byte	0
 4551              	.LLST22:
 4552 02f0 00000000 		.4byte	.LVL61
 4553 02f4 0F000000 		.4byte	.LVL63-1
 4554 02f8 0100     		.2byte	0x1
 4555 02fa 51       		.byte	0x51
 4556 02fb 0F000000 		.4byte	.LVL63-1
 4557 02ff 4C000000 		.4byte	.LFE24
 4558 0303 0400     		.2byte	0x4
 4559 0305 F3       		.byte	0xf3
 4560 0306 01       		.uleb128 0x1
 4561 0307 51       		.byte	0x51
 4562 0308 9F       		.byte	0x9f
 4563 0309 00000000 		.4byte	0
 4564 030d 00000000 		.4byte	0
 4565              	.LLST23:
 4566 0311 26000000 		.4byte	.LVL66
 4567 0315 45000000 		.4byte	.LVL72-1
 4568 0319 0100     		.2byte	0x1
 4569 031b 50       		.byte	0x50
 4570 031c 00000000 		.4byte	0
 4571 0320 00000000 		.4byte	0
 4572              	.LLST24:
 4573 0324 22000000 		.4byte	.LVL65
 4574 0328 46000000 		.4byte	.LVL73
 4575 032c 0100     		.2byte	0x1
 4576 032e 55       		.byte	0x55
 4577 032f 00000000 		.4byte	0
 4578 0333 00000000 		.4byte	0
 4579              	.LLST25:
 4580 0337 32000000 		.4byte	.LVL67
 4581 033b 38000000 		.4byte	.LVL68
 4582 033f 0100     		.2byte	0x1
 4583 0341 51       		.byte	0x51
 4584 0342 3A000000 		.4byte	.LVL69
 4585 0346 3C000000 		.4byte	.LVL70
 4586 034a 0100     		.2byte	0x1
 4587 034c 51       		.byte	0x51
 4588 034d 3C000000 		.4byte	.LVL70
 4589 0351 40000000 		.4byte	.LVL71
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 139


 4590 0355 0100     		.2byte	0x1
 4591 0357 53       		.byte	0x53
 4592 0358 40000000 		.4byte	.LVL71
 4593 035c 45000000 		.4byte	.LVL72-1
 4594 0360 0100     		.2byte	0x1
 4595 0362 51       		.byte	0x51
 4596 0363 00000000 		.4byte	0
 4597 0367 00000000 		.4byte	0
 4598              	.LLST26:
 4599 036b 00000000 		.4byte	.LVL74
 4600 036f 0A000000 		.4byte	.LVL75
 4601 0373 0100     		.2byte	0x1
 4602 0375 50       		.byte	0x50
 4603 0376 0A000000 		.4byte	.LVL75
 4604 037a 2C000000 		.4byte	.LFE25
 4605 037e 0400     		.2byte	0x4
 4606 0380 F3       		.byte	0xf3
 4607 0381 01       		.uleb128 0x1
 4608 0382 50       		.byte	0x50
 4609 0383 9F       		.byte	0x9f
 4610 0384 00000000 		.4byte	0
 4611 0388 00000000 		.4byte	0
 4612              	.LLST27:
 4613 038c 24000000 		.4byte	.LVL77
 4614 0390 26000000 		.4byte	.LVL78
 4615 0394 0100     		.2byte	0x1
 4616 0396 50       		.byte	0x50
 4617 0397 00000000 		.4byte	0
 4618 039b 00000000 		.4byte	0
 4619              	.LLST28:
 4620 039f 00000000 		.4byte	.LVL79
 4621 03a3 06000000 		.4byte	.LVL80
 4622 03a7 0100     		.2byte	0x1
 4623 03a9 50       		.byte	0x50
 4624 03aa 06000000 		.4byte	.LVL80
 4625 03ae 26000000 		.4byte	.LVL84
 4626 03b2 0100     		.2byte	0x1
 4627 03b4 54       		.byte	0x54
 4628 03b5 00000000 		.4byte	0
 4629 03b9 00000000 		.4byte	0
 4630              	.LLST29:
 4631 03bd 00000000 		.4byte	.LVL85
 4632 03c1 08000000 		.4byte	.LVL86
 4633 03c5 0100     		.2byte	0x1
 4634 03c7 50       		.byte	0x50
 4635 03c8 08000000 		.4byte	.LVL86
 4636 03cc 14000000 		.4byte	.LFE34
 4637 03d0 0400     		.2byte	0x4
 4638 03d2 F3       		.byte	0xf3
 4639 03d3 01       		.uleb128 0x1
 4640 03d4 50       		.byte	0x50
 4641 03d5 9F       		.byte	0x9f
 4642 03d6 00000000 		.4byte	0
 4643 03da 00000000 		.4byte	0
 4644              	.LLST30:
 4645 03de 00000000 		.4byte	.LVL88
 4646 03e2 0F000000 		.4byte	.LVL89-1
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 140


 4647 03e6 0100     		.2byte	0x1
 4648 03e8 50       		.byte	0x50
 4649 03e9 0F000000 		.4byte	.LVL89-1
 4650 03ed D4000000 		.4byte	.LVL111
 4651 03f1 0100     		.2byte	0x1
 4652 03f3 54       		.byte	0x54
 4653 03f4 D4000000 		.4byte	.LVL111
 4654 03f8 02010000 		.4byte	.LVL114
 4655 03fc 0700     		.2byte	0x7
 4656 03fe 74       		.byte	0x74
 4657 03ff B3998080 		.sleb128 -268432205
 4657      7F
 4658 0404 9F       		.byte	0x9f
 4659 0405 02010000 		.4byte	.LVL114
 4660 0409 08010000 		.4byte	.LVL115
 4661 040d 0100     		.2byte	0x1
 4662 040f 54       		.byte	0x54
 4663 0410 08010000 		.4byte	.LVL115
 4664 0414 10010000 		.4byte	.LVL117
 4665 0418 0300     		.2byte	0x3
 4666 041a 77       		.byte	0x77
 4667 041b 03       		.sleb128 3
 4668 041c 9F       		.byte	0x9f
 4669 041d 10010000 		.4byte	.LVL117
 4670 0421 64010000 		.4byte	.LFE8
 4671 0425 0400     		.2byte	0x4
 4672 0427 F3       		.byte	0xf3
 4673 0428 01       		.uleb128 0x1
 4674 0429 50       		.byte	0x50
 4675 042a 9F       		.byte	0x9f
 4676 042b 00000000 		.4byte	0
 4677 042f 00000000 		.4byte	0
 4678              	.LLST31:
 4679 0433 2A000000 		.4byte	.LVL91
 4680 0437 34000000 		.4byte	.LVL93
 4681 043b 0100     		.2byte	0x1
 4682 043d 5A       		.byte	0x5a
 4683 043e 46000000 		.4byte	.LVL94
 4684 0442 50000000 		.4byte	.LVL96
 4685 0446 0100     		.2byte	0x1
 4686 0448 5A       		.byte	0x5a
 4687 0449 62000000 		.4byte	.LVL97
 4688 044d 6C000000 		.4byte	.LVL99
 4689 0451 0100     		.2byte	0x1
 4690 0453 5A       		.byte	0x5a
 4691 0454 7E000000 		.4byte	.LVL100
 4692 0458 88000000 		.4byte	.LVL102
 4693 045c 0100     		.2byte	0x1
 4694 045e 5A       		.byte	0x5a
 4695 045f 90000000 		.4byte	.LVL103
 4696 0463 02010000 		.4byte	.LVL114
 4697 0467 0100     		.2byte	0x1
 4698 0469 5A       		.byte	0x5a
 4699 046a 00000000 		.4byte	0
 4700 046e 00000000 		.4byte	0
 4701              	.LLST32:
 4702 0472 32000000 		.4byte	.LVL92
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 141


 4703 0476 34000000 		.4byte	.LVL93
 4704 047a 0100     		.2byte	0x1
 4705 047c 59       		.byte	0x59
 4706 047d 4E000000 		.4byte	.LVL95
 4707 0481 50000000 		.4byte	.LVL96
 4708 0485 0100     		.2byte	0x1
 4709 0487 59       		.byte	0x59
 4710 0488 6A000000 		.4byte	.LVL98
 4711 048c 6C000000 		.4byte	.LVL99
 4712 0490 0100     		.2byte	0x1
 4713 0492 59       		.byte	0x59
 4714 0493 86000000 		.4byte	.LVL101
 4715 0497 88000000 		.4byte	.LVL102
 4716 049b 0100     		.2byte	0x1
 4717 049d 59       		.byte	0x59
 4718 049e 98000000 		.4byte	.LVL104
 4719 04a2 02010000 		.4byte	.LVL114
 4720 04a6 0100     		.2byte	0x1
 4721 04a8 59       		.byte	0x59
 4722 04a9 00000000 		.4byte	0
 4723 04ad 00000000 		.4byte	0
 4724              	.LLST33:
 4725 04b1 9C000000 		.4byte	.LVL105
 4726 04b5 02010000 		.4byte	.LVL114
 4727 04b9 0100     		.2byte	0x1
 4728 04bb 56       		.byte	0x56
 4729 04bc 00000000 		.4byte	0
 4730 04c0 00000000 		.4byte	0
 4731              	.LLST34:
 4732 04c4 B0000000 		.4byte	.LVL107
 4733 04c8 B4000000 		.4byte	.LVL108
 4734 04cc 0200     		.2byte	0x2
 4735 04ce 49       		.byte	0x49
 4736 04cf 9F       		.byte	0x9f
 4737 04d0 BC000000 		.4byte	.LVL109
 4738 04d4 02010000 		.4byte	.LVL114
 4739 04d8 0100     		.2byte	0x1
 4740 04da 55       		.byte	0x55
 4741 04db 00000000 		.4byte	0
 4742 04df 00000000 		.4byte	0
 4743              	.LLST35:
 4744 04e3 12000000 		.4byte	.LVL90
 4745 04e7 AA000000 		.4byte	.LVL106
 4746 04eb 0200     		.2byte	0x2
 4747 04ed 91       		.byte	0x91
 4748 04ee 5C       		.sleb128 -36
 4749 04ef B4000000 		.4byte	.LVL108
 4750 04f3 BC000000 		.4byte	.LVL109
 4751 04f7 0200     		.2byte	0x2
 4752 04f9 91       		.byte	0x91
 4753 04fa 5C       		.sleb128 -36
 4754 04fb 02010000 		.4byte	.LVL114
 4755 04ff 08010000 		.4byte	.LVL115
 4756 0503 0200     		.2byte	0x2
 4757 0505 91       		.byte	0x91
 4758 0506 5C       		.sleb128 -36
 4759 0507 00000000 		.4byte	0
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 142


 4760 050b 00000000 		.4byte	0
 4761              	.LLST36:
 4762 050f 00000000 		.4byte	.LVL118
 4763 0513 26000000 		.4byte	.LVL120
 4764 0517 0100     		.2byte	0x1
 4765 0519 50       		.byte	0x50
 4766 051a 26000000 		.4byte	.LVL120
 4767 051e 42000000 		.4byte	.LVL125
 4768 0522 0100     		.2byte	0x1
 4769 0524 54       		.byte	0x54
 4770 0525 00000000 		.4byte	0
 4771 0529 00000000 		.4byte	0
 4772              	.LLST37:
 4773 052d 04000000 		.4byte	.LVL119
 4774 0531 42000000 		.4byte	.LVL124
 4775 0535 0200     		.2byte	0x2
 4776 0537 30       		.byte	0x30
 4777 0538 9F       		.byte	0x9f
 4778 0539 42000000 		.4byte	.LVL124
 4779 053d 54000000 		.4byte	.LFE9
 4780 0541 0100     		.2byte	0x1
 4781 0543 50       		.byte	0x50
 4782 0544 00000000 		.4byte	0
 4783 0548 00000000 		.4byte	0
 4784              	.LLST38:
 4785 054c 00000000 		.4byte	.LVL126
 4786 0550 14000000 		.4byte	.LVL127
 4787 0554 0100     		.2byte	0x1
 4788 0556 50       		.byte	0x50
 4789 0557 14000000 		.4byte	.LVL127
 4790 055b 18000000 		.4byte	.LVL128
 4791 055f 0100     		.2byte	0x1
 4792 0561 53       		.byte	0x53
 4793 0562 18000000 		.4byte	.LVL128
 4794 0566 44000000 		.4byte	.LFE13
 4795 056a 0400     		.2byte	0x4
 4796 056c F3       		.byte	0xf3
 4797 056d 01       		.uleb128 0x1
 4798 056e 50       		.byte	0x50
 4799 056f 9F       		.byte	0x9f
 4800 0570 00000000 		.4byte	0
 4801 0574 00000000 		.4byte	0
 4802              	.LLST39:
 4803 0578 00000000 		.4byte	.LVL131
 4804 057c 1A000000 		.4byte	.LVL132
 4805 0580 0100     		.2byte	0x1
 4806 0582 50       		.byte	0x50
 4807 0583 1A000000 		.4byte	.LVL132
 4808 0587 4C000000 		.4byte	.LFE35
 4809 058b 0400     		.2byte	0x4
 4810 058d F3       		.byte	0xf3
 4811 058e 01       		.uleb128 0x1
 4812 058f 50       		.byte	0x50
 4813 0590 9F       		.byte	0x9f
 4814 0591 00000000 		.4byte	0
 4815 0595 00000000 		.4byte	0
 4816              	.LLST40:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 143


 4817 0599 00000000 		.4byte	.LVL136
 4818 059d 02000000 		.4byte	.LVL137
 4819 05a1 0100     		.2byte	0x1
 4820 05a3 50       		.byte	0x50
 4821 05a4 02000000 		.4byte	.LVL137
 4822 05a8 10000000 		.4byte	.LFE42
 4823 05ac 0400     		.2byte	0x4
 4824 05ae F3       		.byte	0xf3
 4825 05af 01       		.uleb128 0x1
 4826 05b0 50       		.byte	0x50
 4827 05b1 9F       		.byte	0x9f
 4828 05b2 00000000 		.4byte	0
 4829 05b6 00000000 		.4byte	0
 4830              	.LLST41:
 4831 05ba 0C000000 		.4byte	.LVL140
 4832 05be 1C000000 		.4byte	.LVL143
 4833 05c2 0100     		.2byte	0x1
 4834 05c4 54       		.byte	0x54
 4835 05c5 1E000000 		.4byte	.LVL144
 4836 05c9 22000000 		.4byte	.LVL145
 4837 05cd 0100     		.2byte	0x1
 4838 05cf 54       		.byte	0x54
 4839 05d0 00000000 		.4byte	0
 4840 05d4 00000000 		.4byte	0
 4841              	.LLST42:
 4842 05d8 02000000 		.4byte	.LVL146
 4843 05dc 06000000 		.4byte	.LVL147
 4844 05e0 0200     		.2byte	0x2
 4845 05e2 30       		.byte	0x30
 4846 05e3 9F       		.byte	0x9f
 4847 05e4 06000000 		.4byte	.LVL147
 4848 05e8 1B000000 		.4byte	.LVL149-1
 4849 05ec 0100     		.2byte	0x1
 4850 05ee 53       		.byte	0x53
 4851 05ef 00000000 		.4byte	0
 4852 05f3 00000000 		.4byte	0
 4853              	.LLST43:
 4854 05f7 00000000 		.4byte	.LVL156
 4855 05fb 06000000 		.4byte	.LVL157
 4856 05ff 0100     		.2byte	0x1
 4857 0601 50       		.byte	0x50
 4858 0602 06000000 		.4byte	.LVL157
 4859 0606 10000000 		.4byte	.LFE49
 4860 060a 0400     		.2byte	0x4
 4861 060c F3       		.byte	0xf3
 4862 060d 01       		.uleb128 0x1
 4863 060e 50       		.byte	0x50
 4864 060f 9F       		.byte	0x9f
 4865 0610 00000000 		.4byte	0
 4866 0614 00000000 		.4byte	0
 4867              	.LLST44:
 4868 0618 00000000 		.4byte	.LVL158
 4869 061c 02000000 		.4byte	.LVL159
 4870 0620 0100     		.2byte	0x1
 4871 0622 50       		.byte	0x50
 4872 0623 02000000 		.4byte	.LVL159
 4873 0627 0C000000 		.4byte	.LFE50
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 144


 4874 062b 0400     		.2byte	0x4
 4875 062d F3       		.byte	0xf3
 4876 062e 01       		.uleb128 0x1
 4877 062f 50       		.byte	0x50
 4878 0630 9F       		.byte	0x9f
 4879 0631 00000000 		.4byte	0
 4880 0635 00000000 		.4byte	0
 4881              		.section	.debug_aranges,"",%progbits
 4882 0000 AC010000 		.4byte	0x1ac
 4883 0004 0200     		.2byte	0x2
 4884 0006 00000000 		.4byte	.Ldebug_info0
 4885 000a 04       		.byte	0x4
 4886 000b 00       		.byte	0
 4887 000c 0000     		.2byte	0
 4888 000e 0000     		.2byte	0
 4889 0010 00000000 		.4byte	.LFB2
 4890 0014 14000000 		.4byte	.LFE2-.LFB2
 4891 0018 00000000 		.4byte	.LFB3
 4892 001c 10000000 		.4byte	.LFE3-.LFB3
 4893 0020 00000000 		.4byte	.LFB4
 4894 0024 20000000 		.4byte	.LFE4-.LFB4
 4895 0028 00000000 		.4byte	.LFB5
 4896 002c 38000000 		.4byte	.LFE5-.LFB5
 4897 0030 00000000 		.4byte	.LFB6
 4898 0034 1C000000 		.4byte	.LFE6-.LFB6
 4899 0038 00000000 		.4byte	.LFB7
 4900 003c 30000000 		.4byte	.LFE7-.LFB7
 4901 0040 00000000 		.4byte	.LFB10
 4902 0044 24000000 		.4byte	.LFE10-.LFB10
 4903 0048 00000000 		.4byte	.LFB11
 4904 004c 10000000 		.4byte	.LFE11-.LFB11
 4905 0050 00000000 		.4byte	.LFB14
 4906 0054 20000000 		.4byte	.LFE14-.LFB14
 4907 0058 00000000 		.4byte	.LFB15
 4908 005c 10000000 		.4byte	.LFE15-.LFB15
 4909 0060 00000000 		.4byte	.LFB16
 4910 0064 0C000000 		.4byte	.LFE16-.LFB16
 4911 0068 00000000 		.4byte	.LFB17
 4912 006c 14000000 		.4byte	.LFE17-.LFB17
 4913 0070 00000000 		.4byte	.LFB18
 4914 0074 10000000 		.4byte	.LFE18-.LFB18
 4915 0078 00000000 		.4byte	.LFB19
 4916 007c 0C000000 		.4byte	.LFE19-.LFB19
 4917 0080 00000000 		.4byte	.LFB26
 4918 0084 14000000 		.4byte	.LFE26-.LFB26
 4919 0088 00000000 		.4byte	.LFB27
 4920 008c 18000000 		.4byte	.LFE27-.LFB27
 4921 0090 00000000 		.4byte	.LFB28
 4922 0094 14000000 		.4byte	.LFE28-.LFB28
 4923 0098 00000000 		.4byte	.LFB29
 4924 009c 14000000 		.4byte	.LFE29-.LFB29
 4925 00a0 00000000 		.4byte	.LFB30
 4926 00a4 14000000 		.4byte	.LFE30-.LFB30
 4927 00a8 00000000 		.4byte	.LFB31
 4928 00ac 04000000 		.4byte	.LFE31-.LFB31
 4929 00b0 00000000 		.4byte	.LFB12
 4930 00b4 38000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 145


 4931 00b8 00000000 		.4byte	.LFB20
 4932 00bc 20000000 		.4byte	.LFE20-.LFB20
 4933 00c0 00000000 		.4byte	.LFB21
 4934 00c4 1C000000 		.4byte	.LFE21-.LFB21
 4935 00c8 00000000 		.4byte	.LFB22
 4936 00cc 22000000 		.4byte	.LFE22-.LFB22
 4937 00d0 00000000 		.4byte	.LFB23
 4938 00d4 1E000000 		.4byte	.LFE23-.LFB23
 4939 00d8 00000000 		.4byte	.LFB24
 4940 00dc 4C000000 		.4byte	.LFE24-.LFB24
 4941 00e0 00000000 		.4byte	.LFB25
 4942 00e4 2C000000 		.4byte	.LFE25-.LFB25
 4943 00e8 00000000 		.4byte	.LFB32
 4944 00ec 18000000 		.4byte	.LFE32-.LFB32
 4945 00f0 00000000 		.4byte	.LFB33
 4946 00f4 30000000 		.4byte	.LFE33-.LFB33
 4947 00f8 00000000 		.4byte	.LFB34
 4948 00fc 14000000 		.4byte	.LFE34-.LFB34
 4949 0100 00000000 		.4byte	.LFB8
 4950 0104 64010000 		.4byte	.LFE8-.LFB8
 4951 0108 00000000 		.4byte	.LFB9
 4952 010c 54000000 		.4byte	.LFE9-.LFB9
 4953 0110 00000000 		.4byte	.LFB13
 4954 0114 44000000 		.4byte	.LFE13-.LFB13
 4955 0118 00000000 		.4byte	.LFB35
 4956 011c 4C000000 		.4byte	.LFE35-.LFB35
 4957 0120 00000000 		.4byte	.LFB39
 4958 0124 10000000 		.4byte	.LFE39-.LFB39
 4959 0128 00000000 		.4byte	.LFB40
 4960 012c 10000000 		.4byte	.LFE40-.LFB40
 4961 0130 00000000 		.4byte	.LFB38
 4962 0134 18000000 		.4byte	.LFE38-.LFB38
 4963 0138 00000000 		.4byte	.LFB41
 4964 013c 10000000 		.4byte	.LFE41-.LFB41
 4965 0140 00000000 		.4byte	.LFB42
 4966 0144 10000000 		.4byte	.LFE42-.LFB42
 4967 0148 00000000 		.4byte	.LFB43
 4968 014c 10000000 		.4byte	.LFE43-.LFB43
 4969 0150 00000000 		.4byte	.LFB44
 4970 0154 10000000 		.4byte	.LFE44-.LFB44
 4971 0158 00000000 		.4byte	.LFB45
 4972 015c 20000000 		.4byte	.LFE45-.LFB45
 4973 0160 00000000 		.4byte	.LFB46
 4974 0164 10000000 		.4byte	.LFE46-.LFB46
 4975 0168 00000000 		.4byte	.LFB47
 4976 016c 10000000 		.4byte	.LFE47-.LFB47
 4977 0170 00000000 		.4byte	.LFB51
 4978 0174 28000000 		.4byte	.LFE51-.LFB51
 4979 0178 00000000 		.4byte	.LFB48
 4980 017c 0C000000 		.4byte	.LFE48-.LFB48
 4981 0180 00000000 		.4byte	.LFB37
 4982 0184 44000000 		.4byte	.LFE37-.LFB37
 4983 0188 00000000 		.4byte	.LFB36
 4984 018c 20000000 		.4byte	.LFE36-.LFB36
 4985 0190 00000000 		.4byte	.LFB49
 4986 0194 10000000 		.4byte	.LFE49-.LFB49
 4987 0198 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 146


 4988 019c 0C000000 		.4byte	.LFE50-.LFB50
 4989 01a0 00000000 		.4byte	.LFB52
 4990 01a4 70000000 		.4byte	.LFE52-.LFB52
 4991 01a8 00000000 		.4byte	0
 4992 01ac 00000000 		.4byte	0
 4993              		.section	.debug_ranges,"",%progbits
 4994              	.Ldebug_ranges0:
 4995 0000 00000000 		.4byte	.LFB2
 4996 0004 14000000 		.4byte	.LFE2
 4997 0008 00000000 		.4byte	.LFB3
 4998 000c 10000000 		.4byte	.LFE3
 4999 0010 00000000 		.4byte	.LFB4
 5000 0014 20000000 		.4byte	.LFE4
 5001 0018 00000000 		.4byte	.LFB5
 5002 001c 38000000 		.4byte	.LFE5
 5003 0020 00000000 		.4byte	.LFB6
 5004 0024 1C000000 		.4byte	.LFE6
 5005 0028 00000000 		.4byte	.LFB7
 5006 002c 30000000 		.4byte	.LFE7
 5007 0030 00000000 		.4byte	.LFB10
 5008 0034 24000000 		.4byte	.LFE10
 5009 0038 00000000 		.4byte	.LFB11
 5010 003c 10000000 		.4byte	.LFE11
 5011 0040 00000000 		.4byte	.LFB14
 5012 0044 20000000 		.4byte	.LFE14
 5013 0048 00000000 		.4byte	.LFB15
 5014 004c 10000000 		.4byte	.LFE15
 5015 0050 00000000 		.4byte	.LFB16
 5016 0054 0C000000 		.4byte	.LFE16
 5017 0058 00000000 		.4byte	.LFB17
 5018 005c 14000000 		.4byte	.LFE17
 5019 0060 00000000 		.4byte	.LFB18
 5020 0064 10000000 		.4byte	.LFE18
 5021 0068 00000000 		.4byte	.LFB19
 5022 006c 0C000000 		.4byte	.LFE19
 5023 0070 00000000 		.4byte	.LFB26
 5024 0074 14000000 		.4byte	.LFE26
 5025 0078 00000000 		.4byte	.LFB27
 5026 007c 18000000 		.4byte	.LFE27
 5027 0080 00000000 		.4byte	.LFB28
 5028 0084 14000000 		.4byte	.LFE28
 5029 0088 00000000 		.4byte	.LFB29
 5030 008c 14000000 		.4byte	.LFE29
 5031 0090 00000000 		.4byte	.LFB30
 5032 0094 14000000 		.4byte	.LFE30
 5033 0098 00000000 		.4byte	.LFB31
 5034 009c 04000000 		.4byte	.LFE31
 5035 00a0 00000000 		.4byte	.LFB12
 5036 00a4 38000000 		.4byte	.LFE12
 5037 00a8 00000000 		.4byte	.LFB20
 5038 00ac 20000000 		.4byte	.LFE20
 5039 00b0 00000000 		.4byte	.LFB21
 5040 00b4 1C000000 		.4byte	.LFE21
 5041 00b8 00000000 		.4byte	.LFB22
 5042 00bc 22000000 		.4byte	.LFE22
 5043 00c0 00000000 		.4byte	.LFB23
 5044 00c4 1E000000 		.4byte	.LFE23
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 147


 5045 00c8 00000000 		.4byte	.LFB24
 5046 00cc 4C000000 		.4byte	.LFE24
 5047 00d0 00000000 		.4byte	.LFB25
 5048 00d4 2C000000 		.4byte	.LFE25
 5049 00d8 00000000 		.4byte	.LFB32
 5050 00dc 18000000 		.4byte	.LFE32
 5051 00e0 00000000 		.4byte	.LFB33
 5052 00e4 30000000 		.4byte	.LFE33
 5053 00e8 00000000 		.4byte	.LFB34
 5054 00ec 14000000 		.4byte	.LFE34
 5055 00f0 00000000 		.4byte	.LFB8
 5056 00f4 64010000 		.4byte	.LFE8
 5057 00f8 00000000 		.4byte	.LFB9
 5058 00fc 54000000 		.4byte	.LFE9
 5059 0100 00000000 		.4byte	.LFB13
 5060 0104 44000000 		.4byte	.LFE13
 5061 0108 00000000 		.4byte	.LFB35
 5062 010c 4C000000 		.4byte	.LFE35
 5063 0110 00000000 		.4byte	.LFB39
 5064 0114 10000000 		.4byte	.LFE39
 5065 0118 00000000 		.4byte	.LFB40
 5066 011c 10000000 		.4byte	.LFE40
 5067 0120 00000000 		.4byte	.LFB38
 5068 0124 18000000 		.4byte	.LFE38
 5069 0128 00000000 		.4byte	.LFB41
 5070 012c 10000000 		.4byte	.LFE41
 5071 0130 00000000 		.4byte	.LFB42
 5072 0134 10000000 		.4byte	.LFE42
 5073 0138 00000000 		.4byte	.LFB43
 5074 013c 10000000 		.4byte	.LFE43
 5075 0140 00000000 		.4byte	.LFB44
 5076 0144 10000000 		.4byte	.LFE44
 5077 0148 00000000 		.4byte	.LFB45
 5078 014c 20000000 		.4byte	.LFE45
 5079 0150 00000000 		.4byte	.LFB46
 5080 0154 10000000 		.4byte	.LFE46
 5081 0158 00000000 		.4byte	.LFB47
 5082 015c 10000000 		.4byte	.LFE47
 5083 0160 00000000 		.4byte	.LFB51
 5084 0164 28000000 		.4byte	.LFE51
 5085 0168 00000000 		.4byte	.LFB48
 5086 016c 0C000000 		.4byte	.LFE48
 5087 0170 00000000 		.4byte	.LFB37
 5088 0174 44000000 		.4byte	.LFE37
 5089 0178 00000000 		.4byte	.LFB36
 5090 017c 20000000 		.4byte	.LFE36
 5091 0180 00000000 		.4byte	.LFB49
 5092 0184 10000000 		.4byte	.LFE49
 5093 0188 00000000 		.4byte	.LFB50
 5094 018c 0C000000 		.4byte	.LFE50
 5095 0190 00000000 		.4byte	.LFB52
 5096 0194 70000000 		.4byte	.LFE52
 5097 0198 00000000 		.4byte	0
 5098 019c 00000000 		.4byte	0
 5099              		.section	.debug_line,"",%progbits
 5100              	.Ldebug_line0:
 5101 0000 F1040000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 148


 5101      02004D00 
 5101      00000201 
 5101      FB0E0D00 
 5101      01010101 
 5102              	.LASF57:
 5103 0000 72616D56 		.ascii	"ramVectorTable\000"
 5103      6563746F 
 5103      72546162 
 5103      6C6500
 5104              	.LASF73:
 5105 000f 62675472 		.ascii	"bgTrim4\000"
 5105      696D3400 
 5106              	.LASF10:
 5107 0017 75696E74 		.ascii	"uint16\000"
 5107      313600
 5108              	.LASF43:
 5109 001e 696E7453 		.ascii	"intState\000"
 5109      74617465 
 5109      00
 5110              	.LASF26:
 5111 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5111      73436C6B 
 5111      57726974 
 5111      65486663 
 5111      6C6B4469 
 5112              	.LASF110:
 5113 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 5113      73436C6B 
 5113      50756D70 
 5113      436F6E66 
 5113      696700
 5114              	.LASF56:
 5115 0053 6F6C6449 		.ascii	"oldIsr\000"
 5115      737200
 5116              	.LASF99:
 5117 005a 72657456 		.ascii	"retVal\000"
 5117      616C00
 5118              	.LASF42:
 5119 0061 43794469 		.ascii	"CyDisableInts\000"
 5119      7361626C 
 5119      65496E74 
 5119      7300
 5120              	.LASF76:
 5121 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5121      656E7449 
 5121      6D6F5472 
 5121      696D3256 
 5121      616C7565 
 5122              	.LASF114:
 5123 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5123      43313120 
 5123      352E342E 
 5123      31203230 
 5123      31363036 
 5124 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5124      20726576 
 5124      6973696F 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 149


 5124      6E203233 
 5124      37373135 
 5125 00ea 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5125      66756E63 
 5125      74696F6E 
 5125      2D736563 
 5125      74696F6E 
 5126              	.LASF7:
 5127 0112 6C6F6E67 		.ascii	"long long unsigned int\000"
 5127      206C6F6E 
 5127      6720756E 
 5127      7369676E 
 5127      65642069 
 5128              	.LASF108:
 5129 0129 43795379 		.ascii	"CySysTickInitVar\000"
 5129      73546963 
 5129      6B496E69 
 5129      74566172 
 5129      00
 5130              	.LASF44:
 5131 013a 4379456E 		.ascii	"CyEnableInts\000"
 5131      61626C65 
 5131      496E7473 
 5131      00
 5132              	.LASF66:
 5133 0147 4379536F 		.ascii	"CySoftwareReset\000"
 5133      66747761 
 5133      72655265 
 5133      73657400 
 5134              	.LASF83:
 5135 0157 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5135      73546963 
 5135      6B456E61 
 5135      626C6549 
 5135      6E746572 
 5136              	.LASF48:
 5137 0170 4379496E 		.ascii	"CyIntGetState\000"
 5137      74476574 
 5137      53746174 
 5137      6500
 5138              	.LASF6:
 5139 017e 6C6F6E67 		.ascii	"long long int\000"
 5139      206C6F6E 
 5139      6720696E 
 5139      7400
 5140              	.LASF0:
 5141 018c 7369676E 		.ascii	"signed char\000"
 5141      65642063 
 5141      68617200 
 5142              	.LASF72:
 5143 0198 66726571 		.ascii	"freq\000"
 5143      00
 5144              	.LASF81:
 5145 019d 43794465 		.ascii	"CyDelayFreq\000"
 5145      6C617946 
 5145      72657100 
 5146              	.LASF24:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 150


 5147 01a9 696E7465 		.ascii	"interruptState\000"
 5147      72727570 
 5147      74537461 
 5147      746500
 5148              	.LASF88:
 5149 01b8 43795379 		.ascii	"CySysTickGetReload\000"
 5149      73546963 
 5149      6B476574 
 5149      52656C6F 
 5149      616400
 5150              	.LASF4:
 5151 01cb 6C6F6E67 		.ascii	"long int\000"
 5151      20696E74 
 5151      00
 5152              	.LASF49:
 5153 01d4 4379496E 		.ascii	"CyIntDisable\000"
 5153      74446973 
 5153      61626C65 
 5153      00
 5154              	.LASF100:
 5155 01e1 43795379 		.ascii	"CySysTickGetCallback\000"
 5155      73546963 
 5155      6B476574 
 5155      43616C6C 
 5155      6261636B 
 5156              	.LASF9:
 5157 01f6 75696E74 		.ascii	"uint8\000"
 5157      3800
 5158              	.LASF105:
 5159 01fc 63796465 		.ascii	"cydelayFreqKhz\000"
 5159      6C617946 
 5159      7265714B 
 5159      687A00
 5160              	.LASF29:
 5161 020b 656E6162 		.ascii	"enable\000"
 5161      6C6500
 5162              	.LASF13:
 5163 0212 646F7562 		.ascii	"double\000"
 5163      6C6500
 5164              	.LASF63:
 5165 0219 73686966 		.ascii	"shift\000"
 5165      7400
 5166              	.LASF38:
 5167 021f 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5167      734C7664 
 5167      436C6561 
 5167      72496E74 
 5167      65727275 
 5168              	.LASF11:
 5169 0236 75696E74 		.ascii	"uint32\000"
 5169      333200
 5170              	.LASF35:
 5171 023d 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5171      73436C6B 
 5171      45636F52 
 5171      65616453 
 5171      74617475 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 151


 5172              	.LASF45:
 5173 0253 6D61736B 		.ascii	"mask\000"
 5173      00
 5174              	.LASF34:
 5175 0258 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5175      73436C6B 
 5175      47657453 
 5175      7973636C 
 5175      6B536F75 
 5176              	.LASF65:
 5177 0270 4379496E 		.ascii	"CyIntGetPriority\000"
 5177      74476574 
 5177      5072696F 
 5177      72697479 
 5177      00
 5178              	.LASF107:
 5179 0281 63796465 		.ascii	"cydelay32kMs\000"
 5179      6C617933 
 5179      326B4D73 
 5179      00
 5180              	.LASF95:
 5181 028e 43795379 		.ascii	"CySysTickInit\000"
 5181      73546963 
 5181      6B496E69 
 5181      7400
 5182              	.LASF64:
 5183 029c 76616C75 		.ascii	"value\000"
 5183      6500
 5184              	.LASF91:
 5185 02a2 636C6F63 		.ascii	"clockSource\000"
 5185      6B536F75 
 5185      72636500 
 5186              	.LASF101:
 5187 02ae 43794765 		.ascii	"CyGetUniqueId\000"
 5187      74556E69 
 5187      71756549 
 5187      6400
 5188              	.LASF93:
 5189 02bc 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5189      73546963 
 5189      6B476574 
 5189      436F756E 
 5189      74466C61 
 5190              	.LASF8:
 5191 02d2 756E7369 		.ascii	"unsigned int\000"
 5191      676E6564 
 5191      20696E74 
 5191      00
 5192              	.LASF94:
 5193 02df 43795379 		.ascii	"CySysTickClear\000"
 5193      73546963 
 5193      6B436C65 
 5193      617200
 5194              	.LASF5:
 5195 02ee 6C6F6E67 		.ascii	"long unsigned int\000"
 5195      20756E73 
 5195      69676E65 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 152


 5195      6420696E 
 5195      7400
 5196              	.LASF87:
 5197 0300 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5197      734C7664 
 5197      47657449 
 5197      6E746572 
 5197      72757074 
 5198              	.LASF23:
 5199 031b 43795379 		.ascii	"CySysClkImoStop\000"
 5199      73436C6B 
 5199      496D6F53 
 5199      746F7000 
 5200              	.LASF111:
 5201 032b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5201      74657243 
 5201      72697469 
 5201      63616C53 
 5201      65637469 
 5202              	.LASF50:
 5203 0342 4379496E 		.ascii	"CyIntSetPending\000"
 5203      74536574 
 5203      50656E64 
 5203      696E6700 
 5204              	.LASF39:
 5205 0352 43795379 		.ascii	"CySysGetResetReason\000"
 5205      73476574 
 5205      52657365 
 5205      74526561 
 5205      736F6E00 
 5206              	.LASF3:
 5207 0366 73686F72 		.ascii	"short unsigned int\000"
 5207      7420756E 
 5207      7369676E 
 5207      65642069 
 5207      6E7400
 5208              	.LASF90:
 5209 0379 43795379 		.ascii	"CySysTickSetClockSource\000"
 5209      73546963 
 5209      6B536574 
 5209      436C6F63 
 5209      6B536F75 
 5210              	.LASF59:
 5211 0391 4379496E 		.ascii	"CyIntSetVector\000"
 5211      74536574 
 5211      56656374 
 5211      6F7200
 5212              	.LASF47:
 5213 03a0 6E756D62 		.ascii	"number\000"
 5213      657200
 5214              	.LASF62:
 5215 03a7 7072696F 		.ascii	"priority\000"
 5215      72697479 
 5215      00
 5216              	.LASF71:
 5217 03b0 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5217      73436C6B 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 153


 5217      57726974 
 5217      65496D6F 
 5217      46726571 
 5218              	.LASF54:
 5219 03c5 4379496E 		.ascii	"CyIntSetSysVector\000"
 5219      74536574 
 5219      53797356 
 5219      6563746F 
 5219      7200
 5220              	.LASF27:
 5221 03d7 43795379 		.ascii	"CySysEnablePumpClock\000"
 5221      73456E61 
 5221      626C6550 
 5221      756D7043 
 5221      6C6F636B 
 5222              	.LASF17:
 5223 03ec 72656733 		.ascii	"reg32\000"
 5223      3200
 5224              	.LASF96:
 5225 03f2 43795379 		.ascii	"CySysTickStart\000"
 5225      73546963 
 5225      6B537461 
 5225      727400
 5226              	.LASF41:
 5227 0401 72657475 		.ascii	"returnStatus\000"
 5227      726E5374 
 5227      61747573 
 5227      00
 5228              	.LASF20:
 5229 040e 73697A65 		.ascii	"sizetype\000"
 5229      74797065 
 5229      00
 5230              	.LASF51:
 5231 0417 4379496E 		.ascii	"CyIntClearPending\000"
 5231      74436C65 
 5231      61725065 
 5231      6E64696E 
 5231      6700
 5232              	.LASF19:
 5233 0429 6C6F6E67 		.ascii	"long double\000"
 5233      20646F75 
 5233      626C6500 
 5234              	.LASF55:
 5235 0435 61646472 		.ascii	"address\000"
 5235      65737300 
 5236              	.LASF74:
 5237 043d 62675472 		.ascii	"bgTrim5\000"
 5237      696D3500 
 5238              	.LASF30:
 5239 0445 73797363 		.ascii	"sysclkSource\000"
 5239      6C6B536F 
 5239      75726365 
 5239      00
 5240              	.LASF98:
 5241 0452 66756E63 		.ascii	"function\000"
 5241      74696F6E 
 5241      00
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 154


 5242              	.LASF109:
 5243 045b 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5243      6F467265 
 5243      714D687A 
 5243      32526567 
 5243      00
 5244              	.LASF89:
 5245 046c 43795379 		.ascii	"CySysTickGetValue\000"
 5245      73546963 
 5245      6B476574 
 5245      56616C75 
 5245      6500
 5246              	.LASF104:
 5247 047e 63796465 		.ascii	"cydelayFreqHz\000"
 5247      6C617946 
 5247      72657148 
 5247      7A00
 5248              	.LASF61:
 5249 048c 4379496E 		.ascii	"CyIntSetPriority\000"
 5249      74536574 
 5249      5072696F 
 5249      72697479 
 5249      00
 5250              	.LASF116:
 5251 049d 433A5C55 		.ascii	"C:\\Users\\johnn\\Documents\\PSoC Creator\\Kevin_BL"
 5251      73657273 
 5251      5C6A6F68 
 5251      6E6E5C44 
 5251      6F63756D 
 5252 04cb 455F4932 		.ascii	"E_I2C.cydsn\000"
 5252      432E6379 
 5252      64736E00 
 5253              	.LASF12:
 5254 04d7 666C6F61 		.ascii	"float\000"
 5254      7400
 5255              	.LASF112:
 5256 04dd 43794578 		.ascii	"CyExitCriticalSection\000"
 5256      69744372 
 5256      69746963 
 5256      616C5365 
 5256      6374696F 
 5257              	.LASF79:
 5258 04f3 43795379 		.ascii	"CySysLvdEnable\000"
 5258      734C7664 
 5258      456E6162 
 5258      6C6500
 5259              	.LASF21:
 5260 0502 63795379 		.ascii	"cySysTickCallback\000"
 5260      73546963 
 5260      6B43616C 
 5260      6C626163 
 5260      6B00
 5261              	.LASF60:
 5262 0514 4379496E 		.ascii	"CyIntGetVector\000"
 5262      74476574 
 5262      56656374 
 5262      6F7200
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 155


 5263              	.LASF68:
 5264 0523 6D696C6C 		.ascii	"milliseconds\000"
 5264      69736563 
 5264      6F6E6473 
 5264      00
 5265              	.LASF113:
 5266 0530 43794465 		.ascii	"CyDelayCycles\000"
 5266      6C617943 
 5266      79636C65 
 5266      7300
 5267              	.LASF16:
 5268 053e 72656738 		.ascii	"reg8\000"
 5268      00
 5269              	.LASF80:
 5270 0543 74687265 		.ascii	"threshold\000"
 5270      73686F6C 
 5270      6400
 5271              	.LASF52:
 5272 054d 43794861 		.ascii	"CyHalt\000"
 5272      6C7400
 5273              	.LASF1:
 5274 0554 756E7369 		.ascii	"unsigned char\000"
 5274      676E6564 
 5274      20636861 
 5274      7200
 5275              	.LASF2:
 5276 0562 73686F72 		.ascii	"short int\000"
 5276      7420696E 
 5276      7400
 5277              	.LASF46:
 5278 056c 4379496E 		.ascii	"CyIntEnable\000"
 5278      74456E61 
 5278      626C6500 
 5279              	.LASF58:
 5280 0578 4379496E 		.ascii	"CyIntGetSysVector\000"
 5280      74476574 
 5280      53797356 
 5280      6563746F 
 5280      7200
 5281              	.LASF28:
 5282 058a 636C6B53 		.ascii	"clkSelect\000"
 5282      656C6563 
 5282      7400
 5283              	.LASF77:
 5284 0594 43795379 		.ascii	"CySysClkEcoStart\000"
 5284      73436C6B 
 5284      45636F53 
 5284      74617274 
 5284      00
 5285              	.LASF69:
 5286 05a5 43794465 		.ascii	"CyDelayUs\000"
 5286      6C617955 
 5286      7300
 5287              	.LASF40:
 5288 05af 72656173 		.ascii	"reason\000"
 5288      6F6E00
 5289              	.LASF14:
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 156


 5290 05b6 63686172 		.ascii	"char\000"
 5290      00
 5291              	.LASF18:
 5292 05bb 63796973 		.ascii	"cyisraddress\000"
 5292      72616464 
 5292      72657373 
 5292      00
 5293              	.LASF84:
 5294 05c8 43795379 		.ascii	"CySysTickEnable\000"
 5294      73546963 
 5294      6B456E61 
 5294      626C6500 
 5295              	.LASF31:
 5296 05d8 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5296      73436C6B 
 5296      57726974 
 5296      65537973 
 5296      636C6B44 
 5297              	.LASF97:
 5298 05ef 43795379 		.ascii	"CySysTickSetCallback\000"
 5298      73546963 
 5298      6B536574 
 5298      43616C6C 
 5298      6261636B 
 5299              	.LASF103:
 5300 0604 43795379 		.ascii	"CySysTickCallbacks\000"
 5300      73546963 
 5300      6B43616C 
 5300      6C626163 
 5300      6B7300
 5301              	.LASF102:
 5302 0617 756E6971 		.ascii	"uniqueId\000"
 5302      75654964 
 5302      00
 5303              	.LASF67:
 5304 0620 43794465 		.ascii	"CyDelay\000"
 5304      6C617900 
 5305              	.LASF92:
 5306 0628 43795379 		.ascii	"CySysTickGetClockSource\000"
 5306      73546963 
 5306      6B476574 
 5306      436C6F63 
 5306      6B536F75 
 5307              	.LASF85:
 5308 0640 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5308      73546963 
 5308      6B446973 
 5308      61626C65 
 5308      496E7465 
 5309              	.LASF37:
 5310 065a 43795379 		.ascii	"CySysLvdDisable\000"
 5310      734C7664 
 5310      44697361 
 5310      626C6500 
 5311              	.LASF106:
 5312 066a 63796465 		.ascii	"cydelayFreqMhz\000"
 5312      6C617946 
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 157


 5312      7265714D 
 5312      687A00
 5313              	.LASF33:
 5314 0679 43795379 		.ascii	"CySysClkEcoStop\000"
 5314      73436C6B 
 5314      45636F53 
 5314      746F7000 
 5315              	.LASF82:
 5316 0689 43795379 		.ascii	"CySysTickStop\000"
 5316      73546963 
 5316      6B53746F 
 5316      7000
 5317              	.LASF78:
 5318 0697 74696D65 		.ascii	"timeoutUs\000"
 5318      6F757455 
 5318      7300
 5319              	.LASF32:
 5320 06a1 64697669 		.ascii	"divider\000"
 5320      64657200 
 5321              	.LASF53:
 5322 06a9 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5322      73436C6B 
 5322      57726974 
 5322      6545636F 
 5322      44697600 
 5323              	.LASF15:
 5324 06bd 63797374 		.ascii	"cystatus\000"
 5324      61747573 
 5324      00
 5325              	.LASF22:
 5326 06c6 43795379 		.ascii	"CySysClkImoStart\000"
 5326      73436C6B 
 5326      496D6F53 
 5326      74617274 
 5326      00
 5327              	.LASF75:
 5328 06d7 6E657749 		.ascii	"newImoTrim2Value\000"
 5328      6D6F5472 
 5328      696D3256 
 5328      616C7565 
 5328      00
 5329              	.LASF115:
 5330 06e8 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5330      72617465 
 5330      645F536F 
 5330      75726365 
 5330      5C50536F 
 5331              	.LASF70:
 5332 0707 6D696372 		.ascii	"microseconds\000"
 5332      6F736563 
 5332      6F6E6473 
 5332      00
 5333              	.LASF25:
 5334 0714 746D7052 		.ascii	"tmpReg\000"
 5334      656700
 5335              	.LASF86:
 5336 071b 43795379 		.ascii	"CySysTickSetReload\000"
ARM GAS  C:\Users\johnn\AppData\Local\Temp\cc85M4FD.s 			page 158


 5336      73546963 
 5336      6B536574 
 5336      52656C6F 
 5336      616400
 5337              	.LASF117:
 5338 072e 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5338      73546963 
 5338      6B536572 
 5338      76696365 
 5338      43616C6C 
 5339              	.LASF36:
 5340 0748 72657475 		.ascii	"returnValue\000"
 5340      726E5661 
 5340      6C756500 
 5341              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
